import { NgModule } from '@angular/core';
import { CoreModule, LazyModuleFactory } from '@abp/ng.core';
import { ThemeSharedModule } from '@abp/ng.theme.shared';
import { OfComponent } from './components/of.component';
import { OfRoutingModule } from './of-routing.module';
import { AntDesignModule } from '../ant-design.module';
import { OfFieldComponent } from './components/of-template-ref/of-field.component';
import { OfDynamicComponent } from './components/of-dynamic/of-dynamic.component';
import { OfCheckBoxComponent } from './components/of-check-box/of-check-box.component';
import { DynamicFieldDirective } from './directives/dynamic-field.directive';
import { OfTextComponent } from './components/of-text/of-text.component';
import { OfCurrencyComponent } from './components/of-currency/of-currency.component';
import { OfDatePickerComponent } from './components/of-date-picker/of-date-picker.component';
import { OfNumberInputComponent } from './components/of-number-input/of-number-input.component';
import { OfTextAreaComponent } from './components/of-text-area/of-text-area.component';
import { OfDataPickerControlComponent } from './components/of-date-picker/of-data-picker-control.component';
import { OfContentHtmlComponent } from './components/of-content-html/of-content-html.component';
import { NumbersOnlyDirective } from './directives/numbers-only.directive';
import { OfPasswordComponent } from './components/of-password/of-password.component';
import { OfRadioComponent } from './components/of-radio/of-radio.component';
import { OfSwitchComponent } from './components/of-switch/of-switch.component';
import { OfSelectSearchServerComponent } from './components/of-select-search-server/of-select-search-server.component';
import { OfTemplateRefComponent } from './components/of-template-ref/of-template-ref.component';
import { ShowValidationErrorPipe } from './pipes/show-validation-error.pipe';
import { CurrencyMaskModule } from 'ng2-currency-mask';
import { TextMaskModule } from 'angular2-text-mask';
import { OfOptionSelectedPipe } from './pipes/of-option-selected.pipe';
import { OfSelectRenderOptionPipe } from './pipes/of-select-render-option.pipe';
import { OfSelectComponent } from './components/of-select/of-select.component';
import { OfSelectAsyncComponent } from './components/of-select-async/of-select-async.component';
import { OfSelectApiComponent } from './components/of-select-api/of-select-api.component';
import { OfSelectCascadeComponent } from './components/of-select-cascade/of-select-cascade.component';
const Of = [
    OfDynamicComponent,
    DynamicFieldDirective,
    OfTextComponent,
    ShowValidationErrorPipe,
    OfCheckBoxComponent,
    OfCurrencyComponent,
    OfDatePickerComponent,
    OfDataPickerControlComponent,
    OfTextAreaComponent,
    OfContentHtmlComponent,
    OfNumberInputComponent,
    NumbersOnlyDirective,
    OfPasswordComponent,
    OfRadioComponent,
    OfSwitchComponent,
    OfOptionSelectedPipe,
    OfSelectRenderOptionPipe,
    OfSelectSearchServerComponent,
    OfTemplateRefComponent,
    OfFieldComponent,
    OfSelectComponent,
    OfSelectAsyncComponent,
    OfSelectApiComponent,
    OfSelectCascadeComponent
];
export class OfModule {
    static forChild() {
        return {
            ngModule: OfModule,
            providers: []
        };
    }
    static forLazy() {
        return new LazyModuleFactory(OfModule.forChild());
    }
}
OfModule.decorators = [
    { type: NgModule, args: [{
                declarations: [OfComponent, Of],
                imports: [CoreModule,
                    ThemeSharedModule,
                    OfRoutingModule,
                    AntDesignModule,
                    CurrencyMaskModule,
                    TextMaskModule],
                exports: [
                    OfComponent,
                    OfDynamicComponent,
                    OfFieldComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,