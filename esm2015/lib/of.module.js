import { NgModule } from '@angular/core';
import { AntDesignModule } from '../ant-design/ant-design.module';
import { OfFieldComponent } from './components/of-template-ref/of-field.component';
import { OfDynamicComponent } from './components/of-dynamic/of-dynamic.component';
import { OfCheckBoxComponent } from './components/of-check-box/of-check-box.component';
import { DynamicFieldDirective } from './directives/dynamic-field.directive';
import { OfTextComponent } from './components/of-text/of-text.component';
import { OfCurrencyComponent } from './components/of-currency/of-currency.component';
import { OfDatePickerComponent } from './components/of-date-picker/of-date-picker.component';
import { OfNumberInputComponent } from './components/of-number-input/of-number-input.component';
import { OfTextAreaComponent } from './components/of-text-area/of-text-area.component';
import { OfDataPickerControlComponent } from './components/of-date-picker/of-data-picker-control.component';
import { OfContentHtmlComponent } from './components/of-content-html/of-content-html.component';
import { NumbersOnlyDirective } from './directives/numbers-only.directive';
import { OfPasswordComponent } from './components/of-password/of-password.component';
import { OfRadioComponent } from './components/of-radio/of-radio.component';
import { OfSwitchComponent } from './components/of-switch/of-switch.component';
import { OfSelectSearchServerComponent } from './components/of-select-search-server/of-select-search-server.component';
import { OfTemplateRefComponent } from './components/of-template-ref/of-template-ref.component';
import { ShowValidationErrorPipe } from './pipes/show-validation-error.pipe';
import { CurrencyMaskModule } from 'ng2-currency-mask';
import { TextMaskModule } from 'angular2-text-mask';
import { OfOptionSelectedPipe } from './pipes/of-option-selected.pipe';
import { OfSelectRenderOptionPipe } from './pipes/of-select-render-option.pipe';
import { OfSelectComponent } from './components/of-select/of-select.component';
import { OfSelectAsyncComponent } from './components/of-select-async/of-select-async.component';
import { OfSelectApiComponent } from './components/of-select-api/of-select-api.component';
import { OfSelectCascadeComponent } from './components/of-select-cascade/of-select-cascade.component';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
const Of = [
    OfDynamicComponent,
    DynamicFieldDirective,
    OfTextComponent,
    ShowValidationErrorPipe,
    OfCheckBoxComponent,
    OfCurrencyComponent,
    OfDatePickerComponent,
    OfDataPickerControlComponent,
    OfTextAreaComponent,
    OfContentHtmlComponent,
    OfNumberInputComponent,
    NumbersOnlyDirective,
    OfPasswordComponent,
    OfRadioComponent,
    OfSwitchComponent,
    OfOptionSelectedPipe,
    OfSelectRenderOptionPipe,
    OfSelectSearchServerComponent,
    OfTemplateRefComponent,
    OfFieldComponent,
    OfSelectComponent,
    OfSelectAsyncComponent,
    OfSelectApiComponent,
    OfSelectCascadeComponent
];
const entryComponents = [
    OfCheckBoxComponent,
    OfTextAreaComponent,
    OfTextComponent,
    OfSelectComponent,
    OfSelectAsyncComponent,
    OfSelectApiComponent,
    OfSelectCascadeComponent,
    OfSelectSearchServerComponent,
    OfCurrencyComponent,
    OfDatePickerComponent,
    OfContentHtmlComponent,
    OfNumberInputComponent,
    OfPasswordComponent,
    OfRadioComponent,
    OfSwitchComponent,
    OfTemplateRefComponent
];
export class OfModule {
}
OfModule.decorators = [
    { type: NgModule, args: [{
                declarations: [Of],
                imports: [
                    CommonModule,
                    ReactiveFormsModule,
                    FormsModule,
                    AntDesignModule,
                    CurrencyMaskModule,
                    TextMaskModule
                ],
                exports: [
                    OfDynamicComponent,
                    OfFieldComponent,
                    ReactiveFormsModule,
                    FormsModule,
                    CommonModule
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2YubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvb2Yvc3JjL2xpYi9vZi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDbkYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDbEYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDdkYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNEQUFzRCxDQUFDO0FBQzdGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDhEQUE4RCxDQUFDO0FBQzVHLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHdFQUF3RSxDQUFDO0FBQ3ZILE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUMxRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUN0RyxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE1BQU0sRUFBRSxHQUFHO0lBQ1Qsa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLDRCQUE0QjtJQUM1QixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0QixvQkFBb0I7SUFDcEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLHdCQUF3QjtJQUN4Qiw2QkFBNkI7SUFDN0Isc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIsc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQix3QkFBd0I7Q0FDekIsQ0FBQztBQUNGLE1BQU0sZUFBZSxHQUFHO0lBQ3RCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixzQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLHdCQUF3QjtJQUN4Qiw2QkFBNkI7SUFDN0IsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLHNCQUFzQjtDQUN2QixDQUFDO0FBcUJGLE1BQU0sT0FBTyxRQUFROzs7WUFuQnBCLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0JBQ2xCLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLG1CQUFtQjtvQkFDbkIsV0FBVztvQkFDWCxlQUFlO29CQUNmLGtCQUFrQjtvQkFDbEIsY0FBYztpQkFDZjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1Asa0JBQWtCO29CQUNsQixnQkFBZ0I7b0JBQ2hCLG1CQUFtQjtvQkFDbkIsV0FBVztvQkFDWCxZQUFZO2lCQUNiO2FBRUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBbnREZXNpZ25Nb2R1bGUgfSBmcm9tICcuLi9hbnQtZGVzaWduL2FudC1kZXNpZ24ubW9kdWxlJztcclxuaW1wb3J0IHsgT2ZGaWVsZENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9vZi10ZW1wbGF0ZS1yZWYvb2YtZmllbGQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgT2ZEeW5hbWljQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL29mLWR5bmFtaWMvb2YtZHluYW1pYy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBPZkNoZWNrQm94Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL29mLWNoZWNrLWJveC9vZi1jaGVjay1ib3guY29tcG9uZW50JztcclxuaW1wb3J0IHsgRHluYW1pY0ZpZWxkRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2R5bmFtaWMtZmllbGQuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgT2ZUZXh0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL29mLXRleHQvb2YtdGV4dC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBPZkN1cnJlbmN5Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL29mLWN1cnJlbmN5L29mLWN1cnJlbmN5LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE9mRGF0ZVBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9vZi1kYXRlLXBpY2tlci9vZi1kYXRlLXBpY2tlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBPZk51bWJlcklucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL29mLW51bWJlci1pbnB1dC9vZi1udW1iZXItaW5wdXQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgT2ZUZXh0QXJlYUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9vZi10ZXh0LWFyZWEvb2YtdGV4dC1hcmVhLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE9mRGF0YVBpY2tlckNvbnRyb2xDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvb2YtZGF0ZS1waWNrZXIvb2YtZGF0YS1waWNrZXItY29udHJvbC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBPZkNvbnRlbnRIdG1sQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL29mLWNvbnRlbnQtaHRtbC9vZi1jb250ZW50LWh0bWwuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTnVtYmVyc09ubHlEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvbnVtYmVycy1vbmx5LmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IE9mUGFzc3dvcmRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvb2YtcGFzc3dvcmQvb2YtcGFzc3dvcmQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgT2ZSYWRpb0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9vZi1yYWRpby9vZi1yYWRpby5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBPZlN3aXRjaENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9vZi1zd2l0Y2gvb2Ytc3dpdGNoLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE9mU2VsZWN0U2VhcmNoU2VydmVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL29mLXNlbGVjdC1zZWFyY2gtc2VydmVyL29mLXNlbGVjdC1zZWFyY2gtc2VydmVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE9mVGVtcGxhdGVSZWZDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvb2YtdGVtcGxhdGUtcmVmL29mLXRlbXBsYXRlLXJlZi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTaG93VmFsaWRhdGlvbkVycm9yUGlwZSB9IGZyb20gJy4vcGlwZXMvc2hvdy12YWxpZGF0aW9uLWVycm9yLnBpcGUnO1xyXG5pbXBvcnQgeyBDdXJyZW5jeU1hc2tNb2R1bGUgfSBmcm9tICduZzItY3VycmVuY3ktbWFzayc7XHJcbmltcG9ydCB7IFRleHRNYXNrTW9kdWxlIH0gZnJvbSAnYW5ndWxhcjItdGV4dC1tYXNrJztcclxuaW1wb3J0IHsgT2ZPcHRpb25TZWxlY3RlZFBpcGUgfSBmcm9tICcuL3BpcGVzL29mLW9wdGlvbi1zZWxlY3RlZC5waXBlJztcclxuaW1wb3J0IHsgT2ZTZWxlY3RSZW5kZXJPcHRpb25QaXBlIH0gZnJvbSAnLi9waXBlcy9vZi1zZWxlY3QtcmVuZGVyLW9wdGlvbi5waXBlJztcclxuaW1wb3J0IHsgT2ZTZWxlY3RDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvb2Ytc2VsZWN0L29mLXNlbGVjdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBPZlNlbGVjdEFzeW5jQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL29mLXNlbGVjdC1hc3luYy9vZi1zZWxlY3QtYXN5bmMuY29tcG9uZW50JztcclxuaW1wb3J0IHsgT2ZTZWxlY3RBcGlDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvb2Ytc2VsZWN0LWFwaS9vZi1zZWxlY3QtYXBpLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IE9mU2VsZWN0Q2FzY2FkZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9vZi1zZWxlY3QtY2FzY2FkZS9vZi1zZWxlY3QtY2FzY2FkZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuXHJcbmNvbnN0IE9mID0gW1xyXG4gIE9mRHluYW1pY0NvbXBvbmVudCxcclxuICBEeW5hbWljRmllbGREaXJlY3RpdmUsXHJcbiAgT2ZUZXh0Q29tcG9uZW50LFxyXG4gIFNob3dWYWxpZGF0aW9uRXJyb3JQaXBlLFxyXG4gIE9mQ2hlY2tCb3hDb21wb25lbnQsXHJcbiAgT2ZDdXJyZW5jeUNvbXBvbmVudCxcclxuICBPZkRhdGVQaWNrZXJDb21wb25lbnQsXHJcbiAgT2ZEYXRhUGlja2VyQ29udHJvbENvbXBvbmVudCxcclxuICBPZlRleHRBcmVhQ29tcG9uZW50LFxyXG4gIE9mQ29udGVudEh0bWxDb21wb25lbnQsXHJcbiAgT2ZOdW1iZXJJbnB1dENvbXBvbmVudCxcclxuICBOdW1iZXJzT25seURpcmVjdGl2ZSxcclxuICBPZlBhc3N3b3JkQ29tcG9uZW50LFxyXG4gIE9mUmFkaW9Db21wb25lbnQsXHJcbiAgT2ZTd2l0Y2hDb21wb25lbnQsXHJcbiAgT2ZPcHRpb25TZWxlY3RlZFBpcGUsXHJcbiAgT2ZTZWxlY3RSZW5kZXJPcHRpb25QaXBlLFxyXG4gIE9mU2VsZWN0U2VhcmNoU2VydmVyQ29tcG9uZW50LFxyXG4gIE9mVGVtcGxhdGVSZWZDb21wb25lbnQsXHJcbiAgT2ZGaWVsZENvbXBvbmVudCxcclxuICBPZlNlbGVjdENvbXBvbmVudCxcclxuICBPZlNlbGVjdEFzeW5jQ29tcG9uZW50LFxyXG4gIE9mU2VsZWN0QXBpQ29tcG9uZW50LFxyXG4gIE9mU2VsZWN0Q2FzY2FkZUNvbXBvbmVudFxyXG5dO1xyXG5jb25zdCBlbnRyeUNvbXBvbmVudHMgPSBbXHJcbiAgT2ZDaGVja0JveENvbXBvbmVudCxcclxuICBPZlRleHRBcmVhQ29tcG9uZW50LFxyXG4gIE9mVGV4dENvbXBvbmVudCxcclxuICBPZlNlbGVjdENvbXBvbmVudCxcclxuICBPZlNlbGVjdEFzeW5jQ29tcG9uZW50LFxyXG4gIE9mU2VsZWN0QXBpQ29tcG9uZW50LFxyXG4gIE9mU2VsZWN0Q2FzY2FkZUNvbXBvbmVudCxcclxuICBPZlNlbGVjdFNlYXJjaFNlcnZlckNvbXBvbmVudCxcclxuICBPZkN1cnJlbmN5Q29tcG9uZW50LFxyXG4gIE9mRGF0ZVBpY2tlckNvbXBvbmVudCxcclxuICBPZkNvbnRlbnRIdG1sQ29tcG9uZW50LFxyXG4gIE9mTnVtYmVySW5wdXRDb21wb25lbnQsXHJcbiAgT2ZQYXNzd29yZENvbXBvbmVudCxcclxuICBPZlJhZGlvQ29tcG9uZW50LFxyXG4gIE9mU3dpdGNoQ29tcG9uZW50LFxyXG4gIE9mVGVtcGxhdGVSZWZDb21wb25lbnRcclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbT2ZdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIEFudERlc2lnbk1vZHVsZSxcclxuICAgIEN1cnJlbmN5TWFza01vZHVsZSxcclxuICAgIFRleHRNYXNrTW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBPZkR5bmFtaWNDb21wb25lbnQsXHJcbiAgICBPZkZpZWxkQ29tcG9uZW50LFxyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgQ29tbW9uTW9kdWxlXHJcbiAgXVxyXG5cclxufSlcclxuZXhwb3J0IGNsYXNzIE9mTW9kdWxlIHtcclxufVxyXG4iXX0=