{"version":3,"sources":["../../../projects/of/src/lib/models/of-control.model.ts","../../../projects/of/src/lib/models/of-extend-control.model.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/of/src/lib/models/of-schema.model.ts","../../../projects/of/src/lib/components/of-check-box/of-check-box.model.ts","../../../projects/of/src/lib/components/of-component-ref/of-component-ref.model.ts","../../../projects/of/src/lib/components/of-content-html/of-content-html.model.ts","../../../projects/of/src/lib/components/of-currency/of-currency.model.ts","../../../projects/of/src/lib/components/of-date-picker/of-date.model.ts","../../../projects/of/src/lib/components/of-number-input/of-number.model.ts","../../../projects/of/src/lib/components/of-password/of-pwd.model.ts","../../../projects/of/src/lib/components/of-radio/of-radio.model.ts","../../../projects/of/src/lib/services/app-utility-service.ts","../../../projects/of/src/lib/models/of-select-base.model.ts","../../../projects/of/src/lib/components/of-select/of-select-model.ts","../../../projects/of/src/lib/components/of-select-api/of-select-api-model.ts","../../../projects/of/src/lib/components/of-select-async/of-select-async-model.ts","../../../projects/of/src/lib/components/of-select-cascade/of-select-cascade-model.ts","../../../projects/of/src/lib/components/of-select-search-server/of-select-search-server.model.ts","../../../projects/of/src/lib/components/of-switch/of-switch.model.ts","../../../projects/of/src/lib/components/of-template-ref/of-template-ref.model.ts","../../../projects/of/src/lib/components/of-text/of-text.model.ts","../../../projects/of/src/lib/components/of-text-area/of-text-area.model.ts","../../../projects/of/src/lib/services/danh-muc-service-proxies.ts","../../../projects/of/src/lib/services/destroy-rxjs.service.ts","../../../projects/of/src/lib/services/of-validator.service.ts","../../../projects/of/src/lib/services/of-create-control-form-service.ts","../../../projects/of/src/lib/components/of-dynamic/of-dynamic.component.html","../../../projects/of/src/lib/components/of-dynamic/of-dynamic.component.ts","../../../projects/of/src/lib/components/of-template-ref/of-field.component.ts","../../../projects/of/src/lib/components/of.component.ts","../../../projects/of/src/lib/services/of.service.ts","../../../projects/of/src/lib/of-routing.module.ts","../../../projects/of/src/ant-design.module.ts","../../../projects/of/src/lib/components/of-check-box/of-check-box.component.ts","../../../projects/of/src/lib/directives/dynamic-field.directive.ts","../../../projects/of/src/lib/components/of-text/of-text.component.ts","../../../projects/of/src/lib/components/of-currency/of-currency.component.ts","../../../projects/of/src/lib/components/of-date-picker/of-data-picker-control.component.ts","../../../projects/of/src/lib/components/of-date-picker/of-date-picker.component.ts","../../../projects/of/src/lib/directives/numbers-only.directive.ts","../../../projects/of/src/lib/components/of-number-input/of-number-input.component.ts","../../../projects/of/src/lib/components/of-text-area/of-text-area.component.ts","../../../projects/of/src/lib/components/of-content-html/of-content-html.component.ts","../../../projects/of/src/lib/components/of-password/of-password.component.ts","../../../projects/of/src/lib/components/of-radio/of-radio.component.ts","../../../projects/of/src/lib/components/of-switch/of-switch.component.ts","../../../projects/of/src/lib/pipes/of-select-render-option.pipe.ts","../../../projects/of/src/lib/pipes/of-option-selected.pipe.ts","../../../projects/of/src/lib/components/of-select-search-server/of-select-search-server.component.html","../../../projects/of/src/lib/components/of-select-search-server/of-select-search-server.component.ts","../../../projects/of/src/lib/components/of-template-ref/of-template-ref.component.ts","../../../projects/of/src/lib/pipes/show-validation-error.pipe.ts","../../../projects/of/src/lib/components/of-select/of-select.component.html","../../../projects/of/src/lib/components/of-select/of-select.component.ts","../../../projects/of/src/lib/components/of-select-async/of-select-async.component.ts","../../../projects/of/src/lib/components/of-select-api/of-select-api.component.ts","../../../projects/of/src/lib/components/of-select-cascade/of-select-cascade.component.ts","../../../projects/of/src/lib/of.module.ts"],"names":["config","this","type","dataField","label","hiddenLabel","width","css","required","errorEmpty","placeholder","disabled","hidden","validations","controls","disabledAsync","hiddenAsync","value","bottomHtml","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","__values","o","s","m","i","__read","r","ar","error","__spread","arguments","concat","OfSchemaModel","layout","focusFisrtInit","errorNotValid","backUpDisables","render$","Subject","isSearchBox","searchBtnBusy","searchEvent$","rebuilder$","submitted","fields","id","Number","Date","defineProperty","_a","form","getRawValue","valid","getField","name","find","x","getFormControl","get","disableField","_this","setTimeout","ctr","disable","onlySelf","enable","field","disableAll","forEach","triggerRender","hiddenFields","showFields","setHidden","hiddens","idx","setShow","shows","fieldValueChanges","time","valueChanges","pipe","debounceTime","patchValue","keys","subRender","cdr","destroy$","filter","takeUntil","subscribe","detectChanges","addControls","indexBegin","flatMap","index","rebuilder","search","OfCheckBoxModel","_super","checkBoxLabel","OfControlModel","OfComponentRefModel","componentRef","OfContentHtmlModel","content","isBlank","OfCurrencyModel","prefix","suffix","precision","OfDateModel","minDateAsync","maxDateAsync","dateNotGreaterThanCurrent","notGreaterThanCurrent","minDate","maxDate","tuNgayDataField","denNgayDataField","OfNumberModel","onlyKeyNumber","min","max","maxlength","OfPwdModel","OfRadioModel","items","AppUtilityService","isNullOrEmpty","input","isNotNull","getFullTextSearch","str","removeDau","replace","toLowerCase","trim","isNotAnyItem","isWhitespace","searchVietTat","ret","spl","split","cloneDeep","factory","ɵfac","OfSelectBaseModel","nzAllowClear","nzMode","options","itemSelected","nzMaxMultipleCount","MAX_VALUE","nzMaxTagCount","renderOptionFunc","renderSelectedFunc","OfSelectModel","OfSelectApiModel","dataExtend","functionService","OfSelectAsyncModel","keyCache","optionsAsync","OfSelectCascadeModel","cascadeField","OfSelectSearchServerModel","showPagination","OfSwitchModel","yesText","noText","OfTemplateRefModel","OfTextModel","maxLength","minLength","OfTextAreaModel","rows","API_BASE_URL","AbpServiceProxy","http","baseUrl","jsonParseReviver","undefined","apiDefinition","includeTypes","url_","Error","encodeURIComponent","options_","observe","responseType","headers","HttpHeaders","Accept","request","_observableMergeMap","response_","processApiDefinition","_observableCatch","HttpResponseBase","_observableThrow","response","status","responseBlob","HttpResponse","Blob","_headers","_b","_c","key","blobToText","_responseText","result200","resultData200","JSON","parse","ApplicationApiDescriptionModel","fromJS","_observableOf","result403","resultData403","RemoteServiceErrorResponse","throwException","result401","resultData401","result400","resultData400","result404","resultData404","result501","resultData501","result500","resultData500","applicationConfiguration","processApplicationConfiguration","ApplicationConfigurationDto","i0__namespace","ɵɵinject","HttpClient","TenantsServiceProxy","byName","processByName","FindTenantResultDto","byId","processById","BenhvienServiceProxy","getlist","stringify","Content-Type","processGetlist","PagedResultDtoOfBenhVienDto","cosoyteautocompletedatasource","processCosoyteautocompletedatasource","PagedResultDtoOfCoSoYTeAutoDataSourceDto","cosoytedacodailyautocompletedatasource","processCosoytedacodailyautocompletedatasource","searchbenhvienidbyma","ma","processSearchbenhvienidbyma","getdanhsachbenhvien","processGetdanhsachbenhvien","isArray","resultData200_1","resultData200_1_1","item","BenhVienDto","comboboxbenhvienordichvu","benhVienId","processComboboxbenhvienordichvu","resultData200_2","resultData200_2_1","ComboBoxDto","loaibenhvienbyid","processLoaibenhvienbyid","getbyid","processGetbyid","processCreate","update","processUpdate","removebyid","processRemovebyid","CauhinhdichvusokhamServiceProxy","createordelete","processCreateordelete","PagedResultDtoOfDichVuSoKhamOutputDto","DichVuSoKhamOutputDto","CauhinhdoituongkhoduocServiceProxy","getkhodoituong","khoId","processGetkhodoituong","KhoDoiTuongDto","luucauhinh","processLuucauhinh","CauhinhgiadichvuServiceProxy","PagedResultDtoOfDichVuDto","gettreeview","processGettreeview","updateserviceprices","processUpdateserviceprices","releaseserviceprices","processReleaseserviceprices","ItemExistsPagedResultDtoOfDichVuDto","releaseservicepricestoall","processReleaseservicepricestoall","pricelistexpires","processPricelistexpires","updateeffectivedate","processUpdateeffectivedate","updateeffectivedatetoall","processUpdateeffectivedatetoall","importservice","processImportservice","validateexistsimportservice","processValidateexistsimportservice","resultData200_3","resultData200_3_1","ImportDichVuResultDto","exportexceldichvudangsoanthao","processExportexceldichvudangsoanthao","FileDto","exportexceldichvudangsoanthaosample","processExportexceldichvudangsoanthaosample","DichVuDto","CauhinhmautinnhanServiceProxy","getall","processGetall","resultData200_4","resultData200_4_1","CauHinhHeThongDto","saveurl","processSaveurl","PagedResultDtoOfCauHinhHeThongDto","CauhinhphongbandichvuServiceProxy","PagedResultDtoOfPhongBanDichVuOutputDto","PhongBanDichVuOutputDto","CauhinhquanlyhosobccsServiceProxy","resultData200_5","resultData200_5_1","CauhinhtaikhoanbulksmsServiceProxy","resultData200_6","resultData200_6_1","CauhinhtaikhoandichvuthecaoServiceProxy","resultData200_7","resultData200_7_1","CauhinhtaikhoanlienthongServiceProxy","CauHinhTaiKhoanLienThongDto","resultData200_8","resultData200_8_1","getbyloaitaikhoan","loaiTaiKhoan","processGetbyloaitaikhoan","test","processTest","PagedResultDtoOfCauHinhTaiKhoanLienThongDto","CauhinhtaikhoanviettelpayServiceProxy","resultData200_9","resultData200_9_1","CauhinhtinnhandichvuServiceProxy","resultData200_10","resultData200_10_1","ChuongtrinhServiceProxy","PagedResultDtoOfChuongTrinhDto","ChuongTrinhDto","CombodataServiceProxy","getfromdatabase","processGetfromdatabase","resultData200_11","resultData200_11_1","getfromdatabasetreeview","processGetfromdatabasetreeview","appenum","processAppenum","resultData200_12","resultData200_12_1","DichvukhamchuabenhServiceProxy","createbatch","ids","processCreatebatch","export","processExport","DoituongServiceProxy","treedatadoituong","processTreedatadoituong","resultData200_13","resultData200_13_1","DoiTuongTreeDto","DoiTuongDto","PagedResultDtoOfDoiTuongDto","DoituongkhoduocnoitruServiceProxy","gettreedatadoituongkhoduocnoitru","processGettreedatadoituongkhoduocnoitru","resultData200_14","resultData200_14_1","KhoDuocTreeDto","createorupdatedoituongnoitru","processCreateorupdatedoituongnoitru","PagedResultDtoOfDoiTuongKhoDuocNoiTruDto","DoiTuongKhoDuocNoiTruDto","DoituongloaigiaServiceProxy","gettreedatadoituongloaigia","processGettreedatadoituongloaigia","resultData200_15","resultData200_15_1","LoaiGiaTreeDto","createorupdate","processCreateorupdate","PagedResultDtoOfDoiTuongLoaiGiaDto","DoiTuongLoaiGiaDto","DonvihanhchinhServiceProxy","DonViHanhChinhDto","PagedResultDtoOfDonViHanhChinhDto","DonvitinhduocphamServiceProxy","PagedResultDtoOfDonViTinhDto","DonViTinhDto","DuocbenhvienServiceProxy","bulkthongtinthaubyduocid","processBulkthongtinthaubyduocid","thongtinthaubyduocid","processThongtinthaubyduocid","resultData200_16","resultData200_16_1","DuocThongTinThauDto","getpagedlistduocdungchung","processGetpagedlistduocdungchung","PagedResultDtoOfDuocDungChungDto","themthuoctudanhmucchung","processThemthuoctudanhmucchung","exportexcelmaumacdinh","processExportexcelmaumacdinh","exportexcelmau917","processExportexcelmau917","DuocDto","checktrungvacxin","vacxinId","idUpdate","processChecktrungvacxin","PagedResultDtoOfDuocDto","DuocthongtinthauServiceProxy","PagedResultDtoOfDuocThongTinThauDto","FileServiceProxy","downloadtempfile","token","processDownloadtempfile","nhanvienimg","loai","contentType","processNhanvienimg","uploadanh","height","processUploadanh","uploaexcel","processUploaexcel","GetentitycommonServiceProxy","GetEntityByIdOutDto","GiuongbenhServiceProxy","GiuongBenhDto","PagedResultDtoOfGiuongBenhDto","HethongdanhmucServiceProxy","LstDictionaryDto","getListDictionaryByListTypeCode","processGetListDictionaryByListTypeCode","resultData200_17","resultData200_17_1","PagedResultDtoOfLstDictionaryDto","HethongdanhmucdinhnghiaServiceProxy","LstDictionaryTypeDto","removebyids","processRemovebyids","PagedResultDtoOfLstDictionaryTypeDto","HoatchatServiceProxy","PagedResultDtoOfHoatChatDto","HoatChatDto","ImportduocphamServiceProxy","kiemtrathuoc","processKiemtrathuoc","KiemTraExcelThuocDto","insertthuochople","processInsertthuochople","CommonResultDtoOfInt32","updatethuochople","processUpdatethuochople","KhangnguyenServiceProxy","KhangNguyenDto","comboboxdata","processComboboxdata","resultData200_18","resultData200_18_1","checktrungid","processChecktrungid","listkhangnguyencombo","processListkhangnguyencombo","resultData200_19","resultData200_19_1","PagedResultDtoOfKhangNguyenDto","KhoduocServiceProxy","PagedResultDtoOfKhoDuocDto","KhoDuocDto","LoaiduocServiceProxy","PagedResultDtoOfLoaiDuocDto","LoaiDuocDto","LoaigiaServiceProxy","LoaiGiaDto","PagedResultDtoOfLoaiGiaDto","LoaivattuServiceProxy","PagedResultDtoOfLoaiVatTuDto","LoaiVatTuDto","NhacungcapServiceProxy","NhaCungCapDto","PagedResultDtoOfNhaCungCapDto","NhanlucServiceProxy","nhanLucId","fileToken","nhanlucbybenhvienid","processNhanlucbybenhvienid","resultData200_20","resultData200_20_1","PagedResultDtoOfNhanLucDto","NhanLucDto","NhomduocServiceProxy","PagedResultDtoOfNhomDuocDto","NhomDuocDto","NhomdvktbhytServiceProxy","PagedResultDtoOfNhomDvktBhytDto","NhomDvktBhytDto","PermissionmanagementServiceProxy","getbyrole","processGetbyrole","GetPermissionListResultDto","PhacdodieutriServiceProxy","PagedResultDtoOfPhacDoDieuTriDto","PhacDoDieuTriDto","PhannhomduocServiceProxy","PagedResultDtoOfPhanNhomDuocDto","PhanNhomDuocDto","PhongbanServiceProxy","treesource","processTreesource","resultData200_21","resultData200_21_1","PhongBanTreeDto","PagedResultDtoOfPhongBanDto","PhongBanDto","SearchservercombodataServiceProxy","benhicdselect","processBenhicdselect","PagedResultDtoOfComboBoxDto","benhicdtable","processBenhicdtable","PagedResultDtoOfBenhIcdSearchDto","SelectoptionServiceProxy","getoptions","Authorization","localStorage","getItem","processGetoptions","resultData200_22","resultData200_22_1","SelectsearchserverServiceProxy","SokhamServiceProxy","PagedResultDtoOfSoKhamDto","SoKhamDto","StaticroleServiceProxy","PagedResultDtoOfStaticRolePagedOutputDto","SysRoleDto","upsert","processUpsert","CommonResultDtoOfSysRoleDto","setpermissionableforadminrole","processSetpermissionableforadminrole","getpermissionableforadminrole","processGetpermissionableforadminrole","resultData200_23","resultData200_23_1","SysPermissionAdminDto","permissionloaibenhvien","loaiBenhVien","processPermissionloaibenhvien","resultData200_24","resultData200_24_1","SysPermissionLoaiBenhVienEntity","setpermissionloaibenhvien","processSetpermissionloaibenhvien","SysroleServiceProxy","setpermissionforsysrole","processSetpermissionforsysrole","getpermissiongranted","sysRoleId","processGetpermissiongranted","SysRolePermissionDto","getlistrolecoso","processGetlistrolecoso","PagedResultDtoOfSysRoleDto","upsertrolecoso","processUpsertrolecoso","xoarolecoso","processXoarolecoso","CommonResultDtoOfInt64","TaikhoanadminServiceProxy","PagedResultDtoOfSysUserDto","getsysroleadmincoso","processGetsysroleadmincoso","resultData200_25","resultData200_25_1","taotaikhoanadmincoso","processTaotaikhoanadmincoso","CommonResultDtoOfSysUserDto","capnhapthongtin","processCapnhapthongtin","doimatkhau","processDoimatkhau","xoataikhoan","userId","processXoataikhoan","CommonResultDtoOfGuid","lock","processLock","unlock","processUnlock","TaikhoancosoServiceProxy","taotaikhoancoso","processTaotaikhoancoso","SysUserDto","getdanhsachrole","processGetdanhsachrole","resultData200_26","resultData200_26_1","RoleAbleDto","setroleforuser","processSetroleforuser","getuserrole","processGetuserrole","resultData200_27","resultData200_27_1","SysUserRoleEntity","getlistcauhinhsysappprivate","processGetlistcauhinhsysappprivate","DanhSachCauHinhSysAppPrivateRoleDto","getlistdacauhinhsysapp","processGetlistdacauhinhsysapp","resultData200_28","resultData200_28_1","SysAppPrivateRoleDto","luusysappprivateroleuser","processLuusysappprivateroleuser","ThamsobenhvienServiceProxy","updatevalue","processUpdatevalue","updatechanged","processUpdatechanged","dongbothamsohethong","processDongbothamsohethong","cauhinhthamsohethong","processCauhinhthamsohethong","PagedResultDtoOfSysAppSettingsDto","SysAppSettingsDto","ThamsohethongServiceProxy","PagedResultDtoOfThamSoHeThongDto","ThamSoHeThongDto","ThietbiServiceProxy","PagedResultDtoOfThietBiDto","ThietBiDto","TienteServiceProxy","TienTeDto","PagedResultDtoOfTienTeDto","TientetygiaServiceProxy","PagedResultDtoOfTienTeTyGiaDto","TienTeTyGiaDto","ToathuocmauServiceProxy","PagedResultDtoOfDSToaThuocMauDto","DSToaThuocMauDto","ToathuocmauchitietServiceProxy","removebycode","processRemovebycode","checkcode","processCheckcode","savetoathuocmauchitiet","processSavetoathuocmauchitiet","PagedResultDtoOfToaThuocMauDto","ToaThuocMauDto","UserextensionServiceProxy","usersession","processUsersession","UserSessionDto","clearusersessioncache","processClearusersessioncache","switchbenhvienid","processSwitchbenhvienid","VacxinServiceProxy","PagedResultDtoOfVacXinDto","VacXinDto","editvacxinkhangnguyen","processEditvacxinkhangnguyen","resultData200_29","resultData200_29_1","vacxinextend","processVacxinextend","resultData200_30","resultData200_30_1","vacxinlapkehoach","tcmr","processVacxinlapkehoach","resultData200_31","resultData200_31_1","ExportModel","OutputFileExtension","ControllerInterfaceApiDescriptionModel","data","property","init","toJSON","MethodParameterApiDescriptionModel","typeAsString","typeSimple","isOptional","defaultValue","ParameterApiDescriptionModel","nameOnMethod","constraintTypes","bindingSourceId","descriptorName","ReturnValueApiDescriptionModel","ActionApiDescriptionModel","uniqueName","httpMethod","url","supportedVersions","_d","_e","parametersOnMethod","_f","_g","parameters","_h","_j","returnValue","ControllerApiDescriptionModel","controllerName","interfaces","actions","ModuleApiDescriptionModel","rootPath","remoteServiceName","controllers","PropertyApiDescriptionModel","TypeApiDescriptionModel","baseType","isEnum","enumNames","enumValues","genericArguments","_k","properties","_l","_m","modules","types","RemoteServiceValidationErrorInfo","message","members","RemoteServiceErrorInfo","code","details","validationErrors","LanguageInfo","cultureName","uiCultureName","displayName","flagIcon","DateTimeFormatDto","calendarAlgorithmType","dateTimeFormatLong","shortDatePattern","fullDateTimePattern","dateSeparator","shortTimePattern","longTimePattern","CurrentCultureDto","englishName","threeLetterIsoLanguageName","twoLetterIsoLanguageName","isRightToLeft","nativeName","dateTimeFormat","NameValue","ApplicationLocalizationConfigurationDto","values","languages","currentCulture","defaultResourceName","languagesMap","map","languageFilesMap","ApplicationAuthConfigurationDto","policies","grantedPolicies","ApplicationSettingConfigurationDto","CurrentUserDto","isAuthenticated","tenantId","userName","surName","email","emailVerified","phoneNumber","phoneNumberVerified","roles","ApplicationFeatureConfigurationDto","MultiTenancyInfoDto","isEnabled","CurrentTenantDto","isAvailable","IanaTimeZone","timeZoneName","WindowsTimeZone","timeZoneId","TimeZone","iana","windows","TimingDto","timeZone","ClockDto","kind","LocalizableStringDto","resource","ExtensionPropertyApiGetDto","ExtensionPropertyApiCreateDto","ExtensionPropertyApiUpdateDto","ExtensionPropertyApiDto","onGet","onCreate","onUpdate","ExtensionPropertyUiTableDto","isVisible","ExtensionPropertyUiFormDto","ExtensionPropertyUiDto","onTable","onCreateForm","onEditForm","ExtensionPropertyAttributeDto","ExtensionPropertyDto","api","ui","attributes","configuration","EntityExtensionDto","ModuleExtensionDto","entities","ExtensionEnumFieldDto","ExtensionEnumDto","localizationResource","ObjectExtensionsDto","enums","localization","auth","setting","currentUser","features","multiTenancy","currentTenant","timing","clock","objectExtensions","success","BenhVienPagedRequestDto","tuyenBenhVien","hangBenhVien","tinhId","huyenId","xaId","benhVienChaId","coQuanChuQuanId","isActive","exportMode","outputFileExtension","sorting","skipCount","maxResultCount","DuocDungChungTimTheoEnum","BenhVienDtoMinify","ten","diaChi","soDienThoai","fax","tenTinh","tenHuyen","tenXa","benhVienChaDto","coQuanChuQuanDto","totalCount","CoSoYTeAutoDataSourceDto","CoSoYTeAutoDataSourceRequest","CoSoYTeDaCoDaiLyAutoDataSourceRequest","displayText","dichVuId","tenDichVu","maDichVu","isChecked","soKhamId","PagedRequestDichVuSoKhamDto","nhomDichVuId","DichVuSoKhamDto","soKhamBenhId","listDoiTuongId","DichVuPagedRequestDto","isExportDefault","lv","loaiNhomId","isDichVuDungChung","hieuLucTuNgay","hieuLucToiNgay","stt","loaiDichVuId","dichVuDonGiaId","maDvkt","tenDvkt","tenEn","tenKhongDau","cap","parentId","donViTinh","sttDmByt","sttPheDuyet","maTT37","maDmdc","dmdcDichVuId","tyLeThanhToanBHYT","goi","coGiaDichVu","coGiaTriChuan","tenNhomDichVu","tenLoaiDichVu","counter","donGiaBHYT","donGiaQuanNhan","maGia","donGiaBenhVien","quyetDinh","congBo","maCoSoKCB","tamNgung","isExists","isDeleted","DichVuDonGiaRequestDto","ListDichVuDonGiaRequestDto","isSuccess","DichVuRequestDto","UpdateEffectiveDateRequestDto","hieuLucTuNgayOld","hieuLucToiNgayOld","phuThu","trangThai","ImportDichVuRequestDto","fileName","fileType","fileBytes","fileBase64","strLoaiTaiKhoan","settingId","PagedFullRequestDto","phongBanId","pbdvId","PagedRequestPhongBanDichVuDto","PhongBanDichVuDto","tenDangNhap","matKhauMaHoa","ChildrenDataDto","GetComboDataFromDataBaseInputDto","tableName","cascaderId","cascaderMa","title","isLeaf","nhomDoiTuongId","isExpanded","children","ngayHieuLuc","moment","toString","ngayHetHieuLuc","tyLeGiam","gioiHan1","tyLe1","gioiHan2","tyLe2","gioiHan3","tyLe3","gioiHan4","tyLe4","gioiHan5","tyLe5","ghiChu","maQuyenLoiBHYT","gioiHan1Cu","gioiHan2Cu","tenNhomDoiTuong","toISOString","DoiTuongPagedRequest","KhoDuocDataTree","DoiTuongNoiTruInput","doiTuongId","loaiKhoId","expand","checked","ngayTao","doiTuongKhoDuocNoiTruId","allChecked","ListLoaiGiaIdDto","khoDuocId","ParamsCreateOrUpdateDoiTuongNoiTruDto","lstData","DoiTuongKhoDuocNoiTruPagedRequestDto","loaiGiaId","DataTree","Params","nhomGiaId","doUuTien","giaHoTro","doiTuongLoaiGiaId","Dto","ParamUpdateOrCreateDto","DoiTuongLoaiGiaPagedRequestDto","tenDoiTuong","tenVietTat","tenDayDu","tenDayDuKhongDau","capDo","capDoStr","parentStr","PagedRequestDonViHanhChinhDto","thonId","DonViTinhPagedRequestDto","loaiVatTuId","isDonViCoBan","donViCoBan","donViCoBanId","giaTriQuyDoi","duocId","tenBhyt","maHoatChat","nuocSanXuat","hangSanXuat","nhaThau","soDK","donGiaThau","goiThau","nhomThau","soQDThau","ngayTrungThau","uuTien","InsertBulkThongTinThauByDuocIdRequest","listOfThongTinThau","DuocDungChungPagedListInputDto","timTheo","LOAI_THUOC","LOAI_VAT_TU_Y_TE","DuocDungChungDto","hamLuong","duongDung","hoatChat","loaiThuoc","ThemThuocTuDanhMucChungDto","maDuoc","ThemThuocTuDanhMucDungChungRequest","listOfThuocCanThem","DuocBenhVienPageListInputDto","chuongTrinhId","soDangKy","GetEntityByIdMap","loaiDuocId","nhomDuocId","donViTinhId","quyCach","duongDungId","congDung","vtyt","tamNgungSuDung","bhyt","quanNhan","loaiDieuTri","nhomDvktBhytId","bhytTyLeThanhToanDungTuyen","mienPhi","tamNgungDuTru","phamVi","quanTamDacDiet","duocDcId","maDuocChung","phanNhomDuocId","phanLoaiDuocId","daChat","donViTinhToaThuocId","donViTinhToaThuoc","GetEntityByIdInputDto","propertyOfDto","propertyId","isGetOne","isSoftDelete","NHAN_LUC_LOAI_HINH_ANH","dto","isSuccessful","moTa","khoaDieuTriId","phongBenhId","tang","vatDungKemTheo","tenKhoaDieuTri","tenPhongBenh","GiuongBenhPagedRequestDto","lstDictionaryTypeId","lstDictionaryTypeCode","nameEn","LstDictionaryGetByListCodePagedRequestDto","lstDictionaryTypeCodes","LstDictionaryPagedRequestDto","level","LstDictionaryTypePagedRequestDto","HoatChatPagedListInputDto","sttThuoc","maDuongDung","ma1282","tuyen","ReadExcelThuocDto","KiemTraExcelThuocRequest","fileDto","hamLuongVaoTenDayDu","isUpdate","isThuoc","maduoc","mA_DMDC","tenduoc","hoatchat","donvitinh","hamluong","quycach","duongdung","stT_DMBYT","stT_PHEDUYET","nuocsanxuat","hangsanxuat","sodk","loaithuoc","dachat","dongiathau","soqdthau","nhomthau","goithau","ngaytrungthau","bDaChat","tenThuocSdkSttPheDuyet","tenSttPheDuyet","KiemTraThuocOutputDto","excelDto","messageError","danhSachHopLe","danhSachLoi","tokenListSuccess","InsertThuocHopLeRequest","errorCode","errorMessage","dataResult","UpdateThuocHopLeRequest","listVacXin","KhoDuocPagedRequestDto","phongBanName","loaiKhoName","khoDuoc","creationTime","LoaiDuocPagedListInputDto","nhomLoaiDuocId","fieldName","loaiIdRef","tienTeId","tenTienTe","tenNhomGia","loaiIdRefShow","LoaiGiaPagedRequestDto","dienThoai","maSoThue","giamDoc","nguoiLienHe","loaiHinhCty","NhaCungCapPagedRequestDto","NhanLucPagedRequestDto","tinhTrang","chucVuId","NhomDvktBhyt_ThuocVtyt","ngaySinh","gioiTinh","cmnd","ngayCap","noiCapCmnd","quocTichId","danTocId","chucDanhId","loaiNhanLucId","trinhDoChuyenMonId","chuyenNganhChinhId","chuyenNganhPhuId","soChungChiHanhNghe","ngayCapChinhChiHanhNghe","NhomDuocPagedListInputDto","NhomDvktBhytPagedListInputDto","thuocVtyt","LOAI_PHAC_DO","ProviderInfoDto","GetPermissionInputDto","isRoleStatic","providerName","providerKey","PermissionGrantInfoDto","parentName","isGranted","allowedProviders","grantedProviders","PermissionGroupDto","permissions","entityDisplayName","groups","PhacDoDieuTriPagedRequestDto","loaiPhacDo","SelectOptionType","trangThaiShow","loaiPhacDoShow","PagedRequestPhongBanDto","loaiPhongBanId","loaiPhongBenhId","loaiPhongBan","FetchBenhIcdSearchRequest","chuongId","nhomId","isSelect","maBenh","BenhIcdSearchDto","tenNhom","tenChuong","SelectSearchServerType","SelectOptionInputDto","cascader","SelectSearchServerDto","valueId","PagedRequestSoKhamDto","StaticRolePagedOutputDto","StaticRolePagedInputDto","isAdminTuyen","listLoaiCoSo","listTenLoaiCoSo","roleId","isStatic","SetListPermissionAbleForAdminRoleRequest","permissionNames","SetPermissionLoaiBenhVienRequest","SetPermissionForSysRoleRequest","RoleCoSoPagedInputDto","GetListUserAdminCoSoRequest","hoTen","hoTenKhongDau","listRoleName","tenBenhVien","sysRoleAdminId","tenQuyen","isCreator","isLock","CreateSysUserDto","matKhau","TaoTaiKhoanAdminCoSoInputDto","userDto","UpdateUserDto","DoiMatKhauRequest","userExtensionId","matKhauMoi","GetListUserCoSoRequest","isCheck","SetRoleForUserRequest","listSysRoleId","CauHinhSysAppPrivateRoleItemDto","listOfPhongBan","listOfKhoDuoc","listOfCanLamSang","groupCode","userV1Id","valueCode","valueName","LuuSysAppPrivateRoleUserRequset","dtos","ParamUpdateValueThamSoBenhVien","ParamsUpdateChangedThamSoBenhVien","dataFieldChanged","ThamSoBenhVienPagedRequestDto","groupCodeId","description","locked","systemEditonOnly","dataType","language","ThamSoHeThongPagedRequest","nhomThamSoId","nhomThamSo","PagedRequestThietBiDto","nhomThietBiId","tenPhongBan","TienTePagedRequestDto","TienTeTyGiaPagedRequestDto","tyGiaVND","tyGiaUSD","PagedRequestToaThuocMauDto","bacSiId","maICD","sang","trua","chieu","toi","soNgay","soLuong","tenDuoc","PagedRequestToaThuocMauChiTietDto","BenhVienSessionDto","NhanLucSessionDto","benhVienDto","nhanLucDto","PagedVacXinInputDto","nhomVacXinId","cvx","strLoai","vacXinKhangNguyenId","tenKhangNguyen","listKhangNguyen","ApiException","isApiException","obj","blob","Observable","observer","reader","FileReader","onload","event","target","complete","readAsText","DestroyRxjsService","ngOnDestroy","OfValidatorService","noWhitespaceValidator","control","whiteSpace","emailValidator","passwordValidator","match","password","phoneValidator","phone","focusControlItem","arr","$","flag","each","txt","text","focus","focusFirst","providedIn","OfCreateControlFormService","fb","validatorService","createControl","group","createField","createExtendControl","createValidations","bindValidations","addControl","updateControl","removeControl","indexOf","validator","validList_1","Validators","compose","i0","searchEvent","emit","$event","field_r2","ctx_r3","ofFieldTempates","i1__namespace$1","FormBuilder","OfDynamicComponent","createCtrlService","submitValueEvent","EventEmitter","ngOnInit","schemaModel","init$","reBuilderForm","distinctUntilChanged","trackByField","onSubmit","isCheckValid","setValidators","ngAfterViewInit","onClickSearchBtn","addOfFieldTempates","ɵɵdirectiveInject","selectors","inputs","outputs","ɵɵProvidersFeature","ngContentSelectors","decls","vars","consts","template","rf","ctx","ofDynamic","OfFieldComponent","contentQueries","dirIndex","OfComponent","selectSp","searchSp","formDisable$","BehaviorSubject","ngaySinhMin$","danTocOption$","Tinh","cascade","Huyen","opt","Xa","assign","OfExtendControlModel","onClickDisable","onClickSetValue","huyenSearchServerId","onClickAddControl","OfService","restService","apiName","sample","i1__namespace$2","RestService","routes","path","pathMatch","component","DynamicLayoutComponent","OfRoutingModule","imports","RouterModule","forChild","i1__namespace$3","exports","registerLocaleData","vi","antDesignIcons","AllIcons","icons","AntDesignModule","NzAffixModule","NzAlertModule","NzAnchorModule","NzAutocompleteModule","NzAvatarModule","NzBackTopModule","NzBadgeModule","NzButtonModule","NzBreadCrumbModule","NzCalendarModule","NzCardModule","NzCarouselModule","NzCascaderModule","NzCheckboxModule","NzCollapseModule","NzCommentModule","NzDatePickerModule","NzDescriptionsModule","NzDividerModule","NzDrawerModule","NzDropDownModule","NzEmptyModule","NzFormModule","NzGridModule","NzI18nModule","NzIconModule","NzInputModule","NzInputNumberModule","NzLayoutModule","NzListModule","NzMentionModule","NzMenuModule","NzMessageModule","NzModalModule","NzNoAnimationModule","NzNotificationModule","NzPageHeaderModule","NzPaginationModule","NzPopconfirmModule","NzPopoverModule","NzProgressModule","NzRadioModule","NzRateModule","NzResultModule","NzSelectModule","NzSkeletonModule","NzSliderModule","NzSpinModule","NzStatisticModule","NzStepsModule","NzSwitchModule","NzTableModule","NzTabsModule","NzTagModule","NzTimePickerModule","NzTimelineModule","NzToolTipModule","NzTransButtonModule","NzTransferModule","NzTreeModule","NzTreeSelectModule","NzTypographyModule","NzUploadModule","NzWaveModule","NzResizableModule","NzSpaceModule","providers","provide","NZ_I18N","useValue","vi_VN","NZ_ICONS","NZ_DATE_LOCALE","viDate","OfCheckBoxComponent","DynamicFieldDirective","resolver","container","mapComponent","resolveComponentFactory","createComponent","instance","ofCheckBox_component","ofTextArea_component","OfTextAreaComponent","ofText_component","OfTextComponent","ofSelect_component","OfSelectComponent","ofSelectAsync_component","OfSelectAsyncComponent","ofSelectApi_component","OfSelectApiComponent","ofSelectCascade_component","OfSelectCascadeComponent","ofSelectSearchServer_component","OfSelectSearchServerComponent","ofCurrency_component","OfCurrencyComponent","ofDatePicker_component","OfDatePickerComponent","ofContentHtml_component","OfContentHtmlComponent","ofNumberInput_component","OfNumberInputComponent","ofPassword_component","OfPasswordComponent","ofRadio_component","OfRadioComponent","ofSwitch_component","OfSwitchComponent","ofTemplateRef_component","OfTemplateRefComponent","disableExtendControl","ctrl","fControl","ComponentFactoryResolver","ViewContainerRef","keyEnter$","nzSpinning","onKeyEnterControl","thousands","decimal","VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","OfDataPickerControlComponent","multi","placeHolder","mask","$destroy","isWriteValue","mouseEvent$","nzIcon","nzIcon$","isShowIconCalendar","isDisabled","FormControl","inputValue","setValue","onChange","onTouched","onChangeValue","onFocus","mouseLeaveMain","mouseEnterMain","fromEvent","refInput","nativeElement","refDate","picker","showOverlay","nzOnOpenChange","tap","icon","unsubscribe","valueText","format","arrStr","isNaN","date","isValid","disabledDate","toDate","hideOverlay","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","onFocusOutInputMask","onClickIcon","viewQuery","ɵɵpureFunction1","_c2","current","check","differenceInCalendarDays","setMinDate","setMaxDate","convertDate","isMoment","handlerTuNgayChange","handlerDenNgayChange","ngAfterContentChecked","ChangeDetectorRef","NumbersOnlyDirective","_el","onInputChange","initalValue","stopPropagation","ctx_r0","ctx_r2","ElementRef","hostBindings","_r1","passwordVisible","_r0","_r2","OfSelectRenderOptionPipe","transform","option","pure","OfOptionSelectedPipe","option_r5","ɵɵrestoreView","_r10_1","ɵɵnextContext","nzPageIndexChange","ctx_r7","nzPageIndex","totalItems","option$","backUpItems","optionDebound$","triggerDetectChanges","txtSearch","txtSearch$","firstOptions","firstTotal","isLoading","handlerSearch","loadFirstOption","getOptionsFromBE","nzOpenChange","open","trackBySelect","setOptions","isFirst","getOneId","reqBody","finalize","getItemSelected","loadMore","_r3","formService","templateRef","controlTemplate","ɵɵpureFunction3","_c1","_c0$3","ShowValidationErrorPipe","errors","err","setOptionsView","searchTxt","checkVietTat","fts","selectAll","unSelectAll","handlerValueDataFieldChange","vcSelect","getOptionsFromApi","hasCacheOption","cache","sessionStorage","of","setItem","disableIfCascadeEmpty","setOptionsForView","checkCurrentValue","handlerCascadeChange","OfModule","ngModule","forLazy","LazyModuleFactory","CoreModule","ThemeSharedModule","CurrencyMaskModule","TextMaskModule","declarations","ɵangular_packages_forms_forms_y","NgControlStatusGroup","FormGroupDirective","i2__namespace$5","NzRowDirective","i4__namespace","NgForOf","NgIf","NzColDirective","NgClass","i4__namespace$3","NzFormLabelComponent","i6__namespace","NzButtonComponent","i7__namespace","NzWaveDirective","i3__namespace$2","ɵNzTransitionPatchDirective"],"mappings":"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","sourcesContent":["import { OfType } from './of-type';\r\nimport { Observable } from 'rxjs';\r\nimport { OfExtendControlModel } from './of-extend-control.model';\r\n\r\nexport interface OrdValidator {\r\n  name: string | 'email' | 'password' | 'phone';\r\n  validator?: any;\r\n  message?: string;\r\n}\r\n\r\nexport interface OfControlModelConfig {\r\n  dataField: string;\r\n  label: string;\r\n  hiddenLabel?: boolean;\r\n  width?: number;\r\n  // class css riêng cho control\r\n  css?: string;\r\n  required?: boolean;\r\n  errorEmpty?: string;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  disabledAsync?: Observable<boolean>;\r\n  hidden?: boolean;\r\n  hiddenAsync?: Observable<boolean>;\r\n  validations?: OrdValidator[];\r\n  value?: any | 'sessionTinh' | 'sessionHuyen' | 'sessionXa' | 'sessionBenhVienId';\r\n  // thêm ghi chú cuối control nếu có\r\n  bottomHtml?: string;\r\n}\r\n\r\n\r\nexport abstract class OfControlModel {\r\n  type: OfType = 'text';\r\n  dataField = '';\r\n  label = '';\r\n  hiddenLabel = false;\r\n  width = 6;\r\n  css = '';\r\n  required = false;\r\n  errorEmpty = 'Không để trống trường này!';\r\n  placeholder = '';\r\n  disabled = false;\r\n  disabledAsync: Observable<boolean>;\r\n  hidden = false;\r\n  hiddenAsync: Observable<boolean>;\r\n  validations: OrdValidator[] = [];\r\n  value: any | null | 'sessionTinh' | 'sessionHuyen' | 'sessionXa' | 'sessionBenhVienId';\r\n  bottomHtml: string;\r\n  controls: OfExtendControlModel[] = [];\r\n\r\n  protected constructor(config: OfControlModelConfig) {\r\n    this.dataField = config.dataField;\r\n    this.label = config.label || this.label;\r\n    this.hiddenLabel = config?.hiddenLabel || false;\r\n    this.width = config.width || this.width;\r\n    this.css = `ord-dynamic-input gutter-row ord-form-control field-${this.dataField} ${config.css || ''} `;\r\n    this.required = config.required || this.required;\r\n    this.errorEmpty = config.errorEmpty || this.errorEmpty;\r\n    this.placeholder = config.placeholder || this.placeholder;\r\n    this.disabled = config.disabled || this.disabled;\r\n    this.disabledAsync = config.disabledAsync || null;\r\n    this.hidden = config.hidden || this.hidden;\r\n    this.hiddenAsync = config.hiddenAsync || null;\r\n    this.validations = config.validations || [];\r\n    this.value = config?.value || null;\r\n    this.bottomHtml = config?.bottomHtml || null;\r\n  }\r\n\r\n}\r\n","import { OrdValidator } from './of-control.model';\r\n\r\n\r\nexport interface OfExtendControlModelConfig {\r\n  label?: string;\r\n  dataField: string;\r\n  validations?: OrdValidator[];\r\n  value?: any;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  errorEmpty?: string;\r\n}\r\n\r\n// cấu hình control trong template\r\nexport class OfExtendControlModel {\r\n  label: string;\r\n  dataField: string;\r\n  validations?: OrdValidator[];\r\n  value?: any;\r\n  required?: boolean;\r\n  disabled = false;\r\n  errorEmpty = '';\r\n\r\n  constructor(config: OfExtendControlModelConfig) {\r\n    this.label = config.label || '';\r\n    this.dataField = config.dataField;\r\n    this.validations = config.validations || [];\r\n    this.value = config.value;\r\n    this.required = config.required;\r\n    this.errorEmpty = config.errorEmpty || 'Không để trống trường này';\r\n    this.disabled = config?.disabled;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AbstractControl, FormGroup } from '@angular/forms';\r\nimport * as _ from 'lodash';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { OfControlModel } from './of-control.model';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { debounceTime, filter, takeUntil } from 'rxjs/operators';\r\n\r\n\r\nexport interface OfSchemaModelConfig {\r\n  layout?: 'horizontal' | 'vertical';\r\n  fields: OfControlModel[];\r\n  /// focus vào control đầu tiên khi init view\r\n  focusFisrtInit?: boolean;\r\n  errorNotValid?: string;\r\n  isSearchBox?: boolean;\r\n}\r\n\r\n\r\nexport class OfSchemaModel {\r\n\r\n  id: number;\r\n  layout?: 'horizontal' | 'vertical' = 'vertical';\r\n  fields: OfControlModel[];\r\n  form: FormGroup;\r\n  focusFisrtInit = true;\r\n  errorNotValid = 'Vui lòng điền đầy đủ thông tin!';\r\n  private backUpDisables = {};\r\n  private render$ = new Subject<number>();\r\n  isSearchBox = false;\r\n  searchBtnBusy = false;\r\n  searchEvent$ = new Subject<any>();\r\n  rebuilder$ = new Subject<number>();\r\n  submitted = false;\r\n\r\n  constructor(config: OfSchemaModelConfig) {\r\n    this.fields = config.fields;\r\n    this.id = Number(new Date());\r\n    this.focusFisrtInit = config?.focusFisrtInit || true;\r\n    this.errorNotValid = config?.errorNotValid || 'Vui lòng điền đầy đủ thông tin!';\r\n    this.isSearchBox = config?.isSearchBox || false;\r\n\r\n  }\r\n\r\n  get value() {\r\n    return this.form?.getRawValue() || null;\r\n  }\r\n\r\n  get valueValid() {\r\n    if (this.form?.valid) {\r\n      return this.value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getField(name: string) {\r\n    return this.fields?.find(x => x.dataField === name) || null;\r\n  }\r\n\r\n  getFormControl(name: string): AbstractControl | null {\r\n    return this.form.get(name);\r\n  }\r\n\r\n  disableField(name: string, f = true) {\r\n    setTimeout(() => {\r\n      const ctr = this.getFormControl(name);\r\n      if (ctr) {\r\n        if (f) {\r\n          ctr.disable({ onlySelf: true });\r\n        } else {\r\n          ctr.enable({ onlySelf: true });\r\n        }\r\n      }\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      const field = this.fields.find((f) => f.dataField === name);\r\n      if (field) {\r\n        field.disabled = f;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  disableAll(f = true) {\r\n    if (f) {\r\n      this.backUpDisables = {};\r\n      _.forEach(this.fields, field => {\r\n        if (field.disabled) {\r\n          this.backUpDisables[field.dataField] = true;\r\n        }\r\n        field.disabled = true;\r\n        const ctr = this.getFormControl(field.dataField);\r\n        if (ctr) {\r\n          ctr.disable({ onlySelf: true });\r\n        }\r\n      });\r\n      this.triggerRender();\r\n      return;\r\n    }\r\n    _.forEach(this.fields, field => {\r\n      const ctr = this.getFormControl(field.dataField);\r\n      if (ctr) {\r\n        const backUp = this.backUpDisables[field.dataField];\r\n        if (backUp) {\r\n          ctr.disable({ onlySelf: true });\r\n          field.disabled = true;\r\n        } else {\r\n          ctr.enable({ onlySelf: true });\r\n          field.disabled = false;\r\n        }\r\n      }\r\n    });\r\n    this.triggerRender();\r\n\r\n  }\r\n\r\n  hiddenFields(fields: string[]) {\r\n    _.forEach(fields, field => {\r\n      this.getField(field).hidden = true;\r\n    });\r\n\r\n  }\r\n\r\n  showFields(fields: string[]) {\r\n    _.forEach(fields, field => {\r\n      this.getField(field).hidden = false;\r\n    });\r\n\r\n  }\r\n\r\n  setHidden(fields: string[], hiddens: boolean[]) {\r\n    _.forEach(fields, (field, idx) => {\r\n      this.getField(field).hidden = hiddens[idx];\r\n    });\r\n  }\r\n\r\n  setShow(fields: string[], shows: boolean[]) {\r\n    _.forEach(fields, (field, idx) => {\r\n      this.getField(field).hidden = !shows[idx];\r\n    });\r\n  }\r\n\r\n  fieldValueChanges(name: string, time = 100) {\r\n    return this.form?.get(name).valueChanges.pipe(debounceTime(time));\r\n  }\r\n\r\n  valueChanges(time = 100) {\r\n    return this.form?.valueChanges.pipe(debounceTime(time));\r\n  }\r\n\r\n  patchValue(value: any) {\r\n    Object.keys(value).forEach(name => {\r\n      const f = this.form.get(name);\r\n      if (f) {\r\n        f.patchValue(value[name]);\r\n      }\r\n    });\r\n    this.triggerRender();\r\n  }\r\n\r\n  triggerRender() {\r\n    setTimeout(() => {\r\n      this.render$.next(Number(new Date()));\r\n    }, 500);\r\n  }\r\n\r\n  subRender(cdr: ChangeDetectorRef, destroy$: Observable<any>) {\r\n    this.render$.pipe(filter(s => s > 0)).pipe(debounceTime(111))\r\n      .pipe(takeUntil(destroy$))\r\n      .subscribe(d => {\r\n        cdr.detectChanges();\r\n      });\r\n  }\r\n\r\n  addControls(controls: OfControlModel[], indexBegin: number = null) {\r\n    if (indexBegin === null) {\r\n      this.fields = _.concat(this.fields, controls);\r\n    } else {\r\n      this.fields = _.flatMap(this.fields, (value, index) => {\r\n        if (index === indexBegin) {\r\n          return [...controls, value];\r\n        }\r\n        return value;\r\n      });\r\n    }\r\n    this.rebuilder();\r\n  }\r\n\r\n  rebuilder() {\r\n    setTimeout(() => {\r\n      this.rebuilder$.next(Number(new Date()));\r\n    });\r\n  }\r\n\r\n  search() {\r\n    if (this.searchEvent$) {\r\n      this.searchEvent$.next(this.value);\r\n    }\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport interface OrdCheckModelConfig extends OfControlModelConfig {\r\n  checkBoxLabel: string;\r\n}\r\n\r\n\r\nexport class OfCheckBoxModel extends OfControlModel {\r\n  checkBoxLabel = '';\r\n\r\n  constructor(config: OrdCheckModelConfig) {\r\n    super(config);\r\n    this.type = 'checkBox';\r\n    this.checkBoxLabel = config.checkBoxLabel;\r\n    this.value = this.value || false;\r\n  }\r\n}\r\n","import { Type } from '@angular/core';\r\nimport { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport interface OfComponentRefModelConfig<T> extends OfControlModelConfig {\r\n  componentRef: Type<T>;\r\n}\r\n\r\n\r\nexport class OfComponentRefModel<T> extends OfControlModel {\r\n  componentRef: Type<T>;\r\n\r\n  constructor(config: OfComponentRefModelConfig<T>) {\r\n    super(config);\r\n    this.type = 'componentRef';\r\n    this.componentRef = config.componentRef;\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport interface OfContentHtmlModelConfig extends OfControlModelConfig {\r\n  content?: string;\r\n  isBlank?: boolean;\r\n}\r\n\r\nexport class OfContentHtmlModel extends OfControlModel {\r\n  content: string | null;\r\n\r\n  constructor(config: OfContentHtmlModelConfig) {\r\n    super(config);\r\n    this.type = 'contentHtml';\r\n    this.content = config.content || '';\r\n    if (config.isBlank) {\r\n      this.content = '';\r\n    }\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport interface OfCurrencyModelConfig extends OfControlModelConfig {\r\n  prefix?: string;\r\n  suffix?: string;\r\n  precision?: number;\r\n}\r\n\r\n\r\nexport class OfCurrencyModel extends OfControlModel {\r\n  prefix: string | null;\r\n  suffix: string | null;\r\n  precision: number | null;\r\n\r\n  constructor(config: OfCurrencyModelConfig) {\r\n    super(config);\r\n    this.type = 'currencyInput';\r\n    this.prefix = config.prefix || ' ';\r\n    this.suffix = config.suffix || ' VNĐ';\r\n    this.precision = config.precision || 0;\r\n  }\r\n}\r\n","import * as moment from 'moment';\r\nimport { OfControlModel, OfControlModelConfig } from '../../models';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface OfDateModelConfig extends OfControlModelConfig {\r\n  minDateAsync?: Observable<Date | moment.Moment>;\r\n  maxDateAsync?: Observable<Date | moment.Moment>;\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n  notGreaterThanCurrent?: boolean;\r\n  tuNgayDataField?: string;\r\n  denNgayDataField?: string;\r\n}\r\n\r\n\r\nexport class OfDateModel extends OfControlModel {\r\n  minDateAsync: Observable<Date | moment.Moment> | null;\r\n  maxDateAsync: Observable<Date | moment.Moment> | null;\r\n  dateNotGreaterThanCurrent: boolean | null;\r\n  minDate: Date | null;\r\n  maxDate: Date | null;\r\n  tuNgayDataField?: string;\r\n  denNgayDataField?: string;\r\n\r\n  constructor(config: OfDateModelConfig) {\r\n    super(config);\r\n    this.type = 'datePicker';\r\n    this.minDateAsync = config.minDateAsync || null;\r\n    this.maxDateAsync = config.maxDateAsync || null;\r\n    this.dateNotGreaterThanCurrent = config.notGreaterThanCurrent || false;\r\n    this.minDate = config.minDate;\r\n    this.maxDate = config.maxDate;\r\n    this.tuNgayDataField = config.tuNgayDataField;\r\n    this.denNgayDataField = config.denNgayDataField;\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\nexport interface OfNumberModelConfig extends OfControlModelConfig {\r\n  min?: number;\r\n  max?: number;\r\n  step?: number;\r\n  // input chỉ nhập số vd:sđt\r\n  onlyKeyNumber?: boolean;\r\n  maxlength?: number;\r\n}\r\n\r\n\r\nexport class OfNumberModel extends OfControlModel {\r\n  min: number | null;\r\n  max: number | null;\r\n  step = 1;\r\n  onlyKeyNumber = false;\r\n  maxlength: number | null;\r\n\r\n  constructor(config: OfNumberModelConfig) {\r\n    super(config);\r\n    this.type = 'numberInput';\r\n    this.min = config.min || null;\r\n    this.max = config.max || null;\r\n    this.step = config.step || 1;\r\n    this.onlyKeyNumber = config.onlyKeyNumber || false;\r\n    this.maxlength = config.maxlength || null;\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport class OfPwdModel extends OfControlModel {\r\n\r\n  constructor(config: OfControlModelConfig) {\r\n    super(config);\r\n    this.type = 'passWordInput';\r\n    this.placeholder = this.placeholder || 'Nhập mật khẩu';\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport interface IRadioItem {\r\n  label: string;\r\n  value: string | number;\r\n}\r\n\r\nexport interface OfRadioModelConfig extends OfControlModelConfig {\r\n  items: IRadioItem[];\r\n\r\n}\r\n\r\n\r\nexport class OfRadioModel extends OfControlModel {\r\n  items: IRadioItem[];\r\n\r\n  constructor(config: OfRadioModelConfig) {\r\n    super(config);\r\n    this.type = 'radio';\r\n    this.items = config.items;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class AppUtilityService {\r\n  constructor() {\r\n  }\r\n\r\n  static isNullOrEmpty(input: any): boolean {\r\n    return typeof input === 'undefined' || input === null || input === '';\r\n    // return !(typeof input !== 'undefined' && input && input !== '' && input !== null);\r\n  }\r\n\r\n  static isNotNull(input: any): boolean {\r\n    return !this.isNullOrEmpty(input);\r\n  }\r\n\r\n  static getFullTextSearch(str) {\r\n    if (this.isNullOrEmpty(str)) {\r\n      return str;\r\n    }\r\n    str += '';\r\n    str = this.removeDau(str);\r\n    str = str.replace(/\\s\\s+/g, ' ');\r\n    return str;\r\n  }\r\n\r\n  static removeDau(str: string): string {\r\n    if (this.isNullOrEmpty(str)) {\r\n      return str;\r\n    }\r\n    str = str.toLowerCase();\r\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\r\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\r\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\r\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\r\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\r\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\r\n    str = str.replace(/đ/g, 'd');\r\n    str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g, ' ');\r\n    str = str.replace(/ + /g, ' ');\r\n    str = str.trim();\r\n    return str;\r\n  }\r\n\r\n  static isNotAnyItem(input): boolean {\r\n    return this.isNullOrEmpty(input) || input.length === 0;\r\n  }\r\n\r\n  static isWhitespace(value: string): boolean {\r\n    return (value || '').trim().length === 0;\r\n  }\r\n\r\n  static searchVietTat(str) {\r\n    if (this.isNullOrEmpty(str)) {\r\n      return str;\r\n    }\r\n    let ret = '';\r\n    const spl = str.split(' ');\r\n    if (this.isNotAnyItem(spl) === false) {\r\n      spl.forEach((s) => {\r\n        if (s.length > 0) {\r\n          ret = ret + s[0];\r\n        }\r\n      });\r\n    }\r\n    return this.getFullTextSearch(_.cloneDeep(ret));\r\n  }\r\n}\r\n","import { IOfSelectOptionDto } from './ord-combo-box-dto';\r\nimport { OfControlModel, OfControlModelConfig } from './of-control.model';\r\nimport { AppUtilityService } from '../services/app-utility-service';\r\n\r\nexport interface OfSelectBaseModelConfig extends OfControlModelConfig {\r\n  nzMode?: 'multiple' | 'tags' | 'default';\r\n  nzAllowClear?: boolean;\r\n  nzMaxMultipleCount?: number;\r\n  nzMaxTagCount?: number;\r\n  renderOptionFunc?: (option: IOfSelectOptionDto) => string;\r\n  renderSelectedFunc?: (option: IOfSelectOptionDto) => string;\r\n}\r\n\r\n\r\nexport class OfSelectBaseModel extends OfControlModel {\r\n  nzAllowClear = true;\r\n  nzMode: 'multiple' | 'tags' | 'default' = 'default';\r\n  nzMaxMultipleCount: number | null;\r\n  nzMaxTagCount: number | null;\r\n  options: IOfSelectOptionDto[] = [];\r\n  renderOptionFunc: (option: IOfSelectOptionDto) => string;\r\n  renderSelectedFunc: (option: IOfSelectOptionDto) => string;\r\n  itemSelected: IOfSelectOptionDto = null;\r\n\r\n  constructor(config: OfSelectBaseModelConfig) {\r\n    super(config);\r\n    this.nzMode = config?.nzMode || 'default';\r\n    if (AppUtilityService.isNotNull(config.nzAllowClear)) {\r\n      this.nzAllowClear = config.nzAllowClear;\r\n    }\r\n    if (this.nzMode === 'multiple') {\r\n      this.nzMaxMultipleCount = config?.nzMaxMultipleCount || Number.MAX_VALUE;\r\n    }\r\n    this.nzMaxTagCount = config?.nzMaxTagCount || 3;\r\n    this.placeholder = this.placeholder || '-Chọn-';\r\n    this.renderOptionFunc = config.renderOptionFunc || null;\r\n    this.renderSelectedFunc = config.renderSelectedFunc || null;\r\n    if (this.value) {\r\n      this.value = '' + this.value;\r\n    }\r\n\r\n  }\r\n}\r\n","import { OfSelectBaseModel, OfSelectBaseModelConfig } from '../../models/of-select-base.model';\r\nimport { IOfSelectOptionDto } from '../../models';\r\n\r\nexport interface OfSelectModelConfig extends OfSelectBaseModelConfig {\r\n  options: IOfSelectOptionDto[];\r\n}\r\n\r\n\r\nexport class OfSelectModel extends OfSelectBaseModel {\r\n  constructor(config: OfSelectModelConfig) {\r\n    super(config);\r\n    this.type = 'select';\r\n    this.options = config.options;\r\n\r\n  }\r\n}\r\n","import { OfSelectBaseModel, OfSelectBaseModelConfig } from '../../models/of-select-base.model';\r\nimport { Observable } from 'rxjs';\r\nimport { IOfSelectOptionDto } from '../../models';\r\n\r\nexport interface OfSelectApiModelConfig extends OfSelectBaseModelConfig {\r\n  // tslint:disable-next-line:ban-types\r\n  functionService: Observable<IOfSelectOptionDto[]>;\r\n  keyCache: string;\r\n}\r\n\r\n\r\nexport class OfSelectApiModel extends OfSelectBaseModel {\r\n  // tslint:disable-next-line:ban-types\r\n  functionService: Observable<IOfSelectOptionDto[]>;\r\n  keyCache: string;\r\n  dataExtend = {};\r\n\r\n  constructor(config: OfSelectApiModelConfig) {\r\n    super(config);\r\n    this.type = 'selectApi';\r\n    this.functionService = config.functionService;\r\n  }\r\n}\r\n","import { OfSelectBaseModel, OfSelectBaseModelConfig } from '../../models/of-select-base.model';\r\nimport { IOfSelectOptionDto } from '../../models';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface OfSelectAsyncModelConfig extends OfSelectBaseModelConfig {\r\n  optionsAsync: Observable<IOfSelectOptionDto[]>;\r\n  keyCache?: string;\r\n}\r\n\r\n\r\nexport class OfSelectAsyncModel extends OfSelectBaseModel {\r\n  optionsAsync: Observable<IOfSelectOptionDto[]>;\r\n  keyCache = '';\r\n\r\n  constructor(config: OfSelectAsyncModelConfig) {\r\n    super(config);\r\n    this.type = 'selectAsync';\r\n    this.optionsAsync = config.optionsAsync;\r\n    this.keyCache = config.keyCache;\r\n  }\r\n}\r\n","import { OfSelectBaseModel, OfSelectBaseModelConfig } from '../../models/of-select-base.model';\r\nimport { IOfSelectOptionDto } from '../../models';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface OfSelectCascadeModelConfig extends OfSelectBaseModelConfig {\r\n  functionService: (cascade: string) => Observable<IOfSelectOptionDto[]>;\r\n  keyCache?: string;\r\n  cascadeField: string;\r\n}\r\n\r\nexport class OfSelectCascadeModel extends OfSelectBaseModel {\r\n  functionService: (cascade: string) => Observable<IOfSelectOptionDto[]>;\r\n  keyCache = '';\r\n  cascadeField = '';\r\n\r\n  constructor(config: OfSelectCascadeModelConfig) {\r\n    super(config);\r\n    this.type = 'selectApiCascade';\r\n    this.functionService = config.functionService;\r\n    this.keyCache = config.keyCache;\r\n    this.cascadeField = config.cascadeField;\r\n  }\r\n}\r\n","import { IOfSelectOptionDto } from '../../models';\r\nimport { OfSelectBaseModel, OfSelectBaseModelConfig } from '../../models/of-select-base.model';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface PagedResultDtoOfSelectOption {\r\n  totalCount: number;\r\n  items: IOfSelectOptionDto[] | undefined;\r\n}\r\n\r\nexport interface ISelectSearchServerDto {\r\n  value: string | undefined;\r\n  filter: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport interface OfSelectSearchServerModelConfig extends OfSelectBaseModelConfig {\r\n  showPagination?: boolean;\r\n  functionService: (ISelectSearchServerDto) => Observable<PagedResultDtoOfSelectOption>;\r\n}\r\n\r\n\r\nexport class OfSelectSearchServerModel extends OfSelectBaseModel {\r\n  showPagination = false;\r\n  functionService: (ISelectSearchServerDto) => Observable<PagedResultDtoOfSelectOption>;\r\n\r\n  constructor(config: OfSelectSearchServerModelConfig) {\r\n    super(config);\r\n    this.type = 'selectSearchServer';\r\n    this.showPagination = config.showPagination || false;\r\n    this.functionService = config.functionService;\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport interface OfSwitchModelConfig extends OfControlModelConfig {\r\n  yesText?: string;\r\n  noText?: string;\r\n}\r\n\r\n\r\nexport class OfSwitchModel extends OfControlModel {\r\n  yesText: string | null;\r\n  noText: string | null;\r\n\r\n  constructor(config: OfSwitchModelConfig) {\r\n    super(config);\r\n    this.type = 'switch';\r\n    this.yesText = config.yesText || null;\r\n    this.noText = config.noText || null;\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig, OfExtendControlModel } from '../../models';\r\n\r\n\r\nexport interface OfTemplateRefModelConfig extends OfControlModelConfig {\r\n  controls: OfExtendControlModel[];\r\n}\r\n\r\n\r\nexport class OfTemplateRefModel extends OfControlModel {\r\n\r\n  constructor(config: OfTemplateRefModelConfig) {\r\n    super(config);\r\n    this.type = 'templateRef';\r\n    this.controls = config.controls;\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport interface OrdTextModelConfig extends OfControlModelConfig {\r\n  maxLength?: number;\r\n  minLength?: number;\r\n}\r\n\r\n\r\nexport class OfTextModel extends OfControlModel {\r\n  maxLength?: number | null;\r\n  minLength?: number | null;\r\n\r\n  constructor(config: OrdTextModelConfig) {\r\n    super(config);\r\n    this.type = 'text';\r\n    this.maxLength = config?.maxLength || null;\r\n    this.minLength = config?.minLength || null;\r\n  }\r\n}\r\n","import { OfControlModel, OfControlModelConfig } from '../../models';\r\n\r\n\r\nexport interface OfTextAreaModelConfig extends OfControlModelConfig {\r\n  maxLength?: number;\r\n  rows?: number;\r\n}\r\n\r\n\r\nexport class OfTextAreaModel extends OfControlModel {\r\n  maxLength = 2000;\r\n  rows = 1;\r\n\r\n  constructor(config: OfTextAreaModelConfig) {\r\n    super(config);\r\n    this.type = 'textArea';\r\n    if (config?.maxLength > 0) {\r\n      this.maxLength = config?.maxLength;\r\n    }\r\n    this.rows = config.rows || 1;\r\n  }\r\n}\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.0.6.0 (NJsonSchema v10.0.23.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n\r\nimport { catchError as _observableCatch, mergeMap as _observableMergeMap } from 'rxjs/operators';\r\nimport { Observable, of as _observableOf, throwError as _observableThrow } from 'rxjs';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\n\r\nimport * as moment from 'moment';\r\n\r\nexport const API_BASE_URL = 'http://ytcs-api-v2.orenda.vn';\r\n\r\n@Injectable()\r\nexport class AbpServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = 'http://ytcs-api-v2.orenda.vn';\r\n  }\r\n\r\n  /**\r\n   * @param includeTypes (optional)\r\n   * @return Success\r\n   */\r\n  apiDefinition(includeTypes: boolean | undefined): Observable<ApplicationApiDescriptionModel> {\r\n    let url_ = this.baseUrl + '/api/abp/api-definition?';\r\n    if (includeTypes === null)\r\n      throw new Error('The parameter \\'includeTypes\\' cannot be null.');\r\n    else if (includeTypes !== undefined)\r\n      url_ += 'IncludeTypes=' + encodeURIComponent('' + includeTypes) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processApiDefinition(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processApiDefinition(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ApplicationApiDescriptionModel>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ApplicationApiDescriptionModel>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processApiDefinition(response: HttpResponseBase): Observable<ApplicationApiDescriptionModel> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ApplicationApiDescriptionModel.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status === 403) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result403: any = null;\r\n        let resultData403 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result403 = RemoteServiceErrorResponse.fromJS(resultData403);\r\n        return throwException('Forbidden', status, _responseText, _headers, result403);\r\n      }));\r\n    } else if (status === 401) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result401: any = null;\r\n        let resultData401 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result401 = RemoteServiceErrorResponse.fromJS(resultData401);\r\n        return throwException('Unauthorized', status, _responseText, _headers, result401);\r\n      }));\r\n    } else if (status === 400) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result400: any = null;\r\n        let resultData400 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result400 = RemoteServiceErrorResponse.fromJS(resultData400);\r\n        return throwException('Bad Request', status, _responseText, _headers, result400);\r\n      }));\r\n    } else if (status === 404) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result404: any = null;\r\n        let resultData404 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result404 = RemoteServiceErrorResponse.fromJS(resultData404);\r\n        return throwException('Not Found', status, _responseText, _headers, result404);\r\n      }));\r\n    } else if (status === 501) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result501: any = null;\r\n        let resultData501 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result501 = RemoteServiceErrorResponse.fromJS(resultData501);\r\n        return throwException('Server Error', status, _responseText, _headers, result501);\r\n      }));\r\n    } else if (status === 500) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result500: any = null;\r\n        let resultData500 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result500 = RemoteServiceErrorResponse.fromJS(resultData500);\r\n        return throwException('Server Error', status, _responseText, _headers, result500);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ApplicationApiDescriptionModel>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  applicationConfiguration(): Observable<ApplicationConfigurationDto> {\r\n    let url_ = this.baseUrl + '/api/abp/application-configuration';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processApplicationConfiguration(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processApplicationConfiguration(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ApplicationConfigurationDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ApplicationConfigurationDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processApplicationConfiguration(response: HttpResponseBase): Observable<ApplicationConfigurationDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ApplicationConfigurationDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status === 403) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result403: any = null;\r\n        let resultData403 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result403 = RemoteServiceErrorResponse.fromJS(resultData403);\r\n        return throwException('Forbidden', status, _responseText, _headers, result403);\r\n      }));\r\n    } else if (status === 401) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result401: any = null;\r\n        let resultData401 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result401 = RemoteServiceErrorResponse.fromJS(resultData401);\r\n        return throwException('Unauthorized', status, _responseText, _headers, result401);\r\n      }));\r\n    } else if (status === 400) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result400: any = null;\r\n        let resultData400 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result400 = RemoteServiceErrorResponse.fromJS(resultData400);\r\n        return throwException('Bad Request', status, _responseText, _headers, result400);\r\n      }));\r\n    } else if (status === 404) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result404: any = null;\r\n        let resultData404 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result404 = RemoteServiceErrorResponse.fromJS(resultData404);\r\n        return throwException('Not Found', status, _responseText, _headers, result404);\r\n      }));\r\n    } else if (status === 501) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result501: any = null;\r\n        let resultData501 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result501 = RemoteServiceErrorResponse.fromJS(resultData501);\r\n        return throwException('Server Error', status, _responseText, _headers, result501);\r\n      }));\r\n    } else if (status === 500) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result500: any = null;\r\n        let resultData500 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result500 = RemoteServiceErrorResponse.fromJS(resultData500);\r\n        return throwException('Server Error', status, _responseText, _headers, result500);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ApplicationConfigurationDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TenantsServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  byName(name: string | null): Observable<FindTenantResultDto> {\r\n    let url_ = this.baseUrl + '/api/abp/multi-tenancy/tenants/by-name/{name}';\r\n    if (name === undefined || name === null)\r\n      throw new Error('The parameter \\'name\\' must be defined.');\r\n    url_ = url_.replace('{name}', encodeURIComponent('' + name));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processByName(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processByName(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FindTenantResultDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FindTenantResultDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processByName(response: HttpResponseBase): Observable<FindTenantResultDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FindTenantResultDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status === 403) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result403: any = null;\r\n        let resultData403 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result403 = RemoteServiceErrorResponse.fromJS(resultData403);\r\n        return throwException('Forbidden', status, _responseText, _headers, result403);\r\n      }));\r\n    } else if (status === 401) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result401: any = null;\r\n        let resultData401 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result401 = RemoteServiceErrorResponse.fromJS(resultData401);\r\n        return throwException('Unauthorized', status, _responseText, _headers, result401);\r\n      }));\r\n    } else if (status === 400) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result400: any = null;\r\n        let resultData400 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result400 = RemoteServiceErrorResponse.fromJS(resultData400);\r\n        return throwException('Bad Request', status, _responseText, _headers, result400);\r\n      }));\r\n    } else if (status === 404) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result404: any = null;\r\n        let resultData404 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result404 = RemoteServiceErrorResponse.fromJS(resultData404);\r\n        return throwException('Not Found', status, _responseText, _headers, result404);\r\n      }));\r\n    } else if (status === 501) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result501: any = null;\r\n        let resultData501 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result501 = RemoteServiceErrorResponse.fromJS(resultData501);\r\n        return throwException('Server Error', status, _responseText, _headers, result501);\r\n      }));\r\n    } else if (status === 500) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result500: any = null;\r\n        let resultData500 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result500 = RemoteServiceErrorResponse.fromJS(resultData500);\r\n        return throwException('Server Error', status, _responseText, _headers, result500);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FindTenantResultDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  byId(id: string): Observable<FindTenantResultDto> {\r\n    let url_ = this.baseUrl + '/api/abp/multi-tenancy/tenants/by-id/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processById(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processById(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FindTenantResultDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FindTenantResultDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processById(response: HttpResponseBase): Observable<FindTenantResultDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FindTenantResultDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status === 403) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result403: any = null;\r\n        let resultData403 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result403 = RemoteServiceErrorResponse.fromJS(resultData403);\r\n        return throwException('Forbidden', status, _responseText, _headers, result403);\r\n      }));\r\n    } else if (status === 401) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result401: any = null;\r\n        let resultData401 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result401 = RemoteServiceErrorResponse.fromJS(resultData401);\r\n        return throwException('Unauthorized', status, _responseText, _headers, result401);\r\n      }));\r\n    } else if (status === 400) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result400: any = null;\r\n        let resultData400 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result400 = RemoteServiceErrorResponse.fromJS(resultData400);\r\n        return throwException('Bad Request', status, _responseText, _headers, result400);\r\n      }));\r\n    } else if (status === 404) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result404: any = null;\r\n        let resultData404 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result404 = RemoteServiceErrorResponse.fromJS(resultData404);\r\n        return throwException('Not Found', status, _responseText, _headers, result404);\r\n      }));\r\n    } else if (status === 501) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result501: any = null;\r\n        let resultData501 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result501 = RemoteServiceErrorResponse.fromJS(resultData501);\r\n        return throwException('Server Error', status, _responseText, _headers, result501);\r\n      }));\r\n    } else if (status === 500) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result500: any = null;\r\n        let resultData500 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result500 = RemoteServiceErrorResponse.fromJS(resultData500);\r\n        return throwException('Server Error', status, _responseText, _headers, result500);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FindTenantResultDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class BenhvienServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: BenhVienPagedRequestDto | undefined): Observable<PagedResultDtoOfBenhVienDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfBenhVienDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfBenhVienDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfBenhVienDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfBenhVienDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfBenhVienDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  cosoyteautocompletedatasource(body: CoSoYTeAutoDataSourceRequest | undefined): Observable<PagedResultDtoOfCoSoYTeAutoDataSourceDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/cosoyteautocompletedatasource';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCosoyteautocompletedatasource(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCosoyteautocompletedatasource(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCoSoYTeAutoDataSourceDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCoSoYTeAutoDataSourceDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCosoyteautocompletedatasource(response: HttpResponseBase): Observable<PagedResultDtoOfCoSoYTeAutoDataSourceDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCoSoYTeAutoDataSourceDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCoSoYTeAutoDataSourceDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  cosoytedacodailyautocompletedatasource(body: CoSoYTeDaCoDaiLyAutoDataSourceRequest | undefined): Observable<PagedResultDtoOfCoSoYTeAutoDataSourceDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/cosoytedacodailyautocompletedatasource';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCosoytedacodailyautocompletedatasource(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCosoytedacodailyautocompletedatasource(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCoSoYTeAutoDataSourceDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCoSoYTeAutoDataSourceDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCosoytedacodailyautocompletedatasource(response: HttpResponseBase): Observable<PagedResultDtoOfCoSoYTeAutoDataSourceDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCoSoYTeAutoDataSourceDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCoSoYTeAutoDataSourceDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param ma (optional)\r\n   * @return Success\r\n   */\r\n  searchbenhvienidbyma(ma: string | null | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/searchbenhvienidbyma?';\r\n    if (ma !== undefined)\r\n      url_ += 'ma=' + encodeURIComponent('' + ma) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSearchbenhvienidbyma(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSearchbenhvienidbyma(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSearchbenhvienidbyma(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getdanhsachbenhvien(): Observable<BenhVienDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/getdanhsachbenhvien';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetdanhsachbenhvien(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetdanhsachbenhvien(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<BenhVienDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<BenhVienDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetdanhsachbenhvien(response: HttpResponseBase): Observable<BenhVienDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(BenhVienDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<BenhVienDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param benhVienId (optional)\r\n   * @return Success\r\n   */\r\n  comboboxbenhvienordichvu(benhVienId: number | null | undefined): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/comboboxbenhvienordichvu?';\r\n    if (benhVienId !== undefined)\r\n      url_ += 'BenhVienId=' + encodeURIComponent('' + benhVienId) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processComboboxbenhvienordichvu(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processComboboxbenhvienordichvu(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processComboboxbenhvienordichvu(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  loaibenhvienbyid(id: number): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/{id}/loaibenhvienbyid';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processLoaibenhvienbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processLoaibenhvienbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processLoaibenhvienbyid(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<BenhVienDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<BenhVienDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<BenhVienDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<BenhVienDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = BenhVienDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<BenhVienDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: BenhVienDto | undefined): Observable<BenhVienDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<BenhVienDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<BenhVienDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<BenhVienDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = BenhVienDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<BenhVienDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: BenhVienDto | undefined): Observable<BenhVienDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<BenhVienDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<BenhVienDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<BenhVienDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = BenhVienDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<BenhVienDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/benhvien/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhdichvusokhamServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  createordelete(body: DichVuSoKhamOutputDto[] | null | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/createordelete';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreateordelete(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreateordelete(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreateordelete(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedRequestDichVuSoKhamDto | undefined): Observable<PagedResultDtoOfDichVuSoKhamOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDichVuSoKhamOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDichVuSoKhamOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDichVuSoKhamOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDichVuSoKhamOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDichVuSoKhamOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DichVuSoKhamOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuSoKhamOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuSoKhamOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DichVuSoKhamOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuSoKhamOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuSoKhamOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DichVuSoKhamDto | undefined): Observable<DichVuSoKhamOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuSoKhamOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuSoKhamOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DichVuSoKhamOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuSoKhamOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuSoKhamOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DichVuSoKhamDto | undefined): Observable<DichVuSoKhamOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuSoKhamOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuSoKhamOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DichVuSoKhamOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuSoKhamOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuSoKhamOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhdoituongkhoduocServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param khoId (optional)\r\n   * @return Success\r\n   */\r\n  getkhodoituong(khoId: number | undefined): Observable<KhoDoiTuongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhdoituongkhoduoc/getkhodoituong?';\r\n    if (khoId === null)\r\n      throw new Error('The parameter \\'khoId\\' cannot be null.');\r\n    else if (khoId !== undefined)\r\n      url_ += 'khoId=' + encodeURIComponent('' + khoId) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetkhodoituong(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetkhodoituong(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KhoDoiTuongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KhoDoiTuongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetkhodoituong(response: HttpResponseBase): Observable<KhoDoiTuongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = KhoDoiTuongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KhoDoiTuongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  luucauhinh(body: KhoDoiTuongDto | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhdoituongkhoduoc/luucauhinh';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processLuucauhinh(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processLuucauhinh(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processLuucauhinh(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhgiadichvuServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: DichVuPagedRequestDto | undefined): Observable<PagedResultDtoOfDichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  gettreeview(): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/gettreeview';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGettreeview(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGettreeview(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGettreeview(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  updateserviceprices(body: ListDichVuDonGiaRequestDto | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/updateserviceprices';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdateserviceprices(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdateserviceprices(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdateserviceprices(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  releaseserviceprices(body: ListDichVuDonGiaRequestDto | undefined): Observable<ItemExistsPagedResultDtoOfDichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/releaseserviceprices';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processReleaseserviceprices(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processReleaseserviceprices(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ItemExistsPagedResultDtoOfDichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ItemExistsPagedResultDtoOfDichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processReleaseserviceprices(response: HttpResponseBase): Observable<ItemExistsPagedResultDtoOfDichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ItemExistsPagedResultDtoOfDichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ItemExistsPagedResultDtoOfDichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  releaseservicepricestoall(body: ListDichVuDonGiaRequestDto | undefined): Observable<ItemExistsPagedResultDtoOfDichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/releaseservicepricestoall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processReleaseservicepricestoall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processReleaseservicepricestoall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ItemExistsPagedResultDtoOfDichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ItemExistsPagedResultDtoOfDichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processReleaseservicepricestoall(response: HttpResponseBase): Observable<ItemExistsPagedResultDtoOfDichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ItemExistsPagedResultDtoOfDichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ItemExistsPagedResultDtoOfDichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  pricelistexpires(body: UpdateEffectiveDateRequestDto | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/pricelistexpires';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processPricelistexpires(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processPricelistexpires(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processPricelistexpires(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  updateeffectivedate(body: UpdateEffectiveDateRequestDto | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/updateeffectivedate';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdateeffectivedate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdateeffectivedate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdateeffectivedate(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  updateeffectivedatetoall(body: UpdateEffectiveDateRequestDto | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/updateeffectivedatetoall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdateeffectivedatetoall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdateeffectivedatetoall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdateeffectivedatetoall(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  importservice(body: ImportDichVuRequestDto | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/importservice';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processImportservice(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processImportservice(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processImportservice(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  validateexistsimportservice(body: ImportDichVuResultDto[] | null | undefined): Observable<ImportDichVuResultDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/validateexistsimportservice';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processValidateexistsimportservice(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processValidateexistsimportservice(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ImportDichVuResultDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ImportDichVuResultDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processValidateexistsimportservice(response: HttpResponseBase): Observable<ImportDichVuResultDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ImportDichVuResultDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ImportDichVuResultDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  exportexceldichvudangsoanthao(): Observable<FileDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/exportexceldichvudangsoanthao';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processExportexceldichvudangsoanthao(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processExportexceldichvudangsoanthao(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FileDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FileDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processExportexceldichvudangsoanthao(response: HttpResponseBase): Observable<FileDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FileDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FileDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  exportexceldichvudangsoanthaosample(): Observable<FileDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/exportexceldichvudangsoanthaosample';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processExportexceldichvudangsoanthaosample(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processExportexceldichvudangsoanthaosample(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FileDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FileDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processExportexceldichvudangsoanthaosample(response: HttpResponseBase): Observable<FileDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FileDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FileDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DichVuDto | undefined): Observable<DichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DichVuDto | undefined): Observable<DichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhmautinnhanServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getall(): Observable<CauHinhHeThongDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/getall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetall(response: HttpResponseBase): Observable<CauHinhHeThongDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(CauHinhHeThongDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  saveurl(body: CauHinhHeThongDto[] | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/saveurl';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSaveurl(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSaveurl(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSaveurl(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhphongbandichvuServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  createordelete(body: PhongBanDichVuOutputDto[] | null | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/createordelete';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreateordelete(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreateordelete(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreateordelete(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedRequestPhongBanDichVuDto | undefined): Observable<PagedResultDtoOfPhongBanDichVuOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfPhongBanDichVuOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfPhongBanDichVuOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfPhongBanDichVuOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfPhongBanDichVuOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfPhongBanDichVuOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<PhongBanDichVuOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhongBanDichVuOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhongBanDichVuOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<PhongBanDichVuOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhongBanDichVuOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhongBanDichVuOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: PhongBanDichVuDto | undefined): Observable<PhongBanDichVuOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhongBanDichVuOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhongBanDichVuOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<PhongBanDichVuOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhongBanDichVuOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhongBanDichVuOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: PhongBanDichVuDto | undefined): Observable<PhongBanDichVuOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhongBanDichVuOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhongBanDichVuOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<PhongBanDichVuOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhongBanDichVuOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhongBanDichVuOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhquanlyhosobccsServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getall(): Observable<CauHinhHeThongDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/getall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetall(response: HttpResponseBase): Observable<CauHinhHeThongDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(CauHinhHeThongDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  saveurl(body: CauHinhHeThongDto[] | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/saveurl';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSaveurl(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSaveurl(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSaveurl(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhtaikhoanbulksmsServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getall(): Observable<CauHinhHeThongDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/getall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetall(response: HttpResponseBase): Observable<CauHinhHeThongDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(CauHinhHeThongDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  saveurl(body: CauHinhHeThongDto[] | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/saveurl';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSaveurl(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSaveurl(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSaveurl(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhtaikhoandichvuthecaoServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getall(): Observable<CauHinhHeThongDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/getall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetall(response: HttpResponseBase): Observable<CauHinhHeThongDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(CauHinhHeThongDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  saveurl(body: CauHinhHeThongDto[] | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/saveurl';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSaveurl(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSaveurl(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSaveurl(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhtaikhoanlienthongServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<CauHinhTaiKhoanLienThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhTaiKhoanLienThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhTaiKhoanLienThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<CauHinhTaiKhoanLienThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhTaiKhoanLienThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhTaiKhoanLienThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getall(): Observable<CauHinhTaiKhoanLienThongDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/getall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhTaiKhoanLienThongDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhTaiKhoanLienThongDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetall(response: HttpResponseBase): Observable<CauHinhTaiKhoanLienThongDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(CauHinhTaiKhoanLienThongDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhTaiKhoanLienThongDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyloaitaikhoan(loaiTaiKhoan: string | null): Observable<CauHinhTaiKhoanLienThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/getbyloaitaikhoan/{loaiTaiKhoan}';\r\n    if (loaiTaiKhoan === undefined || loaiTaiKhoan === null)\r\n      throw new Error('The parameter \\'loaiTaiKhoan\\' must be defined.');\r\n    url_ = url_.replace('{loaiTaiKhoan}', encodeURIComponent('' + loaiTaiKhoan));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyloaitaikhoan(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyloaitaikhoan(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhTaiKhoanLienThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhTaiKhoanLienThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyloaitaikhoan(response: HttpResponseBase): Observable<CauHinhTaiKhoanLienThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhTaiKhoanLienThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhTaiKhoanLienThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: CauHinhTaiKhoanLienThongDto | undefined): Observable<CauHinhTaiKhoanLienThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhTaiKhoanLienThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhTaiKhoanLienThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<CauHinhTaiKhoanLienThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhTaiKhoanLienThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhTaiKhoanLienThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  test(body: CauHinhTaiKhoanLienThongDto | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/test';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processTest(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processTest(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processTest(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  saveurl(body: CauHinhTaiKhoanLienThongDto[] | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/saveurl';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSaveurl(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSaveurl(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSaveurl(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfCauHinhTaiKhoanLienThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCauHinhTaiKhoanLienThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCauHinhTaiKhoanLienThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfCauHinhTaiKhoanLienThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCauHinhTaiKhoanLienThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCauHinhTaiKhoanLienThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: CauHinhTaiKhoanLienThongDto | undefined): Observable<CauHinhTaiKhoanLienThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhTaiKhoanLienThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhTaiKhoanLienThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<CauHinhTaiKhoanLienThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhTaiKhoanLienThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhTaiKhoanLienThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhtaikhoanviettelpayServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getall(): Observable<CauHinhHeThongDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/getall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetall(response: HttpResponseBase): Observable<CauHinhHeThongDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(CauHinhHeThongDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  saveurl(body: CauHinhHeThongDto[] | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/saveurl';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSaveurl(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSaveurl(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSaveurl(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CauhinhtinnhandichvuServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getall(): Observable<CauHinhHeThongDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/getall';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetall(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetall(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetall(response: HttpResponseBase): Observable<CauHinhHeThongDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(CauHinhHeThongDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  saveurl(body: CauHinhHeThongDto[] | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/saveurl';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSaveurl(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSaveurl(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSaveurl(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfCauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfCauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfCauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: CauHinhHeThongDto | undefined): Observable<CauHinhHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CauHinhHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CauHinhHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<CauHinhHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CauHinhHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CauHinhHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ChuongtrinhServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfChuongTrinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfChuongTrinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfChuongTrinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfChuongTrinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfChuongTrinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfChuongTrinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<ChuongTrinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ChuongTrinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ChuongTrinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<ChuongTrinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ChuongTrinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ChuongTrinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: ChuongTrinhDto | undefined): Observable<ChuongTrinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ChuongTrinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ChuongTrinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<ChuongTrinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ChuongTrinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ChuongTrinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: ChuongTrinhDto | undefined): Observable<ChuongTrinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ChuongTrinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ChuongTrinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<ChuongTrinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ChuongTrinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ChuongTrinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CombodataServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getfromdatabase(body: GetComboDataFromDataBaseInputDto | undefined): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/combodata/getfromdatabase';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetfromdatabase(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetfromdatabase(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetfromdatabase(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getfromdatabasetreeview(body: GetComboDataFromDataBaseInputDto | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/combodata/getfromdatabasetreeview';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetfromdatabasetreeview(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetfromdatabasetreeview(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetfromdatabasetreeview(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param type (optional)\r\n   * @return Success\r\n   */\r\n  appenum(type: string | null | undefined): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/combodata/appenum?';\r\n    if (type !== undefined)\r\n      url_ += 'type=' + encodeURIComponent('' + type) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processAppenum(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processAppenum(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processAppenum(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DichvukhamchuabenhServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: DichVuPagedRequestDto | undefined): Observable<PagedResultDtoOfDichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  gettreeview(): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/gettreeview';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGettreeview(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGettreeview(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGettreeview(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DichVuDto | undefined): Observable<DichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  createbatch(ids: string | null): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/createbatch/{ids}';\r\n    if (ids === undefined || ids === null)\r\n      throw new Error('The parameter \\'ids\\' must be defined.');\r\n    url_ = url_.replace('{ids}', encodeURIComponent('' + ids));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreatebatch(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreatebatch(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreatebatch(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DichVuDto | undefined): Observable<DichVuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DichVuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DichVuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DichVuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DichVuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DichVuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  export(body: DichVuPagedRequestDto | undefined): Observable<FileDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/export';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processExport(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processExport(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FileDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FileDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processExport(response: HttpResponseBase): Observable<FileDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FileDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FileDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DoituongServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  treedatadoituong(): Observable<DoiTuongTreeDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituong/treedatadoituong';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processTreedatadoituong(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processTreedatadoituong(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongTreeDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongTreeDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processTreedatadoituong(response: HttpResponseBase): Observable<DoiTuongTreeDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(DoiTuongTreeDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongTreeDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DoiTuongDto | undefined): Observable<DoiTuongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituong/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DoiTuongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DoiTuongDto | undefined): Observable<DoiTuongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituong/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DoiTuongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: DoiTuongPagedRequest | undefined): Observable<PagedResultDtoOfDoiTuongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituong/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDoiTuongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDoiTuongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDoiTuongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDoiTuongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDoiTuongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DoiTuongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituong/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DoiTuongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituong/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DoituongkhoduocnoitruServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  gettreedatadoituongkhoduocnoitru(body: DoiTuongNoiTruInput | undefined): Observable<KhoDuocTreeDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/gettreedatadoituongkhoduocnoitru';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGettreedatadoituongkhoduocnoitru(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGettreedatadoituongkhoduocnoitru(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KhoDuocTreeDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KhoDuocTreeDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGettreedatadoituongkhoduocnoitru(response: HttpResponseBase): Observable<KhoDuocTreeDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(KhoDuocTreeDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KhoDuocTreeDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  createorupdatedoituongnoitru(body: ParamsCreateOrUpdateDoiTuongNoiTruDto | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/createorupdatedoituongnoitru';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreateorupdatedoituongnoitru(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreateorupdatedoituongnoitru(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreateorupdatedoituongnoitru(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: DoiTuongKhoDuocNoiTruPagedRequestDto | undefined): Observable<PagedResultDtoOfDoiTuongKhoDuocNoiTruDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDoiTuongKhoDuocNoiTruDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDoiTuongKhoDuocNoiTruDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDoiTuongKhoDuocNoiTruDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDoiTuongKhoDuocNoiTruDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDoiTuongKhoDuocNoiTruDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DoiTuongKhoDuocNoiTruDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongKhoDuocNoiTruDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongKhoDuocNoiTruDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DoiTuongKhoDuocNoiTruDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongKhoDuocNoiTruDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongKhoDuocNoiTruDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DoiTuongKhoDuocNoiTruDto | undefined): Observable<DoiTuongKhoDuocNoiTruDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongKhoDuocNoiTruDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongKhoDuocNoiTruDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DoiTuongKhoDuocNoiTruDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongKhoDuocNoiTruDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongKhoDuocNoiTruDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DoiTuongKhoDuocNoiTruDto | undefined): Observable<DoiTuongKhoDuocNoiTruDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongKhoDuocNoiTruDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongKhoDuocNoiTruDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DoiTuongKhoDuocNoiTruDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongKhoDuocNoiTruDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongKhoDuocNoiTruDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DoituongloaigiaServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  gettreedatadoituongloaigia(body: Params | undefined): Observable<LoaiGiaTreeDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/gettreedatadoituongloaigia';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGettreedatadoituongloaigia(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGettreedatadoituongloaigia(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiGiaTreeDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiGiaTreeDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGettreedatadoituongloaigia(response: HttpResponseBase): Observable<LoaiGiaTreeDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(LoaiGiaTreeDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiGiaTreeDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  createorupdate(body: ParamUpdateOrCreateDto | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/createorupdate';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreateorupdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreateorupdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreateorupdate(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: DoiTuongLoaiGiaPagedRequestDto | undefined): Observable<PagedResultDtoOfDoiTuongLoaiGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDoiTuongLoaiGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDoiTuongLoaiGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDoiTuongLoaiGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDoiTuongLoaiGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDoiTuongLoaiGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DoiTuongLoaiGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongLoaiGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongLoaiGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DoiTuongLoaiGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongLoaiGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongLoaiGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DoiTuongLoaiGiaDto | undefined): Observable<DoiTuongLoaiGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongLoaiGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongLoaiGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DoiTuongLoaiGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongLoaiGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongLoaiGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DoiTuongLoaiGiaDto | undefined): Observable<DoiTuongLoaiGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DoiTuongLoaiGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DoiTuongLoaiGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DoiTuongLoaiGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DoiTuongLoaiGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DoiTuongLoaiGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DonvihanhchinhServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DonViHanhChinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DonViHanhChinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DonViHanhChinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DonViHanhChinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DonViHanhChinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DonViHanhChinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DonViHanhChinhDto | undefined): Observable<DonViHanhChinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DonViHanhChinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DonViHanhChinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DonViHanhChinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DonViHanhChinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DonViHanhChinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DonViHanhChinhDto | undefined): Observable<DonViHanhChinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DonViHanhChinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DonViHanhChinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DonViHanhChinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DonViHanhChinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DonViHanhChinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedRequestDonViHanhChinhDto | undefined): Observable<PagedResultDtoOfDonViHanhChinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDonViHanhChinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDonViHanhChinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDonViHanhChinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDonViHanhChinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDonViHanhChinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DonvitinhduocphamServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: DonViTinhPagedRequestDto | undefined): Observable<PagedResultDtoOfDonViTinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDonViTinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDonViTinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDonViTinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDonViTinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDonViTinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DonViTinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DonViTinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DonViTinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DonViTinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DonViTinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DonViTinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DonViTinhDto | undefined): Observable<DonViTinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DonViTinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DonViTinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DonViTinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DonViTinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DonViTinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DonViTinhDto | undefined): Observable<DonViTinhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DonViTinhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DonViTinhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DonViTinhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DonViTinhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DonViTinhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DuocbenhvienServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  bulkthongtinthaubyduocid(body: InsertBulkThongTinThauByDuocIdRequest | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/bulkthongtinthaubyduocid';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processBulkthongtinthaubyduocid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processBulkthongtinthaubyduocid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processBulkthongtinthaubyduocid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  thongtinthaubyduocid(id: number): Observable<DuocThongTinThauDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/{id}/thongtinthaubyduocid';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processThongtinthaubyduocid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processThongtinthaubyduocid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DuocThongTinThauDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DuocThongTinThauDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processThongtinthaubyduocid(response: HttpResponseBase): Observable<DuocThongTinThauDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(DuocThongTinThauDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DuocThongTinThauDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getpagedlistduocdungchung(body: DuocDungChungPagedListInputDto | undefined): Observable<PagedResultDtoOfDuocDungChungDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/getpagedlistduocdungchung';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetpagedlistduocdungchung(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetpagedlistduocdungchung(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDuocDungChungDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDuocDungChungDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetpagedlistduocdungchung(response: HttpResponseBase): Observable<PagedResultDtoOfDuocDungChungDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDuocDungChungDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDuocDungChungDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  themthuoctudanhmucchung(body: ThemThuocTuDanhMucDungChungRequest | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/themthuoctudanhmucchung';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processThemthuoctudanhmucchung(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processThemthuoctudanhmucchung(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processThemthuoctudanhmucchung(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  exportexcelmaumacdinh(body: DuocBenhVienPageListInputDto | undefined): Observable<FileDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/exportexcelmaumacdinh';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processExportexcelmaumacdinh(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processExportexcelmaumacdinh(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FileDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FileDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processExportexcelmaumacdinh(response: HttpResponseBase): Observable<FileDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FileDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FileDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  exportexcelmau917(body: DuocBenhVienPageListInputDto | undefined): Observable<FileDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/exportexcelmau917';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processExportexcelmau917(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processExportexcelmau917(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FileDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FileDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processExportexcelmau917(response: HttpResponseBase): Observable<FileDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FileDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FileDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DuocDto | undefined): Observable<DuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DuocDto | undefined): Observable<DuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param idUpdate (optional)\r\n   * @return Success\r\n   */\r\n  checktrungvacxin(vacxinId: number, idUpdate: number | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/checktrungvacxin/{VacxinId}?';\r\n    if (vacxinId === undefined || vacxinId === null)\r\n      throw new Error('The parameter \\'vacxinId\\' must be defined.');\r\n    url_ = url_.replace('{VacxinId}', encodeURIComponent('' + vacxinId));\r\n    if (idUpdate !== undefined)\r\n      url_ += 'idUpdate=' + encodeURIComponent('' + idUpdate) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processChecktrungvacxin(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processChecktrungvacxin(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processChecktrungvacxin(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: DuocBenhVienPageListInputDto | undefined): Observable<PagedResultDtoOfDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class DuocthongtinthauServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfDuocThongTinThauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDuocThongTinThauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDuocThongTinThauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDuocThongTinThauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDuocThongTinThauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDuocThongTinThauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DuocThongTinThauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DuocThongTinThauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DuocThongTinThauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DuocThongTinThauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DuocThongTinThauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DuocThongTinThauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: DuocThongTinThauDto | undefined): Observable<DuocThongTinThauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DuocThongTinThauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DuocThongTinThauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DuocThongTinThauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DuocThongTinThauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DuocThongTinThauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: DuocThongTinThauDto | undefined): Observable<DuocThongTinThauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DuocThongTinThauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DuocThongTinThauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DuocThongTinThauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DuocThongTinThauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DuocThongTinThauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class FileServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  downloadtempfile(token: string | null): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/file/downloadtempfile/{token}';\r\n    if (token === undefined || token === null)\r\n      throw new Error('The parameter \\'token\\' must be defined.');\r\n    url_ = url_.replace('{token}', encodeURIComponent('' + token));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processDownloadtempfile(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processDownloadtempfile(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processDownloadtempfile(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param contentType (optional)\r\n   * @return Success\r\n   */\r\n  nhanvienimg(id: number, loai: number, contentType: string | null | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/file/nhanvienimg/{id}/{loai}?';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    if (loai === undefined || loai === null)\r\n      throw new Error('The parameter \\'loai\\' must be defined.');\r\n    url_ = url_.replace('{loai}', encodeURIComponent('' + loai));\r\n    if (contentType !== undefined)\r\n      url_ += 'contentType=' + encodeURIComponent('' + contentType) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processNhanvienimg(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processNhanvienimg(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processNhanvienimg(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param width (optional)\r\n   * @param height (optional)\r\n   * @return Success\r\n   */\r\n  uploadanh(width: number | null | undefined, height: number | null | undefined): Observable<FileDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/file/uploadanh?';\r\n    if (width !== undefined)\r\n      url_ += 'width=' + encodeURIComponent('' + width) + '&';\r\n    if (height !== undefined)\r\n      url_ += 'height=' + encodeURIComponent('' + height) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUploadanh(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUploadanh(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FileDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FileDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUploadanh(response: HttpResponseBase): Observable<FileDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FileDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FileDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  uploaexcel(): Observable<FileDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/file/uploaexcel';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUploaexcel(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUploaexcel(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<FileDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<FileDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUploaexcel(response: HttpResponseBase): Observable<FileDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = FileDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<FileDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class GetentitycommonServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getbyid(body: GetEntityByIdInputDto | undefined): Observable<GetEntityByIdOutDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/getentitycommon/getbyid';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<GetEntityByIdOutDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<GetEntityByIdOutDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<GetEntityByIdOutDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = GetEntityByIdOutDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<GetEntityByIdOutDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class GiuongbenhServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: GiuongBenhDto | undefined): Observable<GiuongBenhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/giuongbenh/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<GiuongBenhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<GiuongBenhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<GiuongBenhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = GiuongBenhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<GiuongBenhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: GiuongBenhDto | undefined): Observable<GiuongBenhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/giuongbenh/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<GiuongBenhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<GiuongBenhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<GiuongBenhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = GiuongBenhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<GiuongBenhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: GiuongBenhPagedRequestDto | undefined): Observable<PagedResultDtoOfGiuongBenhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/giuongbenh/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfGiuongBenhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfGiuongBenhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfGiuongBenhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfGiuongBenhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfGiuongBenhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<GiuongBenhDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/giuongbenh/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<GiuongBenhDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<GiuongBenhDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<GiuongBenhDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = GiuongBenhDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<GiuongBenhDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/giuongbenh/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class HethongdanhmucServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: LstDictionaryDto | undefined): Observable<LstDictionaryDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LstDictionaryDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LstDictionaryDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<LstDictionaryDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LstDictionaryDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LstDictionaryDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: LstDictionaryDto | undefined): Observable<LstDictionaryDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LstDictionaryDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LstDictionaryDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<LstDictionaryDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LstDictionaryDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LstDictionaryDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getListDictionaryByListTypeCode(body: LstDictionaryGetByListCodePagedRequestDto | undefined): Observable<LstDictionaryDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/get-list-dictionary-by-list-type-code';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetListDictionaryByListTypeCode(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetListDictionaryByListTypeCode(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LstDictionaryDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LstDictionaryDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetListDictionaryByListTypeCode(response: HttpResponseBase): Observable<LstDictionaryDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(LstDictionaryDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LstDictionaryDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: LstDictionaryPagedRequestDto | undefined): Observable<PagedResultDtoOfLstDictionaryDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfLstDictionaryDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfLstDictionaryDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfLstDictionaryDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfLstDictionaryDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfLstDictionaryDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<LstDictionaryDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LstDictionaryDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LstDictionaryDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<LstDictionaryDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LstDictionaryDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LstDictionaryDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class HethongdanhmucdinhnghiaServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  gettreeview(): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/gettreeview';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGettreeview(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGettreeview(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGettreeview(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: LstDictionaryTypeDto | undefined): Observable<LstDictionaryTypeDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LstDictionaryTypeDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LstDictionaryTypeDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<LstDictionaryTypeDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LstDictionaryTypeDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LstDictionaryTypeDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: LstDictionaryTypeDto | undefined): Observable<LstDictionaryTypeDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LstDictionaryTypeDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LstDictionaryTypeDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<LstDictionaryTypeDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LstDictionaryTypeDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LstDictionaryTypeDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyids(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/removebyids/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyids(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyids(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyids(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: LstDictionaryTypePagedRequestDto | undefined): Observable<PagedResultDtoOfLstDictionaryTypeDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfLstDictionaryTypeDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfLstDictionaryTypeDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfLstDictionaryTypeDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfLstDictionaryTypeDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfLstDictionaryTypeDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<LstDictionaryTypeDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LstDictionaryTypeDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LstDictionaryTypeDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<LstDictionaryTypeDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LstDictionaryTypeDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LstDictionaryTypeDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class HoatchatServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: HoatChatPagedListInputDto | undefined): Observable<PagedResultDtoOfHoatChatDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hoatchat/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfHoatChatDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfHoatChatDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfHoatChatDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfHoatChatDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfHoatChatDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<HoatChatDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hoatchat/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<HoatChatDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<HoatChatDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<HoatChatDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = HoatChatDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<HoatChatDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: HoatChatDto | undefined): Observable<HoatChatDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hoatchat/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<HoatChatDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<HoatChatDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<HoatChatDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = HoatChatDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<HoatChatDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: HoatChatDto | undefined): Observable<HoatChatDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hoatchat/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<HoatChatDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<HoatChatDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<HoatChatDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = HoatChatDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<HoatChatDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/hoatchat/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ImportduocphamServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  kiemtrathuoc(body: KiemTraExcelThuocRequest | undefined): Observable<KiemTraExcelThuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/importduocpham/kiemtrathuoc';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processKiemtrathuoc(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processKiemtrathuoc(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KiemTraExcelThuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KiemTraExcelThuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processKiemtrathuoc(response: HttpResponseBase): Observable<KiemTraExcelThuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = KiemTraExcelThuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KiemTraExcelThuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  insertthuochople(body: InsertThuocHopLeRequest | undefined): Observable<CommonResultDtoOfInt32> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/importduocpham/insertthuochople';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processInsertthuochople(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processInsertthuochople(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfInt32>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfInt32>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processInsertthuochople(response: HttpResponseBase): Observable<CommonResultDtoOfInt32> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfInt32.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfInt32>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  updatethuochople(body: UpdateThuocHopLeRequest | undefined): Observable<CommonResultDtoOfInt32> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/importduocpham/updatethuochople';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdatethuochople(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdatethuochople(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfInt32>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfInt32>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdatethuochople(response: HttpResponseBase): Observable<CommonResultDtoOfInt32> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfInt32.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfInt32>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class KhangnguyenServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: KhangNguyenDto | undefined): Observable<KhangNguyenDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khangnguyen/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KhangNguyenDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KhangNguyenDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<KhangNguyenDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = KhangNguyenDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KhangNguyenDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: KhangNguyenDto | undefined): Observable<KhangNguyenDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khangnguyen/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KhangNguyenDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KhangNguyenDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<KhangNguyenDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = KhangNguyenDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KhangNguyenDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  comboboxdata(): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khangnguyen/comboboxdata';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processComboboxdata(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processComboboxdata(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processComboboxdata(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  checktrungid(id: number): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khangnguyen/{id}/checktrungid';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processChecktrungid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processChecktrungid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processChecktrungid(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khangnguyen/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  listkhangnguyencombo(): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khangnguyen/listkhangnguyencombo';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processListkhangnguyencombo(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processListkhangnguyencombo(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processListkhangnguyencombo(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<KhangNguyenDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khangnguyen/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KhangNguyenDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KhangNguyenDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<KhangNguyenDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = KhangNguyenDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KhangNguyenDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfKhangNguyenDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khangnguyen/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfKhangNguyenDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfKhangNguyenDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfKhangNguyenDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfKhangNguyenDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfKhangNguyenDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class KhoduocServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: KhoDuocPagedRequestDto | undefined): Observable<PagedResultDtoOfKhoDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khoduoc/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfKhoDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfKhoDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfKhoDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfKhoDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfKhoDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: KhoDuocDto | undefined): Observable<KhoDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khoduoc/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KhoDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KhoDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<KhoDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = KhoDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KhoDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: KhoDuocDto | undefined): Observable<KhoDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khoduoc/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KhoDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KhoDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<KhoDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = KhoDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KhoDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<KhoDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khoduoc/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<KhoDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<KhoDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<KhoDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = KhoDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<KhoDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/khoduoc/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class LoaiduocServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: LoaiDuocPagedListInputDto | undefined): Observable<PagedResultDtoOfLoaiDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaiduoc/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfLoaiDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfLoaiDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfLoaiDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfLoaiDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfLoaiDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<LoaiDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaiduoc/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<LoaiDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: LoaiDuocDto | undefined): Observable<LoaiDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaiduoc/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<LoaiDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: LoaiDuocDto | undefined): Observable<LoaiDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaiduoc/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<LoaiDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaiduoc/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class LoaigiaServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: LoaiGiaDto | undefined): Observable<LoaiGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaigia/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<LoaiGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: LoaiGiaDto | undefined): Observable<LoaiGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaigia/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<LoaiGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: LoaiGiaPagedRequestDto | undefined): Observable<PagedResultDtoOfLoaiGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaigia/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfLoaiGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfLoaiGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfLoaiGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfLoaiGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfLoaiGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<LoaiGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaigia/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<LoaiGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaigia/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class LoaivattuServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfLoaiVatTuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaivattu/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfLoaiVatTuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfLoaiVatTuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfLoaiVatTuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfLoaiVatTuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfLoaiVatTuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<LoaiVatTuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaivattu/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiVatTuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiVatTuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<LoaiVatTuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiVatTuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiVatTuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: LoaiVatTuDto | undefined): Observable<LoaiVatTuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaivattu/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiVatTuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiVatTuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<LoaiVatTuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiVatTuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiVatTuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: LoaiVatTuDto | undefined): Observable<LoaiVatTuDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaivattu/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<LoaiVatTuDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<LoaiVatTuDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<LoaiVatTuDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = LoaiVatTuDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<LoaiVatTuDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/loaivattu/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class NhacungcapServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: NhaCungCapDto | undefined): Observable<NhaCungCapDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhacungcap/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhaCungCapDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhaCungCapDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<NhaCungCapDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhaCungCapDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhaCungCapDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: NhaCungCapDto | undefined): Observable<NhaCungCapDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhacungcap/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhaCungCapDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhaCungCapDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<NhaCungCapDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhaCungCapDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhaCungCapDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: NhaCungCapPagedRequestDto | undefined): Observable<PagedResultDtoOfNhaCungCapDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhacungcap/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfNhaCungCapDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfNhaCungCapDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfNhaCungCapDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfNhaCungCapDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfNhaCungCapDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<NhaCungCapDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhacungcap/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhaCungCapDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhaCungCapDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<NhaCungCapDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhaCungCapDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhaCungCapDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhacungcap/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class NhanlucServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param fileToken (optional)\r\n   * @return Success\r\n   */\r\n  uploadanh(nhanLucId: number, loai: NHAN_LUC_LOAI_HINH_ANH, fileToken: string | null | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhanluc/uploadanh/{nhanLucId}?';\r\n    if (nhanLucId === undefined || nhanLucId === null)\r\n      throw new Error('The parameter \\'nhanLucId\\' must be defined.');\r\n    url_ = url_.replace('{nhanLucId}', encodeURIComponent('' + nhanLucId));\r\n    if (loai === undefined || loai === null)\r\n      throw new Error('The parameter \\'loai\\' must be defined and cannot be null.');\r\n    else\r\n      url_ += 'loai=' + encodeURIComponent('' + loai) + '&';\r\n    if (fileToken !== undefined)\r\n      url_ += 'fileToken=' + encodeURIComponent('' + fileToken) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUploadanh(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUploadanh(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUploadanh(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  nhanlucbybenhvienid(benhVienId: number): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhanluc/nhanlucbybenhvienid/{BenhVienId}';\r\n    if (benhVienId === undefined || benhVienId === null)\r\n      throw new Error('The parameter \\'benhVienId\\' must be defined.');\r\n    url_ = url_.replace('{BenhVienId}', encodeURIComponent('' + benhVienId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processNhanlucbybenhvienid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processNhanlucbybenhvienid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processNhanlucbybenhvienid(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: NhanLucPagedRequestDto | undefined): Observable<PagedResultDtoOfNhanLucDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhanluc/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfNhanLucDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfNhanLucDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfNhanLucDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfNhanLucDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfNhanLucDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<NhanLucDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhanluc/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhanLucDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhanLucDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<NhanLucDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhanLucDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhanLucDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: NhanLucDto | undefined): Observable<NhanLucDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhanluc/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhanLucDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhanLucDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<NhanLucDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhanLucDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhanLucDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: NhanLucDto | undefined): Observable<NhanLucDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhanluc/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhanLucDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhanLucDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<NhanLucDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhanLucDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhanLucDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhanluc/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class NhomduocServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: NhomDuocPagedListInputDto | undefined): Observable<PagedResultDtoOfNhomDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomduoc/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfNhomDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfNhomDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfNhomDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfNhomDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfNhomDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<NhomDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomduoc/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhomDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhomDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<NhomDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhomDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhomDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: NhomDuocDto | undefined): Observable<NhomDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomduoc/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhomDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhomDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<NhomDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhomDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhomDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: NhomDuocDto | undefined): Observable<NhomDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomduoc/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhomDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhomDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<NhomDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhomDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhomDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomduoc/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class NhomdvktbhytServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: NhomDvktBhytPagedListInputDto | undefined): Observable<PagedResultDtoOfNhomDvktBhytDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfNhomDvktBhytDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfNhomDvktBhytDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfNhomDvktBhytDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfNhomDvktBhytDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfNhomDvktBhytDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<NhomDvktBhytDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhomDvktBhytDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhomDvktBhytDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<NhomDvktBhytDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhomDvktBhytDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhomDvktBhytDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: NhomDvktBhytDto | undefined): Observable<NhomDvktBhytDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhomDvktBhytDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhomDvktBhytDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<NhomDvktBhytDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhomDvktBhytDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhomDvktBhytDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: NhomDvktBhytDto | undefined): Observable<NhomDvktBhytDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<NhomDvktBhytDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<NhomDvktBhytDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<NhomDvktBhytDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = NhomDvktBhytDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<NhomDvktBhytDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class PermissionmanagementServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getbyrole(body: GetPermissionInputDto | undefined): Observable<GetPermissionListResultDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/permissionmanagement/getbyrole';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyrole(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyrole(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<GetPermissionListResultDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<GetPermissionListResultDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyrole(response: HttpResponseBase): Observable<GetPermissionListResultDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = GetPermissionListResultDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<GetPermissionListResultDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class PhacdodieutriServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PhacDoDieuTriPagedRequestDto | undefined): Observable<PagedResultDtoOfPhacDoDieuTriDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfPhacDoDieuTriDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfPhacDoDieuTriDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfPhacDoDieuTriDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfPhacDoDieuTriDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfPhacDoDieuTriDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<PhacDoDieuTriDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhacDoDieuTriDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhacDoDieuTriDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<PhacDoDieuTriDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhacDoDieuTriDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhacDoDieuTriDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: PhacDoDieuTriDto | undefined): Observable<PhacDoDieuTriDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhacDoDieuTriDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhacDoDieuTriDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<PhacDoDieuTriDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhacDoDieuTriDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhacDoDieuTriDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: PhacDoDieuTriDto | undefined): Observable<PhacDoDieuTriDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhacDoDieuTriDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhacDoDieuTriDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<PhacDoDieuTriDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhacDoDieuTriDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhacDoDieuTriDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class PhannhomduocServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedFullRequestDto | undefined): Observable<PagedResultDtoOfPhanNhomDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfPhanNhomDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfPhanNhomDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfPhanNhomDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfPhanNhomDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfPhanNhomDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<PhanNhomDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhanNhomDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhanNhomDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<PhanNhomDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhanNhomDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhanNhomDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: PhanNhomDuocDto | undefined): Observable<PhanNhomDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhanNhomDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhanNhomDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<PhanNhomDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhanNhomDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhanNhomDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: PhanNhomDuocDto | undefined): Observable<PhanNhomDuocDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhanNhomDuocDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhanNhomDuocDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<PhanNhomDuocDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhanNhomDuocDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhanNhomDuocDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class PhongbanServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  treesource(): Observable<PhongBanTreeDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phongban/treesource';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processTreesource(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processTreesource(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhongBanTreeDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhongBanTreeDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processTreesource(response: HttpResponseBase): Observable<PhongBanTreeDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(PhongBanTreeDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhongBanTreeDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedRequestPhongBanDto | undefined): Observable<PagedResultDtoOfPhongBanDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phongban/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfPhongBanDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfPhongBanDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfPhongBanDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfPhongBanDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfPhongBanDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<PhongBanDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phongban/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhongBanDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhongBanDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<PhongBanDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhongBanDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhongBanDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: PhongBanDto | undefined): Observable<PhongBanDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phongban/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhongBanDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhongBanDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<PhongBanDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhongBanDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhongBanDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: PhongBanDto | undefined): Observable<PhongBanDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phongban/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PhongBanDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PhongBanDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<PhongBanDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PhongBanDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PhongBanDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/phongban/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class SearchservercombodataServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  benhicdselect(body: FetchBenhIcdSearchRequest | undefined): Observable<PagedResultDtoOfComboBoxDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/searchservercombodata/benhicdselect';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processBenhicdselect(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processBenhicdselect(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfComboBoxDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfComboBoxDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processBenhicdselect(response: HttpResponseBase): Observable<PagedResultDtoOfComboBoxDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfComboBoxDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfComboBoxDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  benhicdtable(body: FetchBenhIcdSearchRequest | undefined): Observable<PagedResultDtoOfBenhIcdSearchDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/searchservercombodata/benhicdtable';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processBenhicdtable(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processBenhicdtable(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfBenhIcdSearchDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfBenhIcdSearchDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processBenhicdtable(response: HttpResponseBase): Observable<PagedResultDtoOfBenhIcdSearchDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfBenhIcdSearchDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfBenhIcdSearchDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class SelectoptionServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = 'http://ytcs-api-v2.orenda.vn';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getoptions(body: SelectOptionInputDto | undefined): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/selectoption/getoptions';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain',\r\n        'Authorization': `Bearer ` + localStorage.getItem('access_token')\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetoptions(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetoptions(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetoptions(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class SelectsearchserverServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = 'http://ytcs-api-v2.orenda.vn';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getoptions(body: SelectSearchServerDto | undefined): Observable<PagedResultDtoOfComboBoxDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/selectsearchserver/getoptions';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain',\r\n        'Authorization': `Bearer ` + localStorage.getItem('access_token')\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetoptions(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetoptions(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfComboBoxDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfComboBoxDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetoptions(response: HttpResponseBase): Observable<PagedResultDtoOfComboBoxDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfComboBoxDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfComboBoxDto>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class SokhamServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedRequestSoKhamDto | undefined): Observable<PagedResultDtoOfSoKhamDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sokham/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfSoKhamDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfSoKhamDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfSoKhamDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfSoKhamDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfSoKhamDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<SoKhamDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sokham/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SoKhamDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SoKhamDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<SoKhamDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SoKhamDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SoKhamDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: SoKhamDto | undefined): Observable<SoKhamDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sokham/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SoKhamDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SoKhamDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<SoKhamDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SoKhamDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SoKhamDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: SoKhamDto | undefined): Observable<SoKhamDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sokham/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SoKhamDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SoKhamDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<SoKhamDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SoKhamDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SoKhamDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sokham/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class StaticroleServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: StaticRolePagedInputDto | undefined): Observable<PagedResultDtoOfStaticRolePagedOutputDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/staticrole/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfStaticRolePagedOutputDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfStaticRolePagedOutputDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfStaticRolePagedOutputDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfStaticRolePagedOutputDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfStaticRolePagedOutputDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param id (optional)\r\n   * @return Success\r\n   */\r\n  getbyid(id: number | undefined): Observable<SysRoleDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/staticrole/getbyid?';\r\n    if (id === null)\r\n      throw new Error('The parameter \\'id\\' cannot be null.');\r\n    else if (id !== undefined)\r\n      url_ += 'id=' + encodeURIComponent('' + id) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysRoleDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysRoleDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<SysRoleDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SysRoleDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysRoleDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  upsert(body: SysRoleDto | undefined): Observable<CommonResultDtoOfSysRoleDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/staticrole/upsert';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpsert(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpsert(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfSysRoleDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfSysRoleDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpsert(response: HttpResponseBase): Observable<CommonResultDtoOfSysRoleDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfSysRoleDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfSysRoleDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  setpermissionableforadminrole(body: SetListPermissionAbleForAdminRoleRequest | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/staticrole/setpermissionableforadminrole';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSetpermissionableforadminrole(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSetpermissionableforadminrole(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSetpermissionableforadminrole(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param id (optional)\r\n   * @return Success\r\n   */\r\n  getpermissionableforadminrole(id: number | undefined): Observable<SysPermissionAdminDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/staticrole/getpermissionableforadminrole?';\r\n    if (id === null)\r\n      throw new Error('The parameter \\'id\\' cannot be null.');\r\n    else if (id !== undefined)\r\n      url_ += 'id=' + encodeURIComponent('' + id) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetpermissionableforadminrole(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetpermissionableforadminrole(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysPermissionAdminDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysPermissionAdminDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetpermissionableforadminrole(response: HttpResponseBase): Observable<SysPermissionAdminDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(SysPermissionAdminDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysPermissionAdminDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param loaiBenhVien (optional)\r\n   * @return Success\r\n   */\r\n  permissionloaibenhvien(loaiBenhVien: number | undefined): Observable<SysPermissionLoaiBenhVienEntity[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/staticrole/permissionloaibenhvien?';\r\n    if (loaiBenhVien === null)\r\n      throw new Error('The parameter \\'loaiBenhVien\\' cannot be null.');\r\n    else if (loaiBenhVien !== undefined)\r\n      url_ += 'loaiBenhVien=' + encodeURIComponent('' + loaiBenhVien) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processPermissionloaibenhvien(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processPermissionloaibenhvien(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysPermissionLoaiBenhVienEntity[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysPermissionLoaiBenhVienEntity[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processPermissionloaibenhvien(response: HttpResponseBase): Observable<SysPermissionLoaiBenhVienEntity[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(SysPermissionLoaiBenhVienEntity.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysPermissionLoaiBenhVienEntity[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  setpermissionloaibenhvien(body: SetPermissionLoaiBenhVienRequest | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/staticrole/setpermissionloaibenhvien';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSetpermissionloaibenhvien(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSetpermissionloaibenhvien(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSetpermissionloaibenhvien(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class SysroleServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  setpermissionforsysrole(body: SetPermissionForSysRoleRequest | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sysrole/setpermissionforsysrole';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSetpermissionforsysrole(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSetpermissionforsysrole(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSetpermissionforsysrole(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param sysRoleId (optional)\r\n   * @return Success\r\n   */\r\n  getpermissiongranted(sysRoleId: number | undefined): Observable<SysRolePermissionDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sysrole/getpermissiongranted?';\r\n    if (sysRoleId === null)\r\n      throw new Error('The parameter \\'sysRoleId\\' cannot be null.');\r\n    else if (sysRoleId !== undefined)\r\n      url_ += 'sysRoleId=' + encodeURIComponent('' + sysRoleId) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetpermissiongranted(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetpermissiongranted(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysRolePermissionDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysRolePermissionDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetpermissiongranted(response: HttpResponseBase): Observable<SysRolePermissionDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SysRolePermissionDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysRolePermissionDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlistrolecoso(body: RoleCoSoPagedInputDto | undefined): Observable<PagedResultDtoOfSysRoleDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sysrole/getlistrolecoso';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlistrolecoso(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlistrolecoso(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfSysRoleDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfSysRoleDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlistrolecoso(response: HttpResponseBase): Observable<PagedResultDtoOfSysRoleDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfSysRoleDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfSysRoleDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  upsertrolecoso(body: SysRoleDto | undefined): Observable<CommonResultDtoOfSysRoleDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sysrole/upsertrolecoso';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpsertrolecoso(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpsertrolecoso(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfSysRoleDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfSysRoleDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpsertrolecoso(response: HttpResponseBase): Observable<CommonResultDtoOfSysRoleDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfSysRoleDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfSysRoleDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param id (optional)\r\n   * @return Success\r\n   */\r\n  getbyid(id: number | undefined): Observable<SysRoleDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sysrole/getbyid?';\r\n    if (id === null)\r\n      throw new Error('The parameter \\'id\\' cannot be null.');\r\n    else if (id !== undefined)\r\n      url_ += 'id=' + encodeURIComponent('' + id) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysRoleDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysRoleDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<SysRoleDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SysRoleDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysRoleDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  xoarolecoso(sysRoleId: number): Observable<CommonResultDtoOfInt64> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/sysrole/xoarolecoso/{sysRoleId}';\r\n    if (sysRoleId === undefined || sysRoleId === null)\r\n      throw new Error('The parameter \\'sysRoleId\\' must be defined.');\r\n    url_ = url_.replace('{sysRoleId}', encodeURIComponent('' + sysRoleId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processXoarolecoso(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processXoarolecoso(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfInt64>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfInt64>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processXoarolecoso(response: HttpResponseBase): Observable<CommonResultDtoOfInt64> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfInt64.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfInt64>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TaikhoanadminServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: GetListUserAdminCoSoRequest | undefined): Observable<PagedResultDtoOfSysUserDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfSysUserDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfSysUserDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfSysUserDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfSysUserDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfSysUserDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getsysroleadmincoso(): Observable<SysRoleDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/getsysroleadmincoso';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetsysroleadmincoso(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetsysroleadmincoso(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysRoleDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysRoleDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetsysroleadmincoso(response: HttpResponseBase): Observable<SysRoleDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(SysRoleDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysRoleDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  taotaikhoanadmincoso(body: TaoTaiKhoanAdminCoSoInputDto | undefined): Observable<CommonResultDtoOfSysUserDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/taotaikhoanadmincoso';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processTaotaikhoanadmincoso(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processTaotaikhoanadmincoso(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfSysUserDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfSysUserDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processTaotaikhoanadmincoso(response: HttpResponseBase): Observable<CommonResultDtoOfSysUserDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfSysUserDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfSysUserDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  capnhapthongtin(body: UpdateUserDto | undefined): Observable<CommonResultDtoOfSysUserDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/capnhapthongtin';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCapnhapthongtin(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCapnhapthongtin(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfSysUserDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfSysUserDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCapnhapthongtin(response: HttpResponseBase): Observable<CommonResultDtoOfSysUserDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfSysUserDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfSysUserDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  doimatkhau(body: DoiMatKhauRequest | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/doimatkhau';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processDoimatkhau(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processDoimatkhau(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processDoimatkhau(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  xoataikhoan(userId: string): Observable<CommonResultDtoOfGuid> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/xoataikhoan/{userId}';\r\n    if (userId === undefined || userId === null)\r\n      throw new Error('The parameter \\'userId\\' must be defined.');\r\n    url_ = url_.replace('{userId}', encodeURIComponent('' + userId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processXoataikhoan(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processXoataikhoan(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfGuid>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfGuid>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processXoataikhoan(response: HttpResponseBase): Observable<CommonResultDtoOfGuid> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfGuid.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfGuid>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  lock(userId: string): Observable<string> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/lock/{userId}';\r\n    if (userId === undefined || userId === null)\r\n      throw new Error('The parameter \\'userId\\' must be defined.');\r\n    url_ = url_.replace('{userId}', encodeURIComponent('' + userId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processLock(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processLock(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<string>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<string>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processLock(response: HttpResponseBase): Observable<string> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<string>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  unlock(userId: string): Observable<string> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/unlock/{userId}';\r\n    if (userId === undefined || userId === null)\r\n      throw new Error('The parameter \\'userId\\' must be defined.');\r\n    url_ = url_.replace('{userId}', encodeURIComponent('' + userId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUnlock(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUnlock(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<string>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<string>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUnlock(response: HttpResponseBase): Observable<string> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<string>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TaikhoancosoServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: GetListUserCoSoRequest | undefined): Observable<PagedResultDtoOfSysUserDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfSysUserDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfSysUserDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfSysUserDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfSysUserDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfSysUserDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  taotaikhoancoso(body: CreateSysUserDto | undefined): Observable<CommonResultDtoOfSysUserDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/taotaikhoancoso';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processTaotaikhoancoso(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processTaotaikhoancoso(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfSysUserDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfSysUserDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processTaotaikhoancoso(response: HttpResponseBase): Observable<CommonResultDtoOfSysUserDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfSysUserDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfSysUserDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  capnhapthongtin(body: UpdateUserDto | undefined): Observable<CommonResultDtoOfSysUserDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/capnhapthongtin';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCapnhapthongtin(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCapnhapthongtin(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfSysUserDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfSysUserDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCapnhapthongtin(response: HttpResponseBase): Observable<CommonResultDtoOfSysUserDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfSysUserDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfSysUserDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param id (optional)\r\n   * @return Success\r\n   */\r\n  getbyid(id: number | undefined): Observable<SysUserDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getbyid?';\r\n    if (id === null)\r\n      throw new Error('The parameter \\'id\\' cannot be null.');\r\n    else if (id !== undefined)\r\n      url_ += 'id=' + encodeURIComponent('' + id) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysUserDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysUserDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<SysUserDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SysUserDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysUserDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getdanhsachrole(): Observable<RoleAbleDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getdanhsachrole';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetdanhsachrole(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetdanhsachrole(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<RoleAbleDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<RoleAbleDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetdanhsachrole(response: HttpResponseBase): Observable<RoleAbleDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(RoleAbleDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<RoleAbleDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  setroleforuser(body: SetRoleForUserRequest | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/setroleforuser';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSetroleforuser(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSetroleforuser(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSetroleforuser(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param userId (optional)\r\n   * @return Success\r\n   */\r\n  getuserrole(userId: number | undefined): Observable<SysUserRoleEntity[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getuserrole?';\r\n    if (userId === null)\r\n      throw new Error('The parameter \\'userId\\' cannot be null.');\r\n    else if (userId !== undefined)\r\n      url_ += 'userId=' + encodeURIComponent('' + userId) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetuserrole(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetuserrole(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysUserRoleEntity[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysUserRoleEntity[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetuserrole(response: HttpResponseBase): Observable<SysUserRoleEntity[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(SysUserRoleEntity.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysUserRoleEntity[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  doimatkhau(body: DoiMatKhauRequest | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/doimatkhau';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processDoimatkhau(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processDoimatkhau(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processDoimatkhau(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getlistcauhinhsysappprivate(): Observable<DanhSachCauHinhSysAppPrivateRoleDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getlistcauhinhsysappprivate';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlistcauhinhsysappprivate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlistcauhinhsysappprivate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DanhSachCauHinhSysAppPrivateRoleDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DanhSachCauHinhSysAppPrivateRoleDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlistcauhinhsysappprivate(response: HttpResponseBase): Observable<DanhSachCauHinhSysAppPrivateRoleDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DanhSachCauHinhSysAppPrivateRoleDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DanhSachCauHinhSysAppPrivateRoleDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param id (optional)\r\n   * @return Success\r\n   */\r\n  getlistdacauhinhsysapp(id: number | undefined): Observable<SysAppPrivateRoleDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getlistdacauhinhsysapp?';\r\n    if (id === null)\r\n      throw new Error('The parameter \\'id\\' cannot be null.');\r\n    else if (id !== undefined)\r\n      url_ += 'id=' + encodeURIComponent('' + id) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlistdacauhinhsysapp(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlistdacauhinhsysapp(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysAppPrivateRoleDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysAppPrivateRoleDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlistdacauhinhsysapp(response: HttpResponseBase): Observable<SysAppPrivateRoleDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(SysAppPrivateRoleDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysAppPrivateRoleDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  luusysappprivateroleuser(body: LuuSysAppPrivateRoleUserRequset | undefined): Observable<number> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/luusysappprivateroleuser';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processLuusysappprivateroleuser(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processLuusysappprivateroleuser(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<number>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<number>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processLuusysappprivateroleuser(response: HttpResponseBase): Observable<number> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<number>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  xoataikhoan(userId: string): Observable<CommonResultDtoOfGuid> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/xoataikhoan/{userId}';\r\n    if (userId === undefined || userId === null)\r\n      throw new Error('The parameter \\'userId\\' must be defined.');\r\n    url_ = url_.replace('{userId}', encodeURIComponent('' + userId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processXoataikhoan(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processXoataikhoan(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<CommonResultDtoOfGuid>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<CommonResultDtoOfGuid>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processXoataikhoan(response: HttpResponseBase): Observable<CommonResultDtoOfGuid> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = CommonResultDtoOfGuid.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<CommonResultDtoOfGuid>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  lock(userId: string): Observable<string> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/lock/{userId}';\r\n    if (userId === undefined || userId === null)\r\n      throw new Error('The parameter \\'userId\\' must be defined.');\r\n    url_ = url_.replace('{userId}', encodeURIComponent('' + userId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processLock(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processLock(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<string>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<string>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processLock(response: HttpResponseBase): Observable<string> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<string>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  unlock(userId: string): Observable<string> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/unlock/{userId}';\r\n    if (userId === undefined || userId === null)\r\n      throw new Error('The parameter \\'userId\\' must be defined.');\r\n    url_ = url_.replace('{userId}', encodeURIComponent('' + userId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUnlock(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUnlock(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<string>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<string>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUnlock(response: HttpResponseBase): Observable<string> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<string>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ThamsobenhvienServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  updatevalue(body: ParamUpdateValueThamSoBenhVien | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/updatevalue';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdatevalue(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdatevalue(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdatevalue(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  updatechanged(body: ParamsUpdateChangedThamSoBenhVien | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/updatechanged';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdatechanged(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdatechanged(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdatechanged(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  dongbothamsohethong(): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/dongbothamsohethong';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processDongbothamsohethong(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processDongbothamsohethong(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processDongbothamsohethong(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param id (optional)\r\n   * @return Success\r\n   */\r\n  cauhinhthamsohethong(id: number | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/cauhinhthamsohethong?';\r\n    if (id === null)\r\n      throw new Error('The parameter \\'id\\' cannot be null.');\r\n    else if (id !== undefined)\r\n      url_ += 'Id=' + encodeURIComponent('' + id) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCauhinhthamsohethong(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCauhinhthamsohethong(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCauhinhthamsohethong(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: ThamSoBenhVienPagedRequestDto | undefined): Observable<PagedResultDtoOfSysAppSettingsDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfSysAppSettingsDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfSysAppSettingsDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfSysAppSettingsDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfSysAppSettingsDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfSysAppSettingsDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<SysAppSettingsDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysAppSettingsDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysAppSettingsDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<SysAppSettingsDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SysAppSettingsDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysAppSettingsDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: SysAppSettingsDto | undefined): Observable<SysAppSettingsDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysAppSettingsDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysAppSettingsDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<SysAppSettingsDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SysAppSettingsDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysAppSettingsDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: SysAppSettingsDto | undefined): Observable<SysAppSettingsDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<SysAppSettingsDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<SysAppSettingsDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<SysAppSettingsDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = SysAppSettingsDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<SysAppSettingsDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ThamsohethongServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: ThamSoHeThongPagedRequest | undefined): Observable<PagedResultDtoOfThamSoHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsohethong/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfThamSoHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfThamSoHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfThamSoHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfThamSoHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfThamSoHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<ThamSoHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsohethong/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ThamSoHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ThamSoHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<ThamSoHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ThamSoHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ThamSoHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: ThamSoHeThongDto | undefined): Observable<ThamSoHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsohethong/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ThamSoHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ThamSoHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<ThamSoHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ThamSoHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ThamSoHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: ThamSoHeThongDto | undefined): Observable<ThamSoHeThongDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsohethong/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ThamSoHeThongDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ThamSoHeThongDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<ThamSoHeThongDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ThamSoHeThongDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ThamSoHeThongDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thamsohethong/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ThietbiServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedRequestThietBiDto | undefined): Observable<PagedResultDtoOfThietBiDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thietbi/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfThietBiDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfThietBiDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfThietBiDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfThietBiDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfThietBiDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<ThietBiDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thietbi/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ThietBiDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ThietBiDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<ThietBiDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ThietBiDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ThietBiDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: ThietBiDto | undefined): Observable<ThietBiDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thietbi/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ThietBiDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ThietBiDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<ThietBiDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ThietBiDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ThietBiDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: ThietBiDto | undefined): Observable<ThietBiDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thietbi/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ThietBiDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ThietBiDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<ThietBiDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ThietBiDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ThietBiDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/thietbi/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TienteServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: TienTeDto | undefined): Observable<TienTeDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tiente/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<TienTeDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<TienTeDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<TienTeDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = TienTeDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<TienTeDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: TienTeDto | undefined): Observable<TienTeDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tiente/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<TienTeDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<TienTeDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<TienTeDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = TienTeDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<TienTeDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: TienTePagedRequestDto | undefined): Observable<PagedResultDtoOfTienTeDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tiente/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfTienTeDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfTienTeDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfTienTeDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfTienTeDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfTienTeDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<TienTeDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tiente/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<TienTeDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<TienTeDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<TienTeDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = TienTeDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<TienTeDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tiente/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TientetygiaServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: TienTeTyGiaPagedRequestDto | undefined): Observable<PagedResultDtoOfTienTeTyGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tientetygia/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfTienTeTyGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfTienTeTyGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfTienTeTyGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfTienTeTyGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfTienTeTyGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<TienTeTyGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tientetygia/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<TienTeTyGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<TienTeTyGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<TienTeTyGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = TienTeTyGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<TienTeTyGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: TienTeTyGiaDto | undefined): Observable<TienTeTyGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tientetygia/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<TienTeTyGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<TienTeTyGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<TienTeTyGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = TienTeTyGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<TienTeTyGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: TienTeTyGiaDto | undefined): Observable<TienTeTyGiaDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tientetygia/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<TienTeTyGiaDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<TienTeTyGiaDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<TienTeTyGiaDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = TienTeTyGiaDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<TienTeTyGiaDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/tientetygia/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ToathuocmauServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedRequestToaThuocMauDto | undefined): Observable<PagedResultDtoOfDSToaThuocMauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmau/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfDSToaThuocMauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfDSToaThuocMauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfDSToaThuocMauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfDSToaThuocMauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfDSToaThuocMauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<DSToaThuocMauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmau/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DSToaThuocMauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DSToaThuocMauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<DSToaThuocMauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DSToaThuocMauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DSToaThuocMauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: ToaThuocMauDto | undefined): Observable<DSToaThuocMauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmau/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DSToaThuocMauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DSToaThuocMauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<DSToaThuocMauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DSToaThuocMauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DSToaThuocMauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: ToaThuocMauDto | undefined): Observable<DSToaThuocMauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmau/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<DSToaThuocMauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<DSToaThuocMauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<DSToaThuocMauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = DSToaThuocMauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<DSToaThuocMauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmau/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ToathuocmauchitietServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebycode(ma: string | null): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/removebycode/{ma}';\r\n    if (ma === undefined || ma === null)\r\n      throw new Error('The parameter \\'ma\\' must be defined.');\r\n    url_ = url_.replace('{ma}', encodeURIComponent('' + ma));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebycode(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebycode(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebycode(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  checkcode(ma: string | null): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/checkcode/{ma}';\r\n    if (ma === undefined || ma === null)\r\n      throw new Error('The parameter \\'ma\\' must be defined.');\r\n    url_ = url_.replace('{ma}', encodeURIComponent('' + ma));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCheckcode(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCheckcode(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCheckcode(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  savetoathuocmauchitiet(body: ToaThuocMauDto[] | null | undefined): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/savetoathuocmauchitiet';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSavetoathuocmauchitiet(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSavetoathuocmauchitiet(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSavetoathuocmauchitiet(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedRequestToaThuocMauChiTietDto | undefined): Observable<PagedResultDtoOfToaThuocMauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfToaThuocMauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfToaThuocMauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfToaThuocMauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfToaThuocMauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfToaThuocMauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<ToaThuocMauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ToaThuocMauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ToaThuocMauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<ToaThuocMauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ToaThuocMauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ToaThuocMauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: ToaThuocMauDto | undefined): Observable<ToaThuocMauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ToaThuocMauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ToaThuocMauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<ToaThuocMauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ToaThuocMauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ToaThuocMauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: ToaThuocMauDto | undefined): Observable<ToaThuocMauDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ToaThuocMauDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ToaThuocMauDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<ToaThuocMauDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = ToaThuocMauDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ToaThuocMauDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class UserextensionServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  usersession(): Observable<UserSessionDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/userextension/usersession';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUsersession(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUsersession(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<UserSessionDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<UserSessionDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUsersession(response: HttpResponseBase): Observable<UserSessionDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = UserSessionDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<UserSessionDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  clearusersessioncache(): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/userextension/clearusersessioncache';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processClearusersessioncache(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processClearusersessioncache(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processClearusersessioncache(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  switchbenhvienid(benhVienId: number | null): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/userextension/switchbenhvienid/{benhVienId}';\r\n    if (benhVienId === undefined || benhVienId === null)\r\n      throw new Error('The parameter \\'benhVienId\\' must be defined.');\r\n    url_ = url_.replace('{benhVienId}', encodeURIComponent('' + benhVienId));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processSwitchbenhvienid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processSwitchbenhvienid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processSwitchbenhvienid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class VacxinServiceProxy {\r\n  private http: HttpClient;\r\n  private baseUrl: string;\r\n  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n  constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n    this.http = http;\r\n    this.baseUrl = baseUrl ? baseUrl : '';\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  getlist(body: PagedVacXinInputDto | undefined): Observable<PagedResultDtoOfVacXinDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/getlist';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetlist(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetlist(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<PagedResultDtoOfVacXinDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<PagedResultDtoOfVacXinDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetlist(response: HttpResponseBase): Observable<PagedResultDtoOfVacXinDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = PagedResultDtoOfVacXinDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<PagedResultDtoOfVacXinDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  getbyid(id: number): Observable<VacXinDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/getbyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processGetbyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processGetbyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<VacXinDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<VacXinDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processGetbyid(response: HttpResponseBase): Observable<VacXinDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = VacXinDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<VacXinDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  create(body: VacXinDto | undefined): Observable<VacXinDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/create';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processCreate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processCreate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<VacXinDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<VacXinDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processCreate(response: HttpResponseBase): Observable<VacXinDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = VacXinDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<VacXinDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  update(id: number, body: VacXinDto | undefined): Observable<VacXinDto> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/update/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json',\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processUpdate(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processUpdate(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<VacXinDto>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<VacXinDto>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processUpdate(response: HttpResponseBase): Observable<VacXinDto> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = VacXinDto.fromJS(resultData200);\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<VacXinDto>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param body (optional)\r\n   * @return Success\r\n   */\r\n  editvacxinkhangnguyen(body: VacXinDto | undefined): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/editvacxinkhangnguyen';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    const content_ = JSON.stringify(body);\r\n\r\n    let options_: any = {\r\n      body: content_,\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json-patch+json'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processEditvacxinkhangnguyen(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processEditvacxinkhangnguyen(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processEditvacxinkhangnguyen(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  checktrungid(id: number): Observable<boolean> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/{id}/checktrungid';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processChecktrungid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processChecktrungid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<boolean>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<boolean>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processChecktrungid(response: HttpResponseBase): Observable<boolean> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<boolean>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  removebyid(id: number): Observable<void> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/removebyid/{id}';\r\n    if (id === undefined || id === null)\r\n      throw new Error('The parameter \\'id\\' must be defined.');\r\n    url_ = url_.replace('{id}', encodeURIComponent('' + id));\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({})\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processRemovebyid(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processRemovebyid(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<void>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<void>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processRemovebyid(response: HttpResponseBase): Observable<void> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return _observableOf<void>(<any>null);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<void>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  comboboxdata(): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/comboboxdata';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('get', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processComboboxdata(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processComboboxdata(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processComboboxdata(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @return Success\r\n   */\r\n  vacxinextend(): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/vacxinextend';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processVacxinextend(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processVacxinextend(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processVacxinextend(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n\r\n  /**\r\n   * @param tcmr (optional)\r\n   * @return Success\r\n   */\r\n  vacxinlapkehoach(tcmr: boolean | undefined): Observable<ComboBoxDto[]> {\r\n    let url_ = this.baseUrl + '/api/danh-muc/vacxin/vacxinlapkehoach?';\r\n    if (tcmr === null)\r\n      throw new Error('The parameter \\'tcmr\\' cannot be null.');\r\n    else if (tcmr !== undefined)\r\n      url_ += 'tcmr=' + encodeURIComponent('' + tcmr) + '&';\r\n    url_ = url_.replace(/[?&]$/, '');\r\n\r\n    let options_: any = {\r\n      observe: 'response',\r\n      responseType: 'blob',\r\n      headers: new HttpHeaders({\r\n        'Accept': 'text/plain'\r\n      })\r\n    };\r\n\r\n    return this.http.request('post', url_, options_).pipe(_observableMergeMap((response_: any) => {\r\n      return this.processVacxinlapkehoach(response_);\r\n    })).pipe(_observableCatch((response_: any) => {\r\n      if (response_ instanceof HttpResponseBase) {\r\n        try {\r\n          return this.processVacxinlapkehoach(<any>response_);\r\n        } catch (e) {\r\n          return <Observable<ComboBoxDto[]>><any>_observableThrow(e);\r\n        }\r\n      } else\r\n        return <Observable<ComboBoxDto[]>><any>_observableThrow(response_);\r\n    }));\r\n  }\r\n\r\n  protected processVacxinlapkehoach(response: HttpResponseBase): Observable<ComboBoxDto[]> {\r\n    const status = response.status;\r\n    const responseBlob =\r\n      response instanceof HttpResponse ? response.body :\r\n        (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n    let _headers: any = {};\r\n    if (response.headers) {\r\n      for (let key of response.headers.keys()) {\r\n        _headers[key] = response.headers.get(key);\r\n      }\r\n    }\r\n    ;\r\n    if (status === 200) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        let result200: any = null;\r\n        let resultData200 = _responseText === '' ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n        if (Array.isArray(resultData200)) {\r\n          result200 = [] as any;\r\n          for (let item of resultData200)\r\n            result200!.push(ComboBoxDto.fromJS(item));\r\n        }\r\n        return _observableOf(result200);\r\n      }));\r\n    } else if (status !== 200 && status !== 204) {\r\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n        return throwException('An unexpected server error occurred.', status, _responseText, _headers);\r\n      }));\r\n    }\r\n    return _observableOf<ComboBoxDto[]>(<any>null);\r\n  }\r\n}\r\n\r\nexport class ControllerInterfaceApiDescriptionModel implements IControllerInterfaceApiDescriptionModel {\r\n  type!: string | undefined;\r\n\r\n  constructor(data?: IControllerInterfaceApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.type = data['type'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ControllerInterfaceApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ControllerInterfaceApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['type'] = this.type;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IControllerInterfaceApiDescriptionModel {\r\n  type: string | undefined;\r\n}\r\n\r\nexport class MethodParameterApiDescriptionModel implements IMethodParameterApiDescriptionModel {\r\n  name!: string | undefined;\r\n  typeAsString!: string | undefined;\r\n  type!: string | undefined;\r\n  typeSimple!: string | undefined;\r\n  isOptional!: boolean;\r\n  defaultValue!: any | undefined;\r\n\r\n  constructor(data?: IMethodParameterApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.name = data['name'];\r\n      this.typeAsString = data['typeAsString'];\r\n      this.type = data['type'];\r\n      this.typeSimple = data['typeSimple'];\r\n      this.isOptional = data['isOptional'];\r\n      this.defaultValue = data['defaultValue'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): MethodParameterApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new MethodParameterApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['typeAsString'] = this.typeAsString;\r\n    data['type'] = this.type;\r\n    data['typeSimple'] = this.typeSimple;\r\n    data['isOptional'] = this.isOptional;\r\n    data['defaultValue'] = this.defaultValue;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IMethodParameterApiDescriptionModel {\r\n  name: string | undefined;\r\n  typeAsString: string | undefined;\r\n  type: string | undefined;\r\n  typeSimple: string | undefined;\r\n  isOptional: boolean;\r\n  defaultValue: any | undefined;\r\n}\r\n\r\nexport class ParameterApiDescriptionModel implements IParameterApiDescriptionModel {\r\n  nameOnMethod!: string | undefined;\r\n  name!: string | undefined;\r\n  type!: string | undefined;\r\n  typeSimple!: string | undefined;\r\n  isOptional!: boolean;\r\n  defaultValue!: any | undefined;\r\n  constraintTypes!: string[] | undefined;\r\n  bindingSourceId!: string | undefined;\r\n  descriptorName!: string | undefined;\r\n\r\n  constructor(data?: IParameterApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nameOnMethod = data['nameOnMethod'];\r\n      this.name = data['name'];\r\n      this.type = data['type'];\r\n      this.typeSimple = data['typeSimple'];\r\n      this.isOptional = data['isOptional'];\r\n      this.defaultValue = data['defaultValue'];\r\n      if (Array.isArray(data['constraintTypes'])) {\r\n        this.constraintTypes = [] as any;\r\n        for (let item of data['constraintTypes'])\r\n          this.constraintTypes!.push(item);\r\n      }\r\n      this.bindingSourceId = data['bindingSourceId'];\r\n      this.descriptorName = data['descriptorName'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ParameterApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ParameterApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nameOnMethod'] = this.nameOnMethod;\r\n    data['name'] = this.name;\r\n    data['type'] = this.type;\r\n    data['typeSimple'] = this.typeSimple;\r\n    data['isOptional'] = this.isOptional;\r\n    data['defaultValue'] = this.defaultValue;\r\n    if (Array.isArray(this.constraintTypes)) {\r\n      data['constraintTypes'] = [];\r\n      for (let item of this.constraintTypes)\r\n        data['constraintTypes'].push(item);\r\n    }\r\n    data['bindingSourceId'] = this.bindingSourceId;\r\n    data['descriptorName'] = this.descriptorName;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IParameterApiDescriptionModel {\r\n  nameOnMethod: string | undefined;\r\n  name: string | undefined;\r\n  type: string | undefined;\r\n  typeSimple: string | undefined;\r\n  isOptional: boolean;\r\n  defaultValue: any | undefined;\r\n  constraintTypes: string[] | undefined;\r\n  bindingSourceId: string | undefined;\r\n  descriptorName: string | undefined;\r\n}\r\n\r\nexport class ReturnValueApiDescriptionModel implements IReturnValueApiDescriptionModel {\r\n  type!: string | undefined;\r\n  typeSimple!: string | undefined;\r\n\r\n  constructor(data?: IReturnValueApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.type = data['type'];\r\n      this.typeSimple = data['typeSimple'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ReturnValueApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ReturnValueApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['type'] = this.type;\r\n    data['typeSimple'] = this.typeSimple;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IReturnValueApiDescriptionModel {\r\n  type: string | undefined;\r\n  typeSimple: string | undefined;\r\n}\r\n\r\nexport class ActionApiDescriptionModel implements IActionApiDescriptionModel {\r\n  uniqueName!: string | undefined;\r\n  name!: string | undefined;\r\n  httpMethod!: string | undefined;\r\n  url!: string | undefined;\r\n  supportedVersions!: string[] | undefined;\r\n  parametersOnMethod!: MethodParameterApiDescriptionModel[] | undefined;\r\n  parameters!: ParameterApiDescriptionModel[] | undefined;\r\n  returnValue!: ReturnValueApiDescriptionModel;\r\n\r\n  constructor(data?: IActionApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.uniqueName = data['uniqueName'];\r\n      this.name = data['name'];\r\n      this.httpMethod = data['httpMethod'];\r\n      this.url = data['url'];\r\n      if (Array.isArray(data['supportedVersions'])) {\r\n        this.supportedVersions = [] as any;\r\n        for (let item of data['supportedVersions'])\r\n          this.supportedVersions!.push(item);\r\n      }\r\n      if (Array.isArray(data['parametersOnMethod'])) {\r\n        this.parametersOnMethod = [] as any;\r\n        for (let item of data['parametersOnMethod'])\r\n          this.parametersOnMethod!.push(MethodParameterApiDescriptionModel.fromJS(item));\r\n      }\r\n      if (Array.isArray(data['parameters'])) {\r\n        this.parameters = [] as any;\r\n        for (let item of data['parameters'])\r\n          this.parameters!.push(ParameterApiDescriptionModel.fromJS(item));\r\n      }\r\n      this.returnValue = data['returnValue'] ? ReturnValueApiDescriptionModel.fromJS(data['returnValue']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ActionApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ActionApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['uniqueName'] = this.uniqueName;\r\n    data['name'] = this.name;\r\n    data['httpMethod'] = this.httpMethod;\r\n    data['url'] = this.url;\r\n    if (Array.isArray(this.supportedVersions)) {\r\n      data['supportedVersions'] = [];\r\n      for (let item of this.supportedVersions)\r\n        data['supportedVersions'].push(item);\r\n    }\r\n    if (Array.isArray(this.parametersOnMethod)) {\r\n      data['parametersOnMethod'] = [];\r\n      for (let item of this.parametersOnMethod)\r\n        data['parametersOnMethod'].push(item.toJSON());\r\n    }\r\n    if (Array.isArray(this.parameters)) {\r\n      data['parameters'] = [];\r\n      for (let item of this.parameters)\r\n        data['parameters'].push(item.toJSON());\r\n    }\r\n    data['returnValue'] = this.returnValue ? this.returnValue.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IActionApiDescriptionModel {\r\n  uniqueName: string | undefined;\r\n  name: string | undefined;\r\n  httpMethod: string | undefined;\r\n  url: string | undefined;\r\n  supportedVersions: string[] | undefined;\r\n  parametersOnMethod: MethodParameterApiDescriptionModel[] | undefined;\r\n  parameters: ParameterApiDescriptionModel[] | undefined;\r\n  returnValue: ReturnValueApiDescriptionModel;\r\n}\r\n\r\nexport class ControllerApiDescriptionModel implements IControllerApiDescriptionModel {\r\n  controllerName!: string | undefined;\r\n  type!: string | undefined;\r\n  interfaces!: ControllerInterfaceApiDescriptionModel[] | undefined;\r\n  actions!: { [key: string]: ActionApiDescriptionModel; } | undefined;\r\n\r\n  constructor(data?: IControllerApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.controllerName = data['controllerName'];\r\n      this.type = data['type'];\r\n      if (Array.isArray(data['interfaces'])) {\r\n        this.interfaces = [] as any;\r\n        for (let item of data['interfaces'])\r\n          this.interfaces!.push(ControllerInterfaceApiDescriptionModel.fromJS(item));\r\n      }\r\n      if (data['actions']) {\r\n        this.actions = {} as any;\r\n        for (let key in data['actions']) {\r\n          if (data['actions'].hasOwnProperty(key))\r\n            this.actions![key] = data['actions'][key] ? ActionApiDescriptionModel.fromJS(data['actions'][key]) : new ActionApiDescriptionModel();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ControllerApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ControllerApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['controllerName'] = this.controllerName;\r\n    data['type'] = this.type;\r\n    if (Array.isArray(this.interfaces)) {\r\n      data['interfaces'] = [];\r\n      for (let item of this.interfaces)\r\n        data['interfaces'].push(item.toJSON());\r\n    }\r\n    if (this.actions) {\r\n      data['actions'] = {};\r\n      for (let key in this.actions) {\r\n        if (this.actions.hasOwnProperty(key))\r\n          data['actions'][key] = this.actions[key] ? this.actions[key].toJSON() : <any>undefined;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IControllerApiDescriptionModel {\r\n  controllerName: string | undefined;\r\n  type: string | undefined;\r\n  interfaces: ControllerInterfaceApiDescriptionModel[] | undefined;\r\n  actions: { [key: string]: ActionApiDescriptionModel; } | undefined;\r\n}\r\n\r\nexport class ModuleApiDescriptionModel implements IModuleApiDescriptionModel {\r\n  rootPath!: string | undefined;\r\n  remoteServiceName!: string | undefined;\r\n  controllers!: { [key: string]: ControllerApiDescriptionModel; } | undefined;\r\n\r\n  constructor(data?: IModuleApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.rootPath = data['rootPath'];\r\n      this.remoteServiceName = data['remoteServiceName'];\r\n      if (data['controllers']) {\r\n        this.controllers = {} as any;\r\n        for (let key in data['controllers']) {\r\n          if (data['controllers'].hasOwnProperty(key))\r\n            this.controllers![key] = data['controllers'][key] ? ControllerApiDescriptionModel.fromJS(data['controllers'][key]) : new ControllerApiDescriptionModel();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ModuleApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ModuleApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['rootPath'] = this.rootPath;\r\n    data['remoteServiceName'] = this.remoteServiceName;\r\n    if (this.controllers) {\r\n      data['controllers'] = {};\r\n      for (let key in this.controllers) {\r\n        if (this.controllers.hasOwnProperty(key))\r\n          data['controllers'][key] = this.controllers[key] ? this.controllers[key].toJSON() : <any>undefined;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IModuleApiDescriptionModel {\r\n  rootPath: string | undefined;\r\n  remoteServiceName: string | undefined;\r\n  controllers: { [key: string]: ControllerApiDescriptionModel; } | undefined;\r\n}\r\n\r\nexport class PropertyApiDescriptionModel implements IPropertyApiDescriptionModel {\r\n  name!: string | undefined;\r\n  type!: string | undefined;\r\n  typeSimple!: string | undefined;\r\n\r\n  constructor(data?: IPropertyApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.name = data['name'];\r\n      this.type = data['type'];\r\n      this.typeSimple = data['typeSimple'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PropertyApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PropertyApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['type'] = this.type;\r\n    data['typeSimple'] = this.typeSimple;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPropertyApiDescriptionModel {\r\n  name: string | undefined;\r\n  type: string | undefined;\r\n  typeSimple: string | undefined;\r\n}\r\n\r\nexport class TypeApiDescriptionModel implements ITypeApiDescriptionModel {\r\n  baseType!: string | undefined;\r\n  isEnum!: boolean;\r\n  enumNames!: string[] | undefined;\r\n  enumValues!: any[] | undefined;\r\n  genericArguments!: string[] | undefined;\r\n  properties!: PropertyApiDescriptionModel[] | undefined;\r\n\r\n  constructor(data?: ITypeApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.baseType = data['baseType'];\r\n      this.isEnum = data['isEnum'];\r\n      if (Array.isArray(data['enumNames'])) {\r\n        this.enumNames = [] as any;\r\n        for (let item of data['enumNames'])\r\n          this.enumNames!.push(item);\r\n      }\r\n      if (Array.isArray(data['enumValues'])) {\r\n        this.enumValues = [] as any;\r\n        for (let item of data['enumValues'])\r\n          this.enumValues!.push(item);\r\n      }\r\n      if (Array.isArray(data['genericArguments'])) {\r\n        this.genericArguments = [] as any;\r\n        for (let item of data['genericArguments'])\r\n          this.genericArguments!.push(item);\r\n      }\r\n      if (Array.isArray(data['properties'])) {\r\n        this.properties = [] as any;\r\n        for (let item of data['properties'])\r\n          this.properties!.push(PropertyApiDescriptionModel.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): TypeApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new TypeApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['baseType'] = this.baseType;\r\n    data['isEnum'] = this.isEnum;\r\n    if (Array.isArray(this.enumNames)) {\r\n      data['enumNames'] = [];\r\n      for (let item of this.enumNames)\r\n        data['enumNames'].push(item);\r\n    }\r\n    if (Array.isArray(this.enumValues)) {\r\n      data['enumValues'] = [];\r\n      for (let item of this.enumValues)\r\n        data['enumValues'].push(item);\r\n    }\r\n    if (Array.isArray(this.genericArguments)) {\r\n      data['genericArguments'] = [];\r\n      for (let item of this.genericArguments)\r\n        data['genericArguments'].push(item);\r\n    }\r\n    if (Array.isArray(this.properties)) {\r\n      data['properties'] = [];\r\n      for (let item of this.properties)\r\n        data['properties'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ITypeApiDescriptionModel {\r\n  baseType: string | undefined;\r\n  isEnum: boolean;\r\n  enumNames: string[] | undefined;\r\n  enumValues: any[] | undefined;\r\n  genericArguments: string[] | undefined;\r\n  properties: PropertyApiDescriptionModel[] | undefined;\r\n}\r\n\r\nexport class ApplicationApiDescriptionModel implements IApplicationApiDescriptionModel {\r\n  modules!: { [key: string]: ModuleApiDescriptionModel; } | undefined;\r\n  types!: { [key: string]: TypeApiDescriptionModel; } | undefined;\r\n\r\n  constructor(data?: IApplicationApiDescriptionModel) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (data['modules']) {\r\n        this.modules = {} as any;\r\n        for (let key in data['modules']) {\r\n          if (data['modules'].hasOwnProperty(key))\r\n            this.modules![key] = data['modules'][key] ? ModuleApiDescriptionModel.fromJS(data['modules'][key]) : new ModuleApiDescriptionModel();\r\n        }\r\n      }\r\n      if (data['types']) {\r\n        this.types = {} as any;\r\n        for (let key in data['types']) {\r\n          if (data['types'].hasOwnProperty(key))\r\n            this.types![key] = data['types'][key] ? TypeApiDescriptionModel.fromJS(data['types'][key]) : new TypeApiDescriptionModel();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ApplicationApiDescriptionModel {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ApplicationApiDescriptionModel();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (this.modules) {\r\n      data['modules'] = {};\r\n      for (let key in this.modules) {\r\n        if (this.modules.hasOwnProperty(key))\r\n          data['modules'][key] = this.modules[key] ? this.modules[key].toJSON() : <any>undefined;\r\n      }\r\n    }\r\n    if (this.types) {\r\n      data['types'] = {};\r\n      for (let key in this.types) {\r\n        if (this.types.hasOwnProperty(key))\r\n          data['types'][key] = this.types[key] ? this.types[key].toJSON() : <any>undefined;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IApplicationApiDescriptionModel {\r\n  modules: { [key: string]: ModuleApiDescriptionModel; } | undefined;\r\n  types: { [key: string]: TypeApiDescriptionModel; } | undefined;\r\n}\r\n\r\nexport class RemoteServiceValidationErrorInfo implements IRemoteServiceValidationErrorInfo {\r\n  message!: string | undefined;\r\n  members!: string[] | undefined;\r\n\r\n  constructor(data?: IRemoteServiceValidationErrorInfo) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.message = data['message'];\r\n      if (Array.isArray(data['members'])) {\r\n        this.members = [] as any;\r\n        for (let item of data['members'])\r\n          this.members!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): RemoteServiceValidationErrorInfo {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new RemoteServiceValidationErrorInfo();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['message'] = this.message;\r\n    if (Array.isArray(this.members)) {\r\n      data['members'] = [];\r\n      for (let item of this.members)\r\n        data['members'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IRemoteServiceValidationErrorInfo {\r\n  message: string | undefined;\r\n  members: string[] | undefined;\r\n}\r\n\r\nexport class RemoteServiceErrorInfo implements IRemoteServiceErrorInfo {\r\n  code!: string | undefined;\r\n  message!: string | undefined;\r\n  details!: string | undefined;\r\n  data!: { [key: string]: any; } | undefined;\r\n  validationErrors!: RemoteServiceValidationErrorInfo[] | undefined;\r\n\r\n  constructor(data?: IRemoteServiceErrorInfo) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.code = data['code'];\r\n      this.message = data['message'];\r\n      this.details = data['details'];\r\n      if (data['data']) {\r\n        this.data = {} as any;\r\n        for (let key in data['data']) {\r\n          if (data['data'].hasOwnProperty(key))\r\n            this.data![key] = data['data'][key];\r\n        }\r\n      }\r\n      if (Array.isArray(data['validationErrors'])) {\r\n        this.validationErrors = [] as any;\r\n        for (let item of data['validationErrors'])\r\n          this.validationErrors!.push(RemoteServiceValidationErrorInfo.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): RemoteServiceErrorInfo {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new RemoteServiceErrorInfo();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['code'] = this.code;\r\n    data['message'] = this.message;\r\n    data['details'] = this.details;\r\n    if (this.data) {\r\n      data['data'] = {};\r\n      for (let key in this.data) {\r\n        if (this.data.hasOwnProperty(key))\r\n          data['data'][key] = this.data[key];\r\n      }\r\n    }\r\n    if (Array.isArray(this.validationErrors)) {\r\n      data['validationErrors'] = [];\r\n      for (let item of this.validationErrors)\r\n        data['validationErrors'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IRemoteServiceErrorInfo {\r\n  code: string | undefined;\r\n  message: string | undefined;\r\n  details: string | undefined;\r\n  data: { [key: string]: any; } | undefined;\r\n  validationErrors: RemoteServiceValidationErrorInfo[] | undefined;\r\n}\r\n\r\nexport class RemoteServiceErrorResponse implements IRemoteServiceErrorResponse {\r\n  error!: RemoteServiceErrorInfo;\r\n\r\n  constructor(data?: IRemoteServiceErrorResponse) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.error = data['error'] ? RemoteServiceErrorInfo.fromJS(data['error']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): RemoteServiceErrorResponse {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new RemoteServiceErrorResponse();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['error'] = this.error ? this.error.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IRemoteServiceErrorResponse {\r\n  error: RemoteServiceErrorInfo;\r\n}\r\n\r\nexport class LanguageInfo implements ILanguageInfo {\r\n  readonly cultureName!: string | undefined;\r\n  readonly uiCultureName!: string | undefined;\r\n  readonly displayName!: string | undefined;\r\n  flagIcon!: string | undefined;\r\n\r\n  constructor(data?: ILanguageInfo) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      (<any>this).cultureName = data['cultureName'];\r\n      (<any>this).uiCultureName = data['uiCultureName'];\r\n      (<any>this).displayName = data['displayName'];\r\n      this.flagIcon = data['flagIcon'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LanguageInfo {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LanguageInfo();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['cultureName'] = this.cultureName;\r\n    data['uiCultureName'] = this.uiCultureName;\r\n    data['displayName'] = this.displayName;\r\n    data['flagIcon'] = this.flagIcon;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILanguageInfo {\r\n  cultureName: string | undefined;\r\n  uiCultureName: string | undefined;\r\n  displayName: string | undefined;\r\n  flagIcon: string | undefined;\r\n}\r\n\r\nexport class DateTimeFormatDto implements IDateTimeFormatDto {\r\n  calendarAlgorithmType!: string | undefined;\r\n  dateTimeFormatLong!: string | undefined;\r\n  shortDatePattern!: string | undefined;\r\n  fullDateTimePattern!: string | undefined;\r\n  dateSeparator!: string | undefined;\r\n  shortTimePattern!: string | undefined;\r\n  longTimePattern!: string | undefined;\r\n\r\n  constructor(data?: IDateTimeFormatDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.calendarAlgorithmType = data['calendarAlgorithmType'];\r\n      this.dateTimeFormatLong = data['dateTimeFormatLong'];\r\n      this.shortDatePattern = data['shortDatePattern'];\r\n      this.fullDateTimePattern = data['fullDateTimePattern'];\r\n      this.dateSeparator = data['dateSeparator'];\r\n      this.shortTimePattern = data['shortTimePattern'];\r\n      this.longTimePattern = data['longTimePattern'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DateTimeFormatDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DateTimeFormatDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['calendarAlgorithmType'] = this.calendarAlgorithmType;\r\n    data['dateTimeFormatLong'] = this.dateTimeFormatLong;\r\n    data['shortDatePattern'] = this.shortDatePattern;\r\n    data['fullDateTimePattern'] = this.fullDateTimePattern;\r\n    data['dateSeparator'] = this.dateSeparator;\r\n    data['shortTimePattern'] = this.shortTimePattern;\r\n    data['longTimePattern'] = this.longTimePattern;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDateTimeFormatDto {\r\n  calendarAlgorithmType: string | undefined;\r\n  dateTimeFormatLong: string | undefined;\r\n  shortDatePattern: string | undefined;\r\n  fullDateTimePattern: string | undefined;\r\n  dateSeparator: string | undefined;\r\n  shortTimePattern: string | undefined;\r\n  longTimePattern: string | undefined;\r\n}\r\n\r\nexport class CurrentCultureDto implements ICurrentCultureDto {\r\n  displayName!: string | undefined;\r\n  englishName!: string | undefined;\r\n  threeLetterIsoLanguageName!: string | undefined;\r\n  twoLetterIsoLanguageName!: string | undefined;\r\n  isRightToLeft!: boolean;\r\n  cultureName!: string | undefined;\r\n  name!: string | undefined;\r\n  nativeName!: string | undefined;\r\n  dateTimeFormat!: DateTimeFormatDto;\r\n\r\n  constructor(data?: ICurrentCultureDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.displayName = data['displayName'];\r\n      this.englishName = data['englishName'];\r\n      this.threeLetterIsoLanguageName = data['threeLetterIsoLanguageName'];\r\n      this.twoLetterIsoLanguageName = data['twoLetterIsoLanguageName'];\r\n      this.isRightToLeft = data['isRightToLeft'];\r\n      this.cultureName = data['cultureName'];\r\n      this.name = data['name'];\r\n      this.nativeName = data['nativeName'];\r\n      this.dateTimeFormat = data['dateTimeFormat'] ? DateTimeFormatDto.fromJS(data['dateTimeFormat']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CurrentCultureDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CurrentCultureDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['displayName'] = this.displayName;\r\n    data['englishName'] = this.englishName;\r\n    data['threeLetterIsoLanguageName'] = this.threeLetterIsoLanguageName;\r\n    data['twoLetterIsoLanguageName'] = this.twoLetterIsoLanguageName;\r\n    data['isRightToLeft'] = this.isRightToLeft;\r\n    data['cultureName'] = this.cultureName;\r\n    data['name'] = this.name;\r\n    data['nativeName'] = this.nativeName;\r\n    data['dateTimeFormat'] = this.dateTimeFormat ? this.dateTimeFormat.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICurrentCultureDto {\r\n  displayName: string | undefined;\r\n  englishName: string | undefined;\r\n  threeLetterIsoLanguageName: string | undefined;\r\n  twoLetterIsoLanguageName: string | undefined;\r\n  isRightToLeft: boolean;\r\n  cultureName: string | undefined;\r\n  name: string | undefined;\r\n  nativeName: string | undefined;\r\n  dateTimeFormat: DateTimeFormatDto;\r\n}\r\n\r\nexport class NameValue implements INameValue {\r\n  name!: string | undefined;\r\n  value!: string | undefined;\r\n\r\n  constructor(data?: INameValue) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.name = data['name'];\r\n      this.value = data['value'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NameValue {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NameValue();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['value'] = this.value;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INameValue {\r\n  name: string | undefined;\r\n  value: string | undefined;\r\n}\r\n\r\nexport class ApplicationLocalizationConfigurationDto implements IApplicationLocalizationConfigurationDto {\r\n  values!: { [key: string]: { [key: string]: string; }; } | undefined;\r\n  languages!: LanguageInfo[] | undefined;\r\n  currentCulture!: CurrentCultureDto;\r\n  defaultResourceName!: string | undefined;\r\n  languagesMap!: { [key: string]: NameValue[]; } | undefined;\r\n  languageFilesMap!: { [key: string]: NameValue[]; } | undefined;\r\n\r\n  constructor(data?: IApplicationLocalizationConfigurationDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (data['values']) {\r\n        this.values = {} as any;\r\n        for (let key in data['values']) {\r\n          if (data['values'].hasOwnProperty(key))\r\n            this.values![key] = data['values'][key] !== undefined ? data['values'][key] : {};\r\n        }\r\n      }\r\n      if (Array.isArray(data['languages'])) {\r\n        this.languages = [] as any;\r\n        for (let item of data['languages'])\r\n          this.languages!.push(LanguageInfo.fromJS(item));\r\n      }\r\n      this.currentCulture = data['currentCulture'] ? CurrentCultureDto.fromJS(data['currentCulture']) : <any>undefined;\r\n      this.defaultResourceName = data['defaultResourceName'];\r\n      if (data['languagesMap']) {\r\n        this.languagesMap = {} as any;\r\n        for (let key in data['languagesMap']) {\r\n          if (data['languagesMap'].hasOwnProperty(key))\r\n            this.languagesMap![key] = data['languagesMap'][key] ? data['languagesMap'][key].map((i: any) => NameValue.fromJS(i)) : [];\r\n        }\r\n      }\r\n      if (data['languageFilesMap']) {\r\n        this.languageFilesMap = {} as any;\r\n        for (let key in data['languageFilesMap']) {\r\n          if (data['languageFilesMap'].hasOwnProperty(key))\r\n            this.languageFilesMap![key] = data['languageFilesMap'][key] ? data['languageFilesMap'][key].map((i: any) => NameValue.fromJS(i)) : [];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ApplicationLocalizationConfigurationDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ApplicationLocalizationConfigurationDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (this.values) {\r\n      data['values'] = {};\r\n      for (let key in this.values) {\r\n        if (this.values.hasOwnProperty(key))\r\n          data['values'][key] = this.values[key];\r\n      }\r\n    }\r\n    if (Array.isArray(this.languages)) {\r\n      data['languages'] = [];\r\n      for (let item of this.languages)\r\n        data['languages'].push(item.toJSON());\r\n    }\r\n    data['currentCulture'] = this.currentCulture ? this.currentCulture.toJSON() : <any>undefined;\r\n    data['defaultResourceName'] = this.defaultResourceName;\r\n    if (this.languagesMap) {\r\n      data['languagesMap'] = {};\r\n      for (let key in this.languagesMap) {\r\n        if (this.languagesMap.hasOwnProperty(key))\r\n          data['languagesMap'][key] = this.languagesMap[key];\r\n      }\r\n    }\r\n    if (this.languageFilesMap) {\r\n      data['languageFilesMap'] = {};\r\n      for (let key in this.languageFilesMap) {\r\n        if (this.languageFilesMap.hasOwnProperty(key))\r\n          data['languageFilesMap'][key] = this.languageFilesMap[key];\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IApplicationLocalizationConfigurationDto {\r\n  values: { [key: string]: { [key: string]: string; }; } | undefined;\r\n  languages: LanguageInfo[] | undefined;\r\n  currentCulture: CurrentCultureDto;\r\n  defaultResourceName: string | undefined;\r\n  languagesMap: { [key: string]: NameValue[]; } | undefined;\r\n  languageFilesMap: { [key: string]: NameValue[]; } | undefined;\r\n}\r\n\r\nexport class ApplicationAuthConfigurationDto implements IApplicationAuthConfigurationDto {\r\n  policies!: { [key: string]: boolean; } | undefined;\r\n  grantedPolicies!: { [key: string]: boolean; } | undefined;\r\n\r\n  constructor(data?: IApplicationAuthConfigurationDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (data['policies']) {\r\n        this.policies = {} as any;\r\n        for (let key in data['policies']) {\r\n          if (data['policies'].hasOwnProperty(key))\r\n            this.policies![key] = data['policies'][key];\r\n        }\r\n      }\r\n      if (data['grantedPolicies']) {\r\n        this.grantedPolicies = {} as any;\r\n        for (let key in data['grantedPolicies']) {\r\n          if (data['grantedPolicies'].hasOwnProperty(key))\r\n            this.grantedPolicies![key] = data['grantedPolicies'][key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ApplicationAuthConfigurationDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ApplicationAuthConfigurationDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (this.policies) {\r\n      data['policies'] = {};\r\n      for (let key in this.policies) {\r\n        if (this.policies.hasOwnProperty(key))\r\n          data['policies'][key] = this.policies[key];\r\n      }\r\n    }\r\n    if (this.grantedPolicies) {\r\n      data['grantedPolicies'] = {};\r\n      for (let key in this.grantedPolicies) {\r\n        if (this.grantedPolicies.hasOwnProperty(key))\r\n          data['grantedPolicies'][key] = this.grantedPolicies[key];\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IApplicationAuthConfigurationDto {\r\n  policies: { [key: string]: boolean; } | undefined;\r\n  grantedPolicies: { [key: string]: boolean; } | undefined;\r\n}\r\n\r\nexport class ApplicationSettingConfigurationDto implements IApplicationSettingConfigurationDto {\r\n  values!: { [key: string]: string; } | undefined;\r\n\r\n  constructor(data?: IApplicationSettingConfigurationDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (data['values']) {\r\n        this.values = {} as any;\r\n        for (let key in data['values']) {\r\n          if (data['values'].hasOwnProperty(key))\r\n            this.values![key] = data['values'][key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ApplicationSettingConfigurationDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ApplicationSettingConfigurationDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (this.values) {\r\n      data['values'] = {};\r\n      for (let key in this.values) {\r\n        if (this.values.hasOwnProperty(key))\r\n          data['values'][key] = this.values[key];\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IApplicationSettingConfigurationDto {\r\n  values: { [key: string]: string; } | undefined;\r\n}\r\n\r\nexport class CurrentUserDto implements ICurrentUserDto {\r\n  isAuthenticated!: boolean;\r\n  id!: string | undefined;\r\n  tenantId!: string | undefined;\r\n  userName!: string | undefined;\r\n  name!: string | undefined;\r\n  surName!: string | undefined;\r\n  email!: string | undefined;\r\n  emailVerified!: boolean;\r\n  phoneNumber!: string | undefined;\r\n  phoneNumberVerified!: boolean;\r\n  roles!: string[] | undefined;\r\n\r\n  constructor(data?: ICurrentUserDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isAuthenticated = data['isAuthenticated'];\r\n      this.id = data['id'];\r\n      this.tenantId = data['tenantId'];\r\n      this.userName = data['userName'];\r\n      this.name = data['name'];\r\n      this.surName = data['surName'];\r\n      this.email = data['email'];\r\n      this.emailVerified = data['emailVerified'];\r\n      this.phoneNumber = data['phoneNumber'];\r\n      this.phoneNumberVerified = data['phoneNumberVerified'];\r\n      if (Array.isArray(data['roles'])) {\r\n        this.roles = [] as any;\r\n        for (let item of data['roles'])\r\n          this.roles!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CurrentUserDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CurrentUserDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isAuthenticated'] = this.isAuthenticated;\r\n    data['id'] = this.id;\r\n    data['tenantId'] = this.tenantId;\r\n    data['userName'] = this.userName;\r\n    data['name'] = this.name;\r\n    data['surName'] = this.surName;\r\n    data['email'] = this.email;\r\n    data['emailVerified'] = this.emailVerified;\r\n    data['phoneNumber'] = this.phoneNumber;\r\n    data['phoneNumberVerified'] = this.phoneNumberVerified;\r\n    if (Array.isArray(this.roles)) {\r\n      data['roles'] = [];\r\n      for (let item of this.roles)\r\n        data['roles'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICurrentUserDto {\r\n  isAuthenticated: boolean;\r\n  id: string | undefined;\r\n  tenantId: string | undefined;\r\n  userName: string | undefined;\r\n  name: string | undefined;\r\n  surName: string | undefined;\r\n  email: string | undefined;\r\n  emailVerified: boolean;\r\n  phoneNumber: string | undefined;\r\n  phoneNumberVerified: boolean;\r\n  roles: string[] | undefined;\r\n}\r\n\r\nexport class ApplicationFeatureConfigurationDto implements IApplicationFeatureConfigurationDto {\r\n  values!: { [key: string]: string; } | undefined;\r\n\r\n  constructor(data?: IApplicationFeatureConfigurationDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (data['values']) {\r\n        this.values = {} as any;\r\n        for (let key in data['values']) {\r\n          if (data['values'].hasOwnProperty(key))\r\n            this.values![key] = data['values'][key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ApplicationFeatureConfigurationDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ApplicationFeatureConfigurationDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (this.values) {\r\n      data['values'] = {};\r\n      for (let key in this.values) {\r\n        if (this.values.hasOwnProperty(key))\r\n          data['values'][key] = this.values[key];\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IApplicationFeatureConfigurationDto {\r\n  values: { [key: string]: string; } | undefined;\r\n}\r\n\r\nexport class MultiTenancyInfoDto implements IMultiTenancyInfoDto {\r\n  isEnabled!: boolean;\r\n\r\n  constructor(data?: IMultiTenancyInfoDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isEnabled = data['isEnabled'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): MultiTenancyInfoDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new MultiTenancyInfoDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isEnabled'] = this.isEnabled;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IMultiTenancyInfoDto {\r\n  isEnabled: boolean;\r\n}\r\n\r\nexport class CurrentTenantDto implements ICurrentTenantDto {\r\n  id!: string | undefined;\r\n  name!: string | undefined;\r\n  isAvailable!: boolean;\r\n\r\n  constructor(data?: ICurrentTenantDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.name = data['name'];\r\n      this.isAvailable = data['isAvailable'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CurrentTenantDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CurrentTenantDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['name'] = this.name;\r\n    data['isAvailable'] = this.isAvailable;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICurrentTenantDto {\r\n  id: string | undefined;\r\n  name: string | undefined;\r\n  isAvailable: boolean;\r\n}\r\n\r\nexport class IanaTimeZone implements IIanaTimeZone {\r\n  timeZoneName!: string | undefined;\r\n\r\n  constructor(data?: IIanaTimeZone) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.timeZoneName = data['timeZoneName'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): IanaTimeZone {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new IanaTimeZone();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['timeZoneName'] = this.timeZoneName;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IIanaTimeZone {\r\n  timeZoneName: string | undefined;\r\n}\r\n\r\nexport class WindowsTimeZone implements IWindowsTimeZone {\r\n  timeZoneId!: string | undefined;\r\n\r\n  constructor(data?: IWindowsTimeZone) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.timeZoneId = data['timeZoneId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): WindowsTimeZone {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new WindowsTimeZone();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['timeZoneId'] = this.timeZoneId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IWindowsTimeZone {\r\n  timeZoneId: string | undefined;\r\n}\r\n\r\nexport class TimeZone implements ITimeZone {\r\n  iana!: IanaTimeZone;\r\n  windows!: WindowsTimeZone;\r\n\r\n  constructor(data?: ITimeZone) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.iana = data['iana'] ? IanaTimeZone.fromJS(data['iana']) : <any>undefined;\r\n      this.windows = data['windows'] ? WindowsTimeZone.fromJS(data['windows']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): TimeZone {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new TimeZone();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['iana'] = this.iana ? this.iana.toJSON() : <any>undefined;\r\n    data['windows'] = this.windows ? this.windows.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ITimeZone {\r\n  iana: IanaTimeZone;\r\n  windows: WindowsTimeZone;\r\n}\r\n\r\nexport class TimingDto implements ITimingDto {\r\n  timeZone!: TimeZone;\r\n\r\n  constructor(data?: ITimingDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.timeZone = data['timeZone'] ? TimeZone.fromJS(data['timeZone']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): TimingDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new TimingDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['timeZone'] = this.timeZone ? this.timeZone.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ITimingDto {\r\n  timeZone: TimeZone;\r\n}\r\n\r\nexport class ClockDto implements IClockDto {\r\n  kind!: string | undefined;\r\n\r\n  constructor(data?: IClockDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.kind = data['kind'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ClockDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ClockDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['kind'] = this.kind;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IClockDto {\r\n  kind: string | undefined;\r\n}\r\n\r\nexport class LocalizableStringDto implements ILocalizableStringDto {\r\n  readonly name!: string | undefined;\r\n  resource!: string | undefined;\r\n\r\n  constructor(data?: ILocalizableStringDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      (<any>this).name = data['name'];\r\n      this.resource = data['resource'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LocalizableStringDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LocalizableStringDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['resource'] = this.resource;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILocalizableStringDto {\r\n  name: string | undefined;\r\n  resource: string | undefined;\r\n}\r\n\r\nexport class ExtensionPropertyApiGetDto implements IExtensionPropertyApiGetDto {\r\n  isAvailable!: boolean;\r\n\r\n  constructor(data?: IExtensionPropertyApiGetDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isAvailable = data['isAvailable'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyApiGetDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyApiGetDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isAvailable'] = this.isAvailable;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyApiGetDto {\r\n  isAvailable: boolean;\r\n}\r\n\r\nexport class ExtensionPropertyApiCreateDto implements IExtensionPropertyApiCreateDto {\r\n  isAvailable!: boolean;\r\n\r\n  constructor(data?: IExtensionPropertyApiCreateDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isAvailable = data['isAvailable'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyApiCreateDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyApiCreateDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isAvailable'] = this.isAvailable;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyApiCreateDto {\r\n  isAvailable: boolean;\r\n}\r\n\r\nexport class ExtensionPropertyApiUpdateDto implements IExtensionPropertyApiUpdateDto {\r\n  isAvailable!: boolean;\r\n\r\n  constructor(data?: IExtensionPropertyApiUpdateDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isAvailable = data['isAvailable'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyApiUpdateDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyApiUpdateDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isAvailable'] = this.isAvailable;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyApiUpdateDto {\r\n  isAvailable: boolean;\r\n}\r\n\r\nexport class ExtensionPropertyApiDto implements IExtensionPropertyApiDto {\r\n  onGet!: ExtensionPropertyApiGetDto;\r\n  onCreate!: ExtensionPropertyApiCreateDto;\r\n  onUpdate!: ExtensionPropertyApiUpdateDto;\r\n\r\n  constructor(data?: IExtensionPropertyApiDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.onGet = data['onGet'] ? ExtensionPropertyApiGetDto.fromJS(data['onGet']) : <any>undefined;\r\n      this.onCreate = data['onCreate'] ? ExtensionPropertyApiCreateDto.fromJS(data['onCreate']) : <any>undefined;\r\n      this.onUpdate = data['onUpdate'] ? ExtensionPropertyApiUpdateDto.fromJS(data['onUpdate']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyApiDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyApiDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['onGet'] = this.onGet ? this.onGet.toJSON() : <any>undefined;\r\n    data['onCreate'] = this.onCreate ? this.onCreate.toJSON() : <any>undefined;\r\n    data['onUpdate'] = this.onUpdate ? this.onUpdate.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyApiDto {\r\n  onGet: ExtensionPropertyApiGetDto;\r\n  onCreate: ExtensionPropertyApiCreateDto;\r\n  onUpdate: ExtensionPropertyApiUpdateDto;\r\n}\r\n\r\nexport class ExtensionPropertyUiTableDto implements IExtensionPropertyUiTableDto {\r\n  isVisible!: boolean;\r\n\r\n  constructor(data?: IExtensionPropertyUiTableDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isVisible = data['isVisible'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyUiTableDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyUiTableDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isVisible'] = this.isVisible;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyUiTableDto {\r\n  isVisible: boolean;\r\n}\r\n\r\nexport class ExtensionPropertyUiFormDto implements IExtensionPropertyUiFormDto {\r\n  isVisible!: boolean;\r\n\r\n  constructor(data?: IExtensionPropertyUiFormDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isVisible = data['isVisible'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyUiFormDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyUiFormDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isVisible'] = this.isVisible;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyUiFormDto {\r\n  isVisible: boolean;\r\n}\r\n\r\nexport class ExtensionPropertyUiDto implements IExtensionPropertyUiDto {\r\n  onTable!: ExtensionPropertyUiTableDto;\r\n  onCreateForm!: ExtensionPropertyUiFormDto;\r\n  onEditForm!: ExtensionPropertyUiFormDto;\r\n\r\n  constructor(data?: IExtensionPropertyUiDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.onTable = data['onTable'] ? ExtensionPropertyUiTableDto.fromJS(data['onTable']) : <any>undefined;\r\n      this.onCreateForm = data['onCreateForm'] ? ExtensionPropertyUiFormDto.fromJS(data['onCreateForm']) : <any>undefined;\r\n      this.onEditForm = data['onEditForm'] ? ExtensionPropertyUiFormDto.fromJS(data['onEditForm']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyUiDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyUiDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['onTable'] = this.onTable ? this.onTable.toJSON() : <any>undefined;\r\n    data['onCreateForm'] = this.onCreateForm ? this.onCreateForm.toJSON() : <any>undefined;\r\n    data['onEditForm'] = this.onEditForm ? this.onEditForm.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyUiDto {\r\n  onTable: ExtensionPropertyUiTableDto;\r\n  onCreateForm: ExtensionPropertyUiFormDto;\r\n  onEditForm: ExtensionPropertyUiFormDto;\r\n}\r\n\r\nexport class ExtensionPropertyAttributeDto implements IExtensionPropertyAttributeDto {\r\n  typeSimple!: string | undefined;\r\n  config!: { [key: string]: any; } | undefined;\r\n\r\n  constructor(data?: IExtensionPropertyAttributeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.typeSimple = data['typeSimple'];\r\n      if (data['config']) {\r\n        this.config = {} as any;\r\n        for (let key in data['config']) {\r\n          if (data['config'].hasOwnProperty(key))\r\n            this.config![key] = data['config'][key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyAttributeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyAttributeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['typeSimple'] = this.typeSimple;\r\n    if (this.config) {\r\n      data['config'] = {};\r\n      for (let key in this.config) {\r\n        if (this.config.hasOwnProperty(key))\r\n          data['config'][key] = this.config[key];\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyAttributeDto {\r\n  typeSimple: string | undefined;\r\n  config: { [key: string]: any; } | undefined;\r\n}\r\n\r\nexport class ExtensionPropertyDto implements IExtensionPropertyDto {\r\n  type!: string | undefined;\r\n  typeSimple!: string | undefined;\r\n  displayName!: LocalizableStringDto;\r\n  api!: ExtensionPropertyApiDto;\r\n  ui!: ExtensionPropertyUiDto;\r\n  attributes!: ExtensionPropertyAttributeDto[] | undefined;\r\n  configuration!: { [key: string]: any; } | undefined;\r\n  defaultValue!: any | undefined;\r\n\r\n  constructor(data?: IExtensionPropertyDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.type = data['type'];\r\n      this.typeSimple = data['typeSimple'];\r\n      this.displayName = data['displayName'] ? LocalizableStringDto.fromJS(data['displayName']) : <any>undefined;\r\n      this.api = data['api'] ? ExtensionPropertyApiDto.fromJS(data['api']) : <any>undefined;\r\n      this.ui = data['ui'] ? ExtensionPropertyUiDto.fromJS(data['ui']) : <any>undefined;\r\n      if (Array.isArray(data['attributes'])) {\r\n        this.attributes = [] as any;\r\n        for (let item of data['attributes'])\r\n          this.attributes!.push(ExtensionPropertyAttributeDto.fromJS(item));\r\n      }\r\n      if (data['configuration']) {\r\n        this.configuration = {} as any;\r\n        for (let key in data['configuration']) {\r\n          if (data['configuration'].hasOwnProperty(key))\r\n            this.configuration![key] = data['configuration'][key];\r\n        }\r\n      }\r\n      this.defaultValue = data['defaultValue'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionPropertyDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionPropertyDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['type'] = this.type;\r\n    data['typeSimple'] = this.typeSimple;\r\n    data['displayName'] = this.displayName ? this.displayName.toJSON() : <any>undefined;\r\n    data['api'] = this.api ? this.api.toJSON() : <any>undefined;\r\n    data['ui'] = this.ui ? this.ui.toJSON() : <any>undefined;\r\n    if (Array.isArray(this.attributes)) {\r\n      data['attributes'] = [];\r\n      for (let item of this.attributes)\r\n        data['attributes'].push(item.toJSON());\r\n    }\r\n    if (this.configuration) {\r\n      data['configuration'] = {};\r\n      for (let key in this.configuration) {\r\n        if (this.configuration.hasOwnProperty(key))\r\n          data['configuration'][key] = this.configuration[key];\r\n      }\r\n    }\r\n    data['defaultValue'] = this.defaultValue;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionPropertyDto {\r\n  type: string | undefined;\r\n  typeSimple: string | undefined;\r\n  displayName: LocalizableStringDto;\r\n  api: ExtensionPropertyApiDto;\r\n  ui: ExtensionPropertyUiDto;\r\n  attributes: ExtensionPropertyAttributeDto[] | undefined;\r\n  configuration: { [key: string]: any; } | undefined;\r\n  defaultValue: any | undefined;\r\n}\r\n\r\nexport class EntityExtensionDto implements IEntityExtensionDto {\r\n  properties!: { [key: string]: ExtensionPropertyDto; } | undefined;\r\n  configuration!: { [key: string]: any; } | undefined;\r\n\r\n  constructor(data?: IEntityExtensionDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (data['properties']) {\r\n        this.properties = {} as any;\r\n        for (let key in data['properties']) {\r\n          if (data['properties'].hasOwnProperty(key))\r\n            this.properties![key] = data['properties'][key] ? ExtensionPropertyDto.fromJS(data['properties'][key]) : new ExtensionPropertyDto();\r\n        }\r\n      }\r\n      if (data['configuration']) {\r\n        this.configuration = {} as any;\r\n        for (let key in data['configuration']) {\r\n          if (data['configuration'].hasOwnProperty(key))\r\n            this.configuration![key] = data['configuration'][key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): EntityExtensionDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new EntityExtensionDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (this.properties) {\r\n      data['properties'] = {};\r\n      for (let key in this.properties) {\r\n        if (this.properties.hasOwnProperty(key))\r\n          data['properties'][key] = this.properties[key] ? this.properties[key].toJSON() : <any>undefined;\r\n      }\r\n    }\r\n    if (this.configuration) {\r\n      data['configuration'] = {};\r\n      for (let key in this.configuration) {\r\n        if (this.configuration.hasOwnProperty(key))\r\n          data['configuration'][key] = this.configuration[key];\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IEntityExtensionDto {\r\n  properties: { [key: string]: ExtensionPropertyDto; } | undefined;\r\n  configuration: { [key: string]: any; } | undefined;\r\n}\r\n\r\nexport class ModuleExtensionDto implements IModuleExtensionDto {\r\n  entities!: { [key: string]: EntityExtensionDto; } | undefined;\r\n  configuration!: { [key: string]: any; } | undefined;\r\n\r\n  constructor(data?: IModuleExtensionDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (data['entities']) {\r\n        this.entities = {} as any;\r\n        for (let key in data['entities']) {\r\n          if (data['entities'].hasOwnProperty(key))\r\n            this.entities![key] = data['entities'][key] ? EntityExtensionDto.fromJS(data['entities'][key]) : new EntityExtensionDto();\r\n        }\r\n      }\r\n      if (data['configuration']) {\r\n        this.configuration = {} as any;\r\n        for (let key in data['configuration']) {\r\n          if (data['configuration'].hasOwnProperty(key))\r\n            this.configuration![key] = data['configuration'][key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ModuleExtensionDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ModuleExtensionDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (this.entities) {\r\n      data['entities'] = {};\r\n      for (let key in this.entities) {\r\n        if (this.entities.hasOwnProperty(key))\r\n          data['entities'][key] = this.entities[key] ? this.entities[key].toJSON() : <any>undefined;\r\n      }\r\n    }\r\n    if (this.configuration) {\r\n      data['configuration'] = {};\r\n      for (let key in this.configuration) {\r\n        if (this.configuration.hasOwnProperty(key))\r\n          data['configuration'][key] = this.configuration[key];\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IModuleExtensionDto {\r\n  entities: { [key: string]: EntityExtensionDto; } | undefined;\r\n  configuration: { [key: string]: any; } | undefined;\r\n}\r\n\r\nexport class ExtensionEnumFieldDto implements IExtensionEnumFieldDto {\r\n  name!: string | undefined;\r\n  value!: any | undefined;\r\n\r\n  constructor(data?: IExtensionEnumFieldDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.name = data['name'];\r\n      this.value = data['value'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionEnumFieldDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionEnumFieldDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['value'] = this.value;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionEnumFieldDto {\r\n  name: string | undefined;\r\n  value: any | undefined;\r\n}\r\n\r\nexport class ExtensionEnumDto implements IExtensionEnumDto {\r\n  fields!: ExtensionEnumFieldDto[] | undefined;\r\n  localizationResource!: string | undefined;\r\n\r\n  constructor(data?: IExtensionEnumDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (Array.isArray(data['fields'])) {\r\n        this.fields = [] as any;\r\n        for (let item of data['fields'])\r\n          this.fields!.push(ExtensionEnumFieldDto.fromJS(item));\r\n      }\r\n      this.localizationResource = data['localizationResource'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ExtensionEnumDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ExtensionEnumDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (Array.isArray(this.fields)) {\r\n      data['fields'] = [];\r\n      for (let item of this.fields)\r\n        data['fields'].push(item.toJSON());\r\n    }\r\n    data['localizationResource'] = this.localizationResource;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IExtensionEnumDto {\r\n  fields: ExtensionEnumFieldDto[] | undefined;\r\n  localizationResource: string | undefined;\r\n}\r\n\r\nexport class ObjectExtensionsDto implements IObjectExtensionsDto {\r\n  modules!: { [key: string]: ModuleExtensionDto; } | undefined;\r\n  enums!: { [key: string]: ExtensionEnumDto; } | undefined;\r\n\r\n  constructor(data?: IObjectExtensionsDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (data['modules']) {\r\n        this.modules = {} as any;\r\n        for (let key in data['modules']) {\r\n          if (data['modules'].hasOwnProperty(key))\r\n            this.modules![key] = data['modules'][key] ? ModuleExtensionDto.fromJS(data['modules'][key]) : new ModuleExtensionDto();\r\n        }\r\n      }\r\n      if (data['enums']) {\r\n        this.enums = {} as any;\r\n        for (let key in data['enums']) {\r\n          if (data['enums'].hasOwnProperty(key))\r\n            this.enums![key] = data['enums'][key] ? ExtensionEnumDto.fromJS(data['enums'][key]) : new ExtensionEnumDto();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ObjectExtensionsDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ObjectExtensionsDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (this.modules) {\r\n      data['modules'] = {};\r\n      for (let key in this.modules) {\r\n        if (this.modules.hasOwnProperty(key))\r\n          data['modules'][key] = this.modules[key] ? this.modules[key].toJSON() : <any>undefined;\r\n      }\r\n    }\r\n    if (this.enums) {\r\n      data['enums'] = {};\r\n      for (let key in this.enums) {\r\n        if (this.enums.hasOwnProperty(key))\r\n          data['enums'][key] = this.enums[key] ? this.enums[key].toJSON() : <any>undefined;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IObjectExtensionsDto {\r\n  modules: { [key: string]: ModuleExtensionDto; } | undefined;\r\n  enums: { [key: string]: ExtensionEnumDto; } | undefined;\r\n}\r\n\r\nexport class ApplicationConfigurationDto implements IApplicationConfigurationDto {\r\n  localization!: ApplicationLocalizationConfigurationDto;\r\n  auth!: ApplicationAuthConfigurationDto;\r\n  setting!: ApplicationSettingConfigurationDto;\r\n  currentUser!: CurrentUserDto;\r\n  features!: ApplicationFeatureConfigurationDto;\r\n  multiTenancy!: MultiTenancyInfoDto;\r\n  currentTenant!: CurrentTenantDto;\r\n  timing!: TimingDto;\r\n  clock!: ClockDto;\r\n  objectExtensions!: ObjectExtensionsDto;\r\n\r\n  constructor(data?: IApplicationConfigurationDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.localization = data['localization'] ? ApplicationLocalizationConfigurationDto.fromJS(data['localization']) : <any>undefined;\r\n      this.auth = data['auth'] ? ApplicationAuthConfigurationDto.fromJS(data['auth']) : <any>undefined;\r\n      this.setting = data['setting'] ? ApplicationSettingConfigurationDto.fromJS(data['setting']) : <any>undefined;\r\n      this.currentUser = data['currentUser'] ? CurrentUserDto.fromJS(data['currentUser']) : <any>undefined;\r\n      this.features = data['features'] ? ApplicationFeatureConfigurationDto.fromJS(data['features']) : <any>undefined;\r\n      this.multiTenancy = data['multiTenancy'] ? MultiTenancyInfoDto.fromJS(data['multiTenancy']) : <any>undefined;\r\n      this.currentTenant = data['currentTenant'] ? CurrentTenantDto.fromJS(data['currentTenant']) : <any>undefined;\r\n      this.timing = data['timing'] ? TimingDto.fromJS(data['timing']) : <any>undefined;\r\n      this.clock = data['clock'] ? ClockDto.fromJS(data['clock']) : <any>undefined;\r\n      this.objectExtensions = data['objectExtensions'] ? ObjectExtensionsDto.fromJS(data['objectExtensions']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ApplicationConfigurationDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ApplicationConfigurationDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['localization'] = this.localization ? this.localization.toJSON() : <any>undefined;\r\n    data['auth'] = this.auth ? this.auth.toJSON() : <any>undefined;\r\n    data['setting'] = this.setting ? this.setting.toJSON() : <any>undefined;\r\n    data['currentUser'] = this.currentUser ? this.currentUser.toJSON() : <any>undefined;\r\n    data['features'] = this.features ? this.features.toJSON() : <any>undefined;\r\n    data['multiTenancy'] = this.multiTenancy ? this.multiTenancy.toJSON() : <any>undefined;\r\n    data['currentTenant'] = this.currentTenant ? this.currentTenant.toJSON() : <any>undefined;\r\n    data['timing'] = this.timing ? this.timing.toJSON() : <any>undefined;\r\n    data['clock'] = this.clock ? this.clock.toJSON() : <any>undefined;\r\n    data['objectExtensions'] = this.objectExtensions ? this.objectExtensions.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IApplicationConfigurationDto {\r\n  localization: ApplicationLocalizationConfigurationDto;\r\n  auth: ApplicationAuthConfigurationDto;\r\n  setting: ApplicationSettingConfigurationDto;\r\n  currentUser: CurrentUserDto;\r\n  features: ApplicationFeatureConfigurationDto;\r\n  multiTenancy: MultiTenancyInfoDto;\r\n  currentTenant: CurrentTenantDto;\r\n  timing: TimingDto;\r\n  clock: ClockDto;\r\n  objectExtensions: ObjectExtensionsDto;\r\n}\r\n\r\nexport class FindTenantResultDto implements IFindTenantResultDto {\r\n  success!: boolean;\r\n  tenantId!: string | undefined;\r\n  name!: string | undefined;\r\n\r\n  constructor(data?: IFindTenantResultDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.success = data['success'];\r\n      this.tenantId = data['tenantId'];\r\n      this.name = data['name'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): FindTenantResultDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new FindTenantResultDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['success'] = this.success;\r\n    data['tenantId'] = this.tenantId;\r\n    data['name'] = this.name;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IFindTenantResultDto {\r\n  success: boolean;\r\n  tenantId: string | undefined;\r\n  name: string | undefined;\r\n}\r\n\r\nexport enum ExportModel {\r\n  Default = 0,\r\n  TrangHienTai = 1,\r\n  ToanBo = 2,\r\n}\r\n\r\nexport enum OutputFileExtension {\r\n  Excel = 1,\r\n  Pdf = 2,\r\n  Word = 3,\r\n  Excel2003 = 4,\r\n  PdfAllSheet = 5,\r\n}\r\n\r\nexport class BenhVienPagedRequestDto implements IBenhVienPagedRequestDto {\r\n  loaiBenhVien!: number | undefined;\r\n  tuyenBenhVien!: number | undefined;\r\n  hangBenhVien!: string | undefined;\r\n  tinhId!: number | undefined;\r\n  huyenId!: number | undefined;\r\n  xaId!: number | undefined;\r\n  benhVienChaId!: number | undefined;\r\n  coQuanChuQuanId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IBenhVienPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiBenhVien = data['loaiBenhVien'];\r\n      this.tuyenBenhVien = data['tuyenBenhVien'];\r\n      this.hangBenhVien = data['hangBenhVien'];\r\n      this.tinhId = data['tinhId'];\r\n      this.huyenId = data['huyenId'];\r\n      this.xaId = data['xaId'];\r\n      this.benhVienChaId = data['benhVienChaId'];\r\n      this.coQuanChuQuanId = data['coQuanChuQuanId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): BenhVienPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new BenhVienPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiBenhVien'] = this.loaiBenhVien;\r\n    data['tuyenBenhVien'] = this.tuyenBenhVien;\r\n    data['hangBenhVien'] = this.hangBenhVien;\r\n    data['tinhId'] = this.tinhId;\r\n    data['huyenId'] = this.huyenId;\r\n    data['xaId'] = this.xaId;\r\n    data['benhVienChaId'] = this.benhVienChaId;\r\n    data['coQuanChuQuanId'] = this.coQuanChuQuanId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IBenhVienPagedRequestDto {\r\n  loaiBenhVien: number | undefined;\r\n  tuyenBenhVien: number | undefined;\r\n  hangBenhVien: string | undefined;\r\n  tinhId: number | undefined;\r\n  huyenId: number | undefined;\r\n  xaId: number | undefined;\r\n  benhVienChaId: number | undefined;\r\n  coQuanChuQuanId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class BenhVienDtoMinify implements IBenhVienDtoMinify {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  diaChi!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IBenhVienDtoMinify) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.diaChi = data['diaChi'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): BenhVienDtoMinify {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new BenhVienDtoMinify();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['diaChi'] = this.diaChi;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IBenhVienDtoMinify {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  diaChi: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class BenhVienDto implements IBenhVienDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  loaiBenhVien!: number | undefined;\r\n  tinhId!: number | undefined;\r\n  huyenId!: number | undefined;\r\n  xaId!: number | undefined;\r\n  diaChi!: string | undefined;\r\n  benhVienChaId!: number | undefined;\r\n  tuyenBenhVien!: number | undefined;\r\n  hangBenhVien!: string | undefined;\r\n  soDienThoai!: string | undefined;\r\n  email!: string | undefined;\r\n  fax!: string | undefined;\r\n  coQuanChuQuanId!: number | undefined;\r\n  isActive!: boolean;\r\n  tenTinh!: string | undefined;\r\n  tenHuyen!: string | undefined;\r\n  tenXa!: string | undefined;\r\n  benhVienChaDto!: BenhVienDtoMinify;\r\n  coQuanChuQuanDto!: BenhVienDtoMinify;\r\n  id!: number;\r\n\r\n  constructor(data?: IBenhVienDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.loaiBenhVien = data['loaiBenhVien'];\r\n      this.tinhId = data['tinhId'];\r\n      this.huyenId = data['huyenId'];\r\n      this.xaId = data['xaId'];\r\n      this.diaChi = data['diaChi'];\r\n      this.benhVienChaId = data['benhVienChaId'];\r\n      this.tuyenBenhVien = data['tuyenBenhVien'];\r\n      this.hangBenhVien = data['hangBenhVien'];\r\n      this.soDienThoai = data['soDienThoai'];\r\n      this.email = data['email'];\r\n      this.fax = data['fax'];\r\n      this.coQuanChuQuanId = data['coQuanChuQuanId'];\r\n      this.isActive = data['isActive'];\r\n      this.tenTinh = data['tenTinh'];\r\n      this.tenHuyen = data['tenHuyen'];\r\n      this.tenXa = data['tenXa'];\r\n      this.benhVienChaDto = data['benhVienChaDto'] ? BenhVienDtoMinify.fromJS(data['benhVienChaDto']) : <any>undefined;\r\n      this.coQuanChuQuanDto = data['coQuanChuQuanDto'] ? BenhVienDtoMinify.fromJS(data['coQuanChuQuanDto']) : <any>undefined;\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): BenhVienDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new BenhVienDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['loaiBenhVien'] = this.loaiBenhVien;\r\n    data['tinhId'] = this.tinhId;\r\n    data['huyenId'] = this.huyenId;\r\n    data['xaId'] = this.xaId;\r\n    data['diaChi'] = this.diaChi;\r\n    data['benhVienChaId'] = this.benhVienChaId;\r\n    data['tuyenBenhVien'] = this.tuyenBenhVien;\r\n    data['hangBenhVien'] = this.hangBenhVien;\r\n    data['soDienThoai'] = this.soDienThoai;\r\n    data['email'] = this.email;\r\n    data['fax'] = this.fax;\r\n    data['coQuanChuQuanId'] = this.coQuanChuQuanId;\r\n    data['isActive'] = this.isActive;\r\n    data['tenTinh'] = this.tenTinh;\r\n    data['tenHuyen'] = this.tenHuyen;\r\n    data['tenXa'] = this.tenXa;\r\n    data['benhVienChaDto'] = this.benhVienChaDto ? this.benhVienChaDto.toJSON() : <any>undefined;\r\n    data['coQuanChuQuanDto'] = this.coQuanChuQuanDto ? this.coQuanChuQuanDto.toJSON() : <any>undefined;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IBenhVienDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  loaiBenhVien: number | undefined;\r\n  tinhId: number | undefined;\r\n  huyenId: number | undefined;\r\n  xaId: number | undefined;\r\n  diaChi: string | undefined;\r\n  benhVienChaId: number | undefined;\r\n  tuyenBenhVien: number | undefined;\r\n  hangBenhVien: string | undefined;\r\n  soDienThoai: string | undefined;\r\n  email: string | undefined;\r\n  fax: string | undefined;\r\n  coQuanChuQuanId: number | undefined;\r\n  isActive: boolean;\r\n  tenTinh: string | undefined;\r\n  tenHuyen: string | undefined;\r\n  tenXa: string | undefined;\r\n  benhVienChaDto: BenhVienDtoMinify;\r\n  coQuanChuQuanDto: BenhVienDtoMinify;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfBenhVienDto implements IPagedResultDtoOfBenhVienDto {\r\n  totalCount!: number;\r\n  items!: BenhVienDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfBenhVienDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(BenhVienDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfBenhVienDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfBenhVienDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfBenhVienDto {\r\n  totalCount: number;\r\n  items: BenhVienDto[] | undefined;\r\n}\r\n\r\nexport class CoSoYTeAutoDataSourceRequest implements ICoSoYTeAutoDataSourceRequest {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ICoSoYTeAutoDataSourceRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CoSoYTeAutoDataSourceRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CoSoYTeAutoDataSourceRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICoSoYTeAutoDataSourceRequest {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class CoSoYTeAutoDataSourceDto implements ICoSoYTeAutoDataSourceDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  diaChi!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ICoSoYTeAutoDataSourceDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.diaChi = data['diaChi'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CoSoYTeAutoDataSourceDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CoSoYTeAutoDataSourceDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['diaChi'] = this.diaChi;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICoSoYTeAutoDataSourceDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  diaChi: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfCoSoYTeAutoDataSourceDto implements IPagedResultDtoOfCoSoYTeAutoDataSourceDto {\r\n  totalCount!: number;\r\n  items!: CoSoYTeAutoDataSourceDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfCoSoYTeAutoDataSourceDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(CoSoYTeAutoDataSourceDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfCoSoYTeAutoDataSourceDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfCoSoYTeAutoDataSourceDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfCoSoYTeAutoDataSourceDto {\r\n  totalCount: number;\r\n  items: CoSoYTeAutoDataSourceDto[] | undefined;\r\n}\r\n\r\nexport class CoSoYTeDaCoDaiLyAutoDataSourceRequest implements ICoSoYTeDaCoDaiLyAutoDataSourceRequest {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ICoSoYTeDaCoDaiLyAutoDataSourceRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CoSoYTeDaCoDaiLyAutoDataSourceRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CoSoYTeDaCoDaiLyAutoDataSourceRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICoSoYTeDaCoDaiLyAutoDataSourceRequest {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class ComboBoxDto implements IComboBoxDto {\r\n  value!: string | undefined;\r\n  displayText!: string | undefined;\r\n  data!: any | undefined;\r\n  isActive!: boolean;\r\n\r\n  constructor(data?: IComboBoxDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n    if (!data) {\r\n      this.isActive = true;\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.value = data['value'];\r\n      this.displayText = data['displayText'];\r\n      this.data = data['data'];\r\n      this.isActive = data['isActive'] !== undefined ? data['isActive'] : true;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ComboBoxDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ComboBoxDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['value'] = this.value;\r\n    data['displayText'] = this.displayText;\r\n    data['data'] = this.data;\r\n    data['isActive'] = this.isActive;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IComboBoxDto {\r\n  value: string | undefined;\r\n  displayText: string | undefined;\r\n  data: any | undefined;\r\n  isActive: boolean;\r\n}\r\n\r\nexport class DichVuSoKhamOutputDto implements IDichVuSoKhamOutputDto {\r\n  dichVuId!: number;\r\n  tenDichVu!: string | undefined;\r\n  maDichVu!: string | undefined;\r\n  isChecked!: boolean;\r\n  soKhamId!: number;\r\n  id!: number;\r\n\r\n  constructor(data?: IDichVuSoKhamOutputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.dichVuId = data['dichVuId'];\r\n      this.tenDichVu = data['tenDichVu'];\r\n      this.maDichVu = data['maDichVu'];\r\n      this.isChecked = data['isChecked'];\r\n      this.soKhamId = data['soKhamId'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DichVuSoKhamOutputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DichVuSoKhamOutputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['dichVuId'] = this.dichVuId;\r\n    data['tenDichVu'] = this.tenDichVu;\r\n    data['maDichVu'] = this.maDichVu;\r\n    data['isChecked'] = this.isChecked;\r\n    data['soKhamId'] = this.soKhamId;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDichVuSoKhamOutputDto {\r\n  dichVuId: number;\r\n  tenDichVu: string | undefined;\r\n  maDichVu: string | undefined;\r\n  isChecked: boolean;\r\n  soKhamId: number;\r\n  id: number;\r\n}\r\n\r\nexport class PagedRequestDichVuSoKhamDto implements IPagedRequestDichVuSoKhamDto {\r\n  nhomDichVuId!: number | undefined;\r\n  soKhamId!: number;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedRequestDichVuSoKhamDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nhomDichVuId = data['nhomDichVuId'];\r\n      this.soKhamId = data['soKhamId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedRequestDichVuSoKhamDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedRequestDichVuSoKhamDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nhomDichVuId'] = this.nhomDichVuId;\r\n    data['soKhamId'] = this.soKhamId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedRequestDichVuSoKhamDto {\r\n  nhomDichVuId: number | undefined;\r\n  soKhamId: number;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDichVuSoKhamOutputDto implements IPagedResultDtoOfDichVuSoKhamOutputDto {\r\n  totalCount!: number;\r\n  items!: DichVuSoKhamOutputDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDichVuSoKhamOutputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DichVuSoKhamOutputDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDichVuSoKhamOutputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDichVuSoKhamOutputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDichVuSoKhamOutputDto {\r\n  totalCount: number;\r\n  items: DichVuSoKhamOutputDto[] | undefined;\r\n}\r\n\r\nexport class DichVuSoKhamDto implements IDichVuSoKhamDto {\r\n  dichVuId!: number;\r\n  soKhamBenhId!: number;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IDichVuSoKhamDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.dichVuId = data['dichVuId'];\r\n      this.soKhamBenhId = data['soKhamBenhId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DichVuSoKhamDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DichVuSoKhamDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['dichVuId'] = this.dichVuId;\r\n    data['soKhamBenhId'] = this.soKhamBenhId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDichVuSoKhamDto {\r\n  dichVuId: number;\r\n  soKhamBenhId: number;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class KhoDoiTuongDto implements IKhoDoiTuongDto {\r\n  khoId!: number;\r\n  listDoiTuongId!: number[] | undefined;\r\n\r\n  constructor(data?: IKhoDoiTuongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.khoId = data['khoId'];\r\n      if (Array.isArray(data['listDoiTuongId'])) {\r\n        this.listDoiTuongId = [] as any;\r\n        for (let item of data['listDoiTuongId'])\r\n          this.listDoiTuongId!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KhoDoiTuongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KhoDoiTuongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['khoId'] = this.khoId;\r\n    if (Array.isArray(this.listDoiTuongId)) {\r\n      data['listDoiTuongId'] = [];\r\n      for (let item of this.listDoiTuongId)\r\n        data['listDoiTuongId'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKhoDoiTuongDto {\r\n  khoId: number;\r\n  listDoiTuongId: number[] | undefined;\r\n}\r\n\r\nexport class DichVuPagedRequestDto implements IDichVuPagedRequestDto {\r\n  isExportDefault!: boolean | undefined;\r\n  lv!: number | undefined;\r\n  type!: string | undefined;\r\n  loaiNhomId!: number | undefined;\r\n  isDichVuDungChung!: number | undefined;\r\n  hieuLucTuNgay!: string | undefined;\r\n  hieuLucToiNgay!: string | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IDichVuPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isExportDefault = data['isExportDefault'];\r\n      this.lv = data['lv'];\r\n      this.type = data['type'];\r\n      this.loaiNhomId = data['loaiNhomId'];\r\n      this.isDichVuDungChung = data['isDichVuDungChung'];\r\n      this.hieuLucTuNgay = data['hieuLucTuNgay'];\r\n      this.hieuLucToiNgay = data['hieuLucToiNgay'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DichVuPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DichVuPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isExportDefault'] = this.isExportDefault;\r\n    data['lv'] = this.lv;\r\n    data['type'] = this.type;\r\n    data['loaiNhomId'] = this.loaiNhomId;\r\n    data['isDichVuDungChung'] = this.isDichVuDungChung;\r\n    data['hieuLucTuNgay'] = this.hieuLucTuNgay;\r\n    data['hieuLucToiNgay'] = this.hieuLucToiNgay;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDichVuPagedRequestDto {\r\n  isExportDefault: boolean | undefined;\r\n  lv: number | undefined;\r\n  type: string | undefined;\r\n  loaiNhomId: number | undefined;\r\n  isDichVuDungChung: number | undefined;\r\n  hieuLucTuNgay: string | undefined;\r\n  hieuLucToiNgay: string | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class DichVuDto implements IDichVuDto {\r\n  stt!: number;\r\n  nhomDichVuId!: number;\r\n  loaiDichVuId!: number;\r\n  dichVuDonGiaId!: number;\r\n  ma!: string | undefined;\r\n  maDvkt!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenDvkt!: string | undefined;\r\n  tenEn!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  cap!: number | undefined;\r\n  parentId!: number | undefined;\r\n  donViTinh!: string | undefined;\r\n  sttDmByt!: string | undefined;\r\n  sttPheDuyet!: string | undefined;\r\n  maTT37!: string | undefined;\r\n  maDmdc!: string | undefined;\r\n  dmdcDichVuId!: number | undefined;\r\n  tyLeThanhToanBHYT!: number | undefined;\r\n  goi!: boolean | undefined;\r\n  coGiaDichVu!: boolean | undefined;\r\n  coGiaTriChuan!: boolean | undefined;\r\n  tenNhomDichVu!: string | undefined;\r\n  tenLoaiDichVu!: string | undefined;\r\n  benhVienId!: number;\r\n  counter!: number;\r\n  donGiaBHYT!: number | undefined;\r\n  donGiaQuanNhan!: number | undefined;\r\n  maGia!: string | undefined;\r\n  donGiaBenhVien!: number | undefined;\r\n  quyetDinh!: string | undefined;\r\n  congBo!: string | undefined;\r\n  maCoSoKCB!: string | undefined;\r\n  isActive!: boolean;\r\n  tamNgung!: number;\r\n  isExists!: boolean;\r\n  isDeleted!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IDichVuDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.stt = data['stt'];\r\n      this.nhomDichVuId = data['nhomDichVuId'];\r\n      this.loaiDichVuId = data['loaiDichVuId'];\r\n      this.dichVuDonGiaId = data['dichVuDonGiaId'];\r\n      this.ma = data['ma'];\r\n      this.maDvkt = data['maDvkt'];\r\n      this.ten = data['ten'];\r\n      this.tenDvkt = data['tenDvkt'];\r\n      this.tenEn = data['tenEn'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.cap = data['cap'];\r\n      this.parentId = data['parentId'];\r\n      this.donViTinh = data['donViTinh'];\r\n      this.sttDmByt = data['sttDmByt'];\r\n      this.sttPheDuyet = data['sttPheDuyet'];\r\n      this.maTT37 = data['maTT37'];\r\n      this.maDmdc = data['maDmdc'];\r\n      this.dmdcDichVuId = data['dmdcDichVuId'];\r\n      this.tyLeThanhToanBHYT = data['tyLeThanhToanBHYT'];\r\n      this.goi = data['goi'];\r\n      this.coGiaDichVu = data['coGiaDichVu'];\r\n      this.coGiaTriChuan = data['coGiaTriChuan'];\r\n      this.tenNhomDichVu = data['tenNhomDichVu'];\r\n      this.tenLoaiDichVu = data['tenLoaiDichVu'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.counter = data['counter'];\r\n      this.donGiaBHYT = data['donGiaBHYT'];\r\n      this.donGiaQuanNhan = data['donGiaQuanNhan'];\r\n      this.maGia = data['maGia'];\r\n      this.donGiaBenhVien = data['donGiaBenhVien'];\r\n      this.quyetDinh = data['quyetDinh'];\r\n      this.congBo = data['congBo'];\r\n      this.maCoSoKCB = data['maCoSoKCB'];\r\n      this.isActive = data['isActive'];\r\n      this.tamNgung = data['tamNgung'];\r\n      this.isExists = data['isExists'];\r\n      this.isDeleted = data['isDeleted'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DichVuDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DichVuDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['stt'] = this.stt;\r\n    data['nhomDichVuId'] = this.nhomDichVuId;\r\n    data['loaiDichVuId'] = this.loaiDichVuId;\r\n    data['dichVuDonGiaId'] = this.dichVuDonGiaId;\r\n    data['ma'] = this.ma;\r\n    data['maDvkt'] = this.maDvkt;\r\n    data['ten'] = this.ten;\r\n    data['tenDvkt'] = this.tenDvkt;\r\n    data['tenEn'] = this.tenEn;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['cap'] = this.cap;\r\n    data['parentId'] = this.parentId;\r\n    data['donViTinh'] = this.donViTinh;\r\n    data['sttDmByt'] = this.sttDmByt;\r\n    data['sttPheDuyet'] = this.sttPheDuyet;\r\n    data['maTT37'] = this.maTT37;\r\n    data['maDmdc'] = this.maDmdc;\r\n    data['dmdcDichVuId'] = this.dmdcDichVuId;\r\n    data['tyLeThanhToanBHYT'] = this.tyLeThanhToanBHYT;\r\n    data['goi'] = this.goi;\r\n    data['coGiaDichVu'] = this.coGiaDichVu;\r\n    data['coGiaTriChuan'] = this.coGiaTriChuan;\r\n    data['tenNhomDichVu'] = this.tenNhomDichVu;\r\n    data['tenLoaiDichVu'] = this.tenLoaiDichVu;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['counter'] = this.counter;\r\n    data['donGiaBHYT'] = this.donGiaBHYT;\r\n    data['donGiaQuanNhan'] = this.donGiaQuanNhan;\r\n    data['maGia'] = this.maGia;\r\n    data['donGiaBenhVien'] = this.donGiaBenhVien;\r\n    data['quyetDinh'] = this.quyetDinh;\r\n    data['congBo'] = this.congBo;\r\n    data['maCoSoKCB'] = this.maCoSoKCB;\r\n    data['isActive'] = this.isActive;\r\n    data['tamNgung'] = this.tamNgung;\r\n    data['isExists'] = this.isExists;\r\n    data['isDeleted'] = this.isDeleted;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDichVuDto {\r\n  stt: number;\r\n  nhomDichVuId: number;\r\n  loaiDichVuId: number;\r\n  dichVuDonGiaId: number;\r\n  ma: string | undefined;\r\n  maDvkt: string | undefined;\r\n  ten: string | undefined;\r\n  tenDvkt: string | undefined;\r\n  tenEn: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  cap: number | undefined;\r\n  parentId: number | undefined;\r\n  donViTinh: string | undefined;\r\n  sttDmByt: string | undefined;\r\n  sttPheDuyet: string | undefined;\r\n  maTT37: string | undefined;\r\n  maDmdc: string | undefined;\r\n  dmdcDichVuId: number | undefined;\r\n  tyLeThanhToanBHYT: number | undefined;\r\n  goi: boolean | undefined;\r\n  coGiaDichVu: boolean | undefined;\r\n  coGiaTriChuan: boolean | undefined;\r\n  tenNhomDichVu: string | undefined;\r\n  tenLoaiDichVu: string | undefined;\r\n  benhVienId: number;\r\n  counter: number;\r\n  donGiaBHYT: number | undefined;\r\n  donGiaQuanNhan: number | undefined;\r\n  maGia: string | undefined;\r\n  donGiaBenhVien: number | undefined;\r\n  quyetDinh: string | undefined;\r\n  congBo: string | undefined;\r\n  maCoSoKCB: string | undefined;\r\n  isActive: boolean;\r\n  tamNgung: number;\r\n  isExists: boolean;\r\n  isDeleted: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDichVuDto implements IPagedResultDtoOfDichVuDto {\r\n  totalCount!: number;\r\n  items!: DichVuDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDichVuDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DichVuDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDichVuDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDichVuDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDichVuDto {\r\n  totalCount: number;\r\n  items: DichVuDto[] | undefined;\r\n}\r\n\r\nexport class DichVuDonGiaRequestDto implements IDichVuDonGiaRequestDto {\r\n  id!: number;\r\n  benhVienId!: number;\r\n  donGiaBHYT!: number;\r\n  donGiaQuanNhan!: number;\r\n  donGiaBenhVien!: number;\r\n\r\n  constructor(data?: IDichVuDonGiaRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.donGiaBHYT = data['donGiaBHYT'];\r\n      this.donGiaQuanNhan = data['donGiaQuanNhan'];\r\n      this.donGiaBenhVien = data['donGiaBenhVien'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DichVuDonGiaRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DichVuDonGiaRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['donGiaBHYT'] = this.donGiaBHYT;\r\n    data['donGiaQuanNhan'] = this.donGiaQuanNhan;\r\n    data['donGiaBenhVien'] = this.donGiaBenhVien;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDichVuDonGiaRequestDto {\r\n  id: number;\r\n  benhVienId: number;\r\n  donGiaBHYT: number;\r\n  donGiaQuanNhan: number;\r\n  donGiaBenhVien: number;\r\n}\r\n\r\nexport class ListDichVuDonGiaRequestDto implements IListDichVuDonGiaRequestDto {\r\n  input!: DichVuDonGiaRequestDto[] | undefined;\r\n  isExportDefault!: boolean | undefined;\r\n  lv!: number | undefined;\r\n  type!: string | undefined;\r\n  loaiNhomId!: number | undefined;\r\n  isDichVuDungChung!: number | undefined;\r\n  hieuLucTuNgay!: string | undefined;\r\n  hieuLucToiNgay!: string | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IListDichVuDonGiaRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (Array.isArray(data['input'])) {\r\n        this.input = [] as any;\r\n        for (let item of data['input'])\r\n          this.input!.push(DichVuDonGiaRequestDto.fromJS(item));\r\n      }\r\n      this.isExportDefault = data['isExportDefault'];\r\n      this.lv = data['lv'];\r\n      this.type = data['type'];\r\n      this.loaiNhomId = data['loaiNhomId'];\r\n      this.isDichVuDungChung = data['isDichVuDungChung'];\r\n      this.hieuLucTuNgay = data['hieuLucTuNgay'];\r\n      this.hieuLucToiNgay = data['hieuLucToiNgay'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ListDichVuDonGiaRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ListDichVuDonGiaRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (Array.isArray(this.input)) {\r\n      data['input'] = [];\r\n      for (let item of this.input)\r\n        data['input'].push(item.toJSON());\r\n    }\r\n    data['isExportDefault'] = this.isExportDefault;\r\n    data['lv'] = this.lv;\r\n    data['type'] = this.type;\r\n    data['loaiNhomId'] = this.loaiNhomId;\r\n    data['isDichVuDungChung'] = this.isDichVuDungChung;\r\n    data['hieuLucTuNgay'] = this.hieuLucTuNgay;\r\n    data['hieuLucToiNgay'] = this.hieuLucToiNgay;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IListDichVuDonGiaRequestDto {\r\n  input: DichVuDonGiaRequestDto[] | undefined;\r\n  isExportDefault: boolean | undefined;\r\n  lv: number | undefined;\r\n  type: string | undefined;\r\n  loaiNhomId: number | undefined;\r\n  isDichVuDungChung: number | undefined;\r\n  hieuLucTuNgay: string | undefined;\r\n  hieuLucToiNgay: string | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class ItemExistsPagedResultDtoOfDichVuDto implements IItemExistsPagedResultDtoOfDichVuDto {\r\n  isExists!: boolean;\r\n  isSuccess!: boolean;\r\n  totalCount!: number;\r\n  items!: DichVuDto[] | undefined;\r\n\r\n  constructor(data?: IItemExistsPagedResultDtoOfDichVuDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isExists = data['isExists'];\r\n      this.isSuccess = data['isSuccess'];\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DichVuDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ItemExistsPagedResultDtoOfDichVuDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ItemExistsPagedResultDtoOfDichVuDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isExists'] = this.isExists;\r\n    data['isSuccess'] = this.isSuccess;\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IItemExistsPagedResultDtoOfDichVuDto {\r\n  isExists: boolean;\r\n  isSuccess: boolean;\r\n  totalCount: number;\r\n  items: DichVuDto[] | undefined;\r\n}\r\n\r\nexport class UpdateEffectiveDateRequestDto implements IUpdateEffectiveDateRequestDto {\r\n  hieuLucTuNgay!: string | undefined;\r\n  hieuLucToiNgay!: string | undefined;\r\n  hieuLucTuNgayOld!: string | undefined;\r\n  hieuLucToiNgayOld!: string | undefined;\r\n\r\n  constructor(data?: IUpdateEffectiveDateRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.hieuLucTuNgay = data['hieuLucTuNgay'];\r\n      this.hieuLucToiNgay = data['hieuLucToiNgay'];\r\n      this.hieuLucTuNgayOld = data['hieuLucTuNgayOld'];\r\n      this.hieuLucToiNgayOld = data['hieuLucToiNgayOld'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): UpdateEffectiveDateRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new UpdateEffectiveDateRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['hieuLucTuNgay'] = this.hieuLucTuNgay;\r\n    data['hieuLucToiNgay'] = this.hieuLucToiNgay;\r\n    data['hieuLucTuNgayOld'] = this.hieuLucTuNgayOld;\r\n    data['hieuLucToiNgayOld'] = this.hieuLucToiNgayOld;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IUpdateEffectiveDateRequestDto {\r\n  hieuLucTuNgay: string | undefined;\r\n  hieuLucToiNgay: string | undefined;\r\n  hieuLucTuNgayOld: string | undefined;\r\n  hieuLucToiNgayOld: string | undefined;\r\n}\r\n\r\nexport class DichVuRequestDto implements IDichVuRequestDto {\r\n  ten!: string | undefined;\r\n  ma!: string | undefined;\r\n  donGiaBenhVien!: number | undefined;\r\n  donGiaBHYT!: number | undefined;\r\n  donGiaQuanNhan!: number | undefined;\r\n  phuThu!: number;\r\n  trangThai!: number;\r\n  id!: number;\r\n\r\n  constructor(data?: IDichVuRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ten = data['ten'];\r\n      this.ma = data['ma'];\r\n      this.donGiaBenhVien = data['donGiaBenhVien'];\r\n      this.donGiaBHYT = data['donGiaBHYT'];\r\n      this.donGiaQuanNhan = data['donGiaQuanNhan'];\r\n      this.phuThu = data['phuThu'];\r\n      this.trangThai = data['trangThai'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DichVuRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DichVuRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ten'] = this.ten;\r\n    data['ma'] = this.ma;\r\n    data['donGiaBenhVien'] = this.donGiaBenhVien;\r\n    data['donGiaBHYT'] = this.donGiaBHYT;\r\n    data['donGiaQuanNhan'] = this.donGiaQuanNhan;\r\n    data['phuThu'] = this.phuThu;\r\n    data['trangThai'] = this.trangThai;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDichVuRequestDto {\r\n  ten: string | undefined;\r\n  ma: string | undefined;\r\n  donGiaBenhVien: number | undefined;\r\n  donGiaBHYT: number | undefined;\r\n  donGiaQuanNhan: number | undefined;\r\n  phuThu: number;\r\n  trangThai: number;\r\n  id: number;\r\n}\r\n\r\nexport class ImportDichVuRequestDto implements IImportDichVuRequestDto {\r\n  items!: DichVuRequestDto[] | undefined;\r\n  loaiDichVuId!: number | undefined;\r\n  nhomDichVuId!: number | undefined;\r\n\r\n  constructor(data?: IImportDichVuRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DichVuRequestDto.fromJS(item));\r\n      }\r\n      this.loaiDichVuId = data['loaiDichVuId'];\r\n      this.nhomDichVuId = data['nhomDichVuId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ImportDichVuRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ImportDichVuRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    data['loaiDichVuId'] = this.loaiDichVuId;\r\n    data['nhomDichVuId'] = this.nhomDichVuId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IImportDichVuRequestDto {\r\n  items: DichVuRequestDto[] | undefined;\r\n  loaiDichVuId: number | undefined;\r\n  nhomDichVuId: number | undefined;\r\n}\r\n\r\nexport class ImportDichVuResultDto implements IImportDichVuResultDto {\r\n  ma!: string | undefined;\r\n\r\n  constructor(data?: IImportDichVuResultDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ImportDichVuResultDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ImportDichVuResultDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IImportDichVuResultDto {\r\n  ma: string | undefined;\r\n}\r\n\r\nexport class FileDto implements IFileDto {\r\n  fileName!: string;\r\n  fileType!: string | undefined;\r\n  fileToken!: string;\r\n  fileBytes!: string | undefined;\r\n  fileBase64!: string | undefined;\r\n\r\n  constructor(data?: IFileDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.fileName = data['fileName'];\r\n      this.fileType = data['fileType'];\r\n      this.fileToken = data['fileToken'];\r\n      this.fileBytes = data['fileBytes'];\r\n      this.fileBase64 = data['fileBase64'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): FileDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new FileDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['fileName'] = this.fileName;\r\n    data['fileType'] = this.fileType;\r\n    data['fileToken'] = this.fileToken;\r\n    data['fileBytes'] = this.fileBytes;\r\n    data['fileBase64'] = this.fileBase64;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IFileDto {\r\n  fileName: string;\r\n  fileType: string | undefined;\r\n  fileToken: string;\r\n  fileBytes: string | undefined;\r\n  fileBase64: string | undefined;\r\n}\r\n\r\nexport class CauHinhHeThongDto implements ICauHinhHeThongDto {\r\n  loaiTaiKhoan!: string | undefined;\r\n  strLoaiTaiKhoan!: string | undefined;\r\n  settingId!: string | undefined;\r\n  url!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ICauHinhHeThongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiTaiKhoan = data['loaiTaiKhoan'];\r\n      this.strLoaiTaiKhoan = data['strLoaiTaiKhoan'];\r\n      this.settingId = data['settingId'];\r\n      this.url = data['url'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CauHinhHeThongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CauHinhHeThongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiTaiKhoan'] = this.loaiTaiKhoan;\r\n    data['strLoaiTaiKhoan'] = this.strLoaiTaiKhoan;\r\n    data['settingId'] = this.settingId;\r\n    data['url'] = this.url;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICauHinhHeThongDto {\r\n  loaiTaiKhoan: string | undefined;\r\n  strLoaiTaiKhoan: string | undefined;\r\n  settingId: string | undefined;\r\n  url: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedFullRequestDto implements IPagedFullRequestDto {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedFullRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedFullRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedFullRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedFullRequestDto {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfCauHinhHeThongDto implements IPagedResultDtoOfCauHinhHeThongDto {\r\n  totalCount!: number;\r\n  items!: CauHinhHeThongDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfCauHinhHeThongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(CauHinhHeThongDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfCauHinhHeThongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfCauHinhHeThongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfCauHinhHeThongDto {\r\n  totalCount: number;\r\n  items: CauHinhHeThongDto[] | undefined;\r\n}\r\n\r\nexport class PhongBanDichVuOutputDto implements IPhongBanDichVuOutputDto {\r\n  dichVuId!: number;\r\n  phongBanId!: number;\r\n  benhVienId!: number;\r\n  tenDichVu!: string | undefined;\r\n  maDichVu!: string | undefined;\r\n  isChecked!: boolean;\r\n  pbdvId!: number;\r\n  id!: number;\r\n\r\n  constructor(data?: IPhongBanDichVuOutputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.dichVuId = data['dichVuId'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.tenDichVu = data['tenDichVu'];\r\n      this.maDichVu = data['maDichVu'];\r\n      this.isChecked = data['isChecked'];\r\n      this.pbdvId = data['pbdvId'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PhongBanDichVuOutputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PhongBanDichVuOutputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['dichVuId'] = this.dichVuId;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['tenDichVu'] = this.tenDichVu;\r\n    data['maDichVu'] = this.maDichVu;\r\n    data['isChecked'] = this.isChecked;\r\n    data['pbdvId'] = this.pbdvId;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPhongBanDichVuOutputDto {\r\n  dichVuId: number;\r\n  phongBanId: number;\r\n  benhVienId: number;\r\n  tenDichVu: string | undefined;\r\n  maDichVu: string | undefined;\r\n  isChecked: boolean;\r\n  pbdvId: number;\r\n  id: number;\r\n}\r\n\r\nexport class PagedRequestPhongBanDichVuDto implements IPagedRequestPhongBanDichVuDto {\r\n  nhomDichVuId!: number | undefined;\r\n  phongBanId!: number;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedRequestPhongBanDichVuDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nhomDichVuId = data['nhomDichVuId'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedRequestPhongBanDichVuDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedRequestPhongBanDichVuDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nhomDichVuId'] = this.nhomDichVuId;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedRequestPhongBanDichVuDto {\r\n  nhomDichVuId: number | undefined;\r\n  phongBanId: number;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfPhongBanDichVuOutputDto implements IPagedResultDtoOfPhongBanDichVuOutputDto {\r\n  totalCount!: number;\r\n  items!: PhongBanDichVuOutputDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfPhongBanDichVuOutputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(PhongBanDichVuOutputDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfPhongBanDichVuOutputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfPhongBanDichVuOutputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfPhongBanDichVuOutputDto {\r\n  totalCount: number;\r\n  items: PhongBanDichVuOutputDto[] | undefined;\r\n}\r\n\r\nexport class PhongBanDichVuDto implements IPhongBanDichVuDto {\r\n  dichVuId!: number;\r\n  phongBanId!: number;\r\n  benhVienId!: number;\r\n  id!: number;\r\n\r\n  constructor(data?: IPhongBanDichVuDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.dichVuId = data['dichVuId'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PhongBanDichVuDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PhongBanDichVuDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['dichVuId'] = this.dichVuId;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPhongBanDichVuDto {\r\n  dichVuId: number;\r\n  phongBanId: number;\r\n  benhVienId: number;\r\n  id: number;\r\n}\r\n\r\nexport class CauHinhTaiKhoanLienThongDto implements ICauHinhTaiKhoanLienThongDto {\r\n  loaiTaiKhoan!: string | undefined;\r\n  tenDangNhap!: string | undefined;\r\n  matKhauMaHoa!: string | undefined;\r\n  benhVienId!: number;\r\n  settingId!: string | undefined;\r\n  url!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ICauHinhTaiKhoanLienThongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiTaiKhoan = data['loaiTaiKhoan'];\r\n      this.tenDangNhap = data['tenDangNhap'];\r\n      this.matKhauMaHoa = data['matKhauMaHoa'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.settingId = data['settingId'];\r\n      this.url = data['url'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CauHinhTaiKhoanLienThongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CauHinhTaiKhoanLienThongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiTaiKhoan'] = this.loaiTaiKhoan;\r\n    data['tenDangNhap'] = this.tenDangNhap;\r\n    data['matKhauMaHoa'] = this.matKhauMaHoa;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['settingId'] = this.settingId;\r\n    data['url'] = this.url;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICauHinhTaiKhoanLienThongDto {\r\n  loaiTaiKhoan: string | undefined;\r\n  tenDangNhap: string | undefined;\r\n  matKhauMaHoa: string | undefined;\r\n  benhVienId: number;\r\n  settingId: string | undefined;\r\n  url: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfCauHinhTaiKhoanLienThongDto implements IPagedResultDtoOfCauHinhTaiKhoanLienThongDto {\r\n  totalCount!: number;\r\n  items!: CauHinhTaiKhoanLienThongDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfCauHinhTaiKhoanLienThongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(CauHinhTaiKhoanLienThongDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfCauHinhTaiKhoanLienThongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfCauHinhTaiKhoanLienThongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfCauHinhTaiKhoanLienThongDto {\r\n  totalCount: number;\r\n  items: CauHinhTaiKhoanLienThongDto[] | undefined;\r\n}\r\n\r\nexport class ChuongTrinhDto implements IChuongTrinhDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IChuongTrinhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ChuongTrinhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ChuongTrinhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IChuongTrinhDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfChuongTrinhDto implements IPagedResultDtoOfChuongTrinhDto {\r\n  totalCount!: number;\r\n  items!: ChuongTrinhDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfChuongTrinhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(ChuongTrinhDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfChuongTrinhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfChuongTrinhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfChuongTrinhDto {\r\n  totalCount: number;\r\n  items: ChuongTrinhDto[] | undefined;\r\n}\r\n\r\nexport class GetComboDataFromDataBaseInputDto implements IGetComboDataFromDataBaseInputDto {\r\n  tableName!: string | undefined;\r\n  cascaderId!: number | undefined;\r\n  cascaderMa!: string | undefined;\r\n  benhVienId!: number;\r\n\r\n  constructor(data?: IGetComboDataFromDataBaseInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.tableName = data['tableName'];\r\n      this.cascaderId = data['cascaderId'];\r\n      this.cascaderMa = data['cascaderMa'];\r\n      this.benhVienId = data['benhVienId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GetComboDataFromDataBaseInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GetComboDataFromDataBaseInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['tableName'] = this.tableName;\r\n    data['cascaderId'] = this.cascaderId;\r\n    data['cascaderMa'] = this.cascaderMa;\r\n    data['benhVienId'] = this.benhVienId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGetComboDataFromDataBaseInputDto {\r\n  tableName: string | undefined;\r\n  cascaderId: number | undefined;\r\n  cascaderMa: string | undefined;\r\n  benhVienId: number;\r\n}\r\n\r\nexport class ChildrenDataDto implements IChildrenDataDto {\r\n  id!: number;\r\n  ma!: string | undefined;\r\n  title!: string | undefined;\r\n  readonly isLeaf!: boolean;\r\n\r\n  constructor(data?: IChildrenDataDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.ma = data['ma'];\r\n      this.title = data['title'];\r\n      (<any>this).isLeaf = data['isLeaf'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ChildrenDataDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ChildrenDataDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['ma'] = this.ma;\r\n    data['title'] = this.title;\r\n    data['isLeaf'] = this.isLeaf;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IChildrenDataDto {\r\n  id: number;\r\n  ma: string | undefined;\r\n  title: string | undefined;\r\n  isLeaf: boolean;\r\n}\r\n\r\nexport class DoiTuongTreeDto implements IDoiTuongTreeDto {\r\n  nhomDoiTuongId!: number;\r\n  title!: string | undefined;\r\n  readonly isExpanded!: boolean;\r\n  children!: ChildrenDataDto[] | undefined;\r\n\r\n  constructor(data?: IDoiTuongTreeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nhomDoiTuongId = data['nhomDoiTuongId'];\r\n      this.title = data['title'];\r\n      (<any>this).isExpanded = data['isExpanded'];\r\n      if (Array.isArray(data['children'])) {\r\n        this.children = [] as any;\r\n        for (let item of data['children'])\r\n          this.children!.push(ChildrenDataDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiTuongTreeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiTuongTreeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nhomDoiTuongId'] = this.nhomDoiTuongId;\r\n    data['title'] = this.title;\r\n    data['isExpanded'] = this.isExpanded;\r\n    if (Array.isArray(this.children)) {\r\n      data['children'] = [];\r\n      for (let item of this.children)\r\n        data['children'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiTuongTreeDto {\r\n  nhomDoiTuongId: number;\r\n  title: string | undefined;\r\n  isExpanded: boolean;\r\n  children: ChildrenDataDto[] | undefined;\r\n}\r\n\r\nexport class DoiTuongDto implements IDoiTuongDto {\r\n  nhomDoiTuongId!: number;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenEn!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  ngayHieuLuc!: moment.Moment | undefined;\r\n  ngayHetHieuLuc!: moment.Moment | undefined;\r\n  tyLeGiam!: number | undefined;\r\n  gioiHan1!: number | undefined;\r\n  tyLe1!: number | undefined;\r\n  gioiHan2!: number | undefined;\r\n  tyLe2!: number | undefined;\r\n  gioiHan3!: number | undefined;\r\n  tyLe3!: number | undefined;\r\n  gioiHan4!: number | undefined;\r\n  tyLe4!: number | undefined;\r\n  gioiHan5!: number | undefined;\r\n  tyLe5!: number | undefined;\r\n  ghiChu!: string | undefined;\r\n  hangBenhVien!: number | undefined;\r\n  maQuyenLoiBHYT!: number | undefined;\r\n  gioiHan1Cu!: number | undefined;\r\n  gioiHan2Cu!: number | undefined;\r\n  isExists!: boolean;\r\n  tenNhomDoiTuong!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IDoiTuongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nhomDoiTuongId = data['nhomDoiTuongId'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenEn = data['tenEn'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.ngayHieuLuc = data['ngayHieuLuc'] ? moment(data['ngayHieuLuc'].toString()) : <any>undefined;\r\n      this.ngayHetHieuLuc = data['ngayHetHieuLuc'] ? moment(data['ngayHetHieuLuc'].toString()) : <any>undefined;\r\n      this.tyLeGiam = data['tyLeGiam'];\r\n      this.gioiHan1 = data['gioiHan1'];\r\n      this.tyLe1 = data['tyLe1'];\r\n      this.gioiHan2 = data['gioiHan2'];\r\n      this.tyLe2 = data['tyLe2'];\r\n      this.gioiHan3 = data['gioiHan3'];\r\n      this.tyLe3 = data['tyLe3'];\r\n      this.gioiHan4 = data['gioiHan4'];\r\n      this.tyLe4 = data['tyLe4'];\r\n      this.gioiHan5 = data['gioiHan5'];\r\n      this.tyLe5 = data['tyLe5'];\r\n      this.ghiChu = data['ghiChu'];\r\n      this.hangBenhVien = data['hangBenhVien'];\r\n      this.maQuyenLoiBHYT = data['maQuyenLoiBHYT'];\r\n      this.gioiHan1Cu = data['gioiHan1Cu'];\r\n      this.gioiHan2Cu = data['gioiHan2Cu'];\r\n      this.isExists = data['isExists'];\r\n      this.tenNhomDoiTuong = data['tenNhomDoiTuong'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiTuongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiTuongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nhomDoiTuongId'] = this.nhomDoiTuongId;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenEn'] = this.tenEn;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['ngayHieuLuc'] = this.ngayHieuLuc ? this.ngayHieuLuc.toISOString() : <any>undefined;\r\n    data['ngayHetHieuLuc'] = this.ngayHetHieuLuc ? this.ngayHetHieuLuc.toISOString() : <any>undefined;\r\n    data['tyLeGiam'] = this.tyLeGiam;\r\n    data['gioiHan1'] = this.gioiHan1;\r\n    data['tyLe1'] = this.tyLe1;\r\n    data['gioiHan2'] = this.gioiHan2;\r\n    data['tyLe2'] = this.tyLe2;\r\n    data['gioiHan3'] = this.gioiHan3;\r\n    data['tyLe3'] = this.tyLe3;\r\n    data['gioiHan4'] = this.gioiHan4;\r\n    data['tyLe4'] = this.tyLe4;\r\n    data['gioiHan5'] = this.gioiHan5;\r\n    data['tyLe5'] = this.tyLe5;\r\n    data['ghiChu'] = this.ghiChu;\r\n    data['hangBenhVien'] = this.hangBenhVien;\r\n    data['maQuyenLoiBHYT'] = this.maQuyenLoiBHYT;\r\n    data['gioiHan1Cu'] = this.gioiHan1Cu;\r\n    data['gioiHan2Cu'] = this.gioiHan2Cu;\r\n    data['isExists'] = this.isExists;\r\n    data['tenNhomDoiTuong'] = this.tenNhomDoiTuong;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiTuongDto {\r\n  nhomDoiTuongId: number;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenEn: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  ngayHieuLuc: moment.Moment | undefined;\r\n  ngayHetHieuLuc: moment.Moment | undefined;\r\n  tyLeGiam: number | undefined;\r\n  gioiHan1: number | undefined;\r\n  tyLe1: number | undefined;\r\n  gioiHan2: number | undefined;\r\n  tyLe2: number | undefined;\r\n  gioiHan3: number | undefined;\r\n  tyLe3: number | undefined;\r\n  gioiHan4: number | undefined;\r\n  tyLe4: number | undefined;\r\n  gioiHan5: number | undefined;\r\n  tyLe5: number | undefined;\r\n  ghiChu: string | undefined;\r\n  hangBenhVien: number | undefined;\r\n  maQuyenLoiBHYT: number | undefined;\r\n  gioiHan1Cu: number | undefined;\r\n  gioiHan2Cu: number | undefined;\r\n  isExists: boolean;\r\n  tenNhomDoiTuong: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class DoiTuongPagedRequest implements IDoiTuongPagedRequest {\r\n  nhomDoiTuongId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IDoiTuongPagedRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nhomDoiTuongId = data['nhomDoiTuongId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiTuongPagedRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiTuongPagedRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nhomDoiTuongId'] = this.nhomDoiTuongId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiTuongPagedRequest {\r\n  nhomDoiTuongId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDoiTuongDto implements IPagedResultDtoOfDoiTuongDto {\r\n  totalCount!: number;\r\n  items!: DoiTuongDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDoiTuongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DoiTuongDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDoiTuongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDoiTuongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDoiTuongDto {\r\n  totalCount: number;\r\n  items: DoiTuongDto[] | undefined;\r\n}\r\n\r\nexport class DoiTuongNoiTruInput implements IDoiTuongNoiTruInput {\r\n  doiTuongId!: number | undefined;\r\n  filter!: string | undefined;\r\n  loaiKhoId!: number | undefined;\r\n\r\n  constructor(data?: IDoiTuongNoiTruInput) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doiTuongId = data['doiTuongId'];\r\n      this.filter = data['filter'];\r\n      this.loaiKhoId = data['loaiKhoId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiTuongNoiTruInput {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiTuongNoiTruInput();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doiTuongId'] = this.doiTuongId;\r\n    data['filter'] = this.filter;\r\n    data['loaiKhoId'] = this.loaiKhoId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiTuongNoiTruInput {\r\n  doiTuongId: number | undefined;\r\n  filter: string | undefined;\r\n  loaiKhoId: number | undefined;\r\n}\r\n\r\nexport class KhoDuocDataTree implements IKhoDuocDataTree {\r\n  readonly expand!: boolean;\r\n  key!: number;\r\n  name!: string | undefined;\r\n  checked!: boolean;\r\n  ma!: string | undefined;\r\n  ngayTao!: moment.Moment;\r\n  isActive!: boolean;\r\n  doiTuongKhoDuocNoiTruId!: number;\r\n\r\n  constructor(data?: IKhoDuocDataTree) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      (<any>this).expand = data['expand'];\r\n      this.key = data['key'];\r\n      this.name = data['name'];\r\n      this.checked = data['checked'];\r\n      this.ma = data['ma'];\r\n      this.ngayTao = data['ngayTao'] ? moment(data['ngayTao'].toString()) : <any>undefined;\r\n      this.isActive = data['isActive'];\r\n      this.doiTuongKhoDuocNoiTruId = data['doiTuongKhoDuocNoiTruId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KhoDuocDataTree {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KhoDuocDataTree();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['expand'] = this.expand;\r\n    data['key'] = this.key;\r\n    data['name'] = this.name;\r\n    data['checked'] = this.checked;\r\n    data['ma'] = this.ma;\r\n    data['ngayTao'] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;\r\n    data['isActive'] = this.isActive;\r\n    data['doiTuongKhoDuocNoiTruId'] = this.doiTuongKhoDuocNoiTruId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKhoDuocDataTree {\r\n  expand: boolean;\r\n  key: number;\r\n  name: string | undefined;\r\n  checked: boolean;\r\n  ma: string | undefined;\r\n  ngayTao: moment.Moment;\r\n  isActive: boolean;\r\n  doiTuongKhoDuocNoiTruId: number;\r\n}\r\n\r\nexport class KhoDuocTreeDto implements IKhoDuocTreeDto {\r\n  name!: string | undefined;\r\n  key!: number;\r\n  readonly expand!: boolean;\r\n  readonly allChecked!: boolean;\r\n  children!: KhoDuocDataTree[] | undefined;\r\n\r\n  constructor(data?: IKhoDuocTreeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.name = data['name'];\r\n      this.key = data['key'];\r\n      (<any>this).expand = data['expand'];\r\n      (<any>this).allChecked = data['allChecked'];\r\n      if (Array.isArray(data['children'])) {\r\n        this.children = [] as any;\r\n        for (let item of data['children'])\r\n          this.children!.push(KhoDuocDataTree.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KhoDuocTreeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KhoDuocTreeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['key'] = this.key;\r\n    data['expand'] = this.expand;\r\n    data['allChecked'] = this.allChecked;\r\n    if (Array.isArray(this.children)) {\r\n      data['children'] = [];\r\n      for (let item of this.children)\r\n        data['children'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKhoDuocTreeDto {\r\n  name: string | undefined;\r\n  key: number;\r\n  expand: boolean;\r\n  allChecked: boolean;\r\n  children: KhoDuocDataTree[] | undefined;\r\n}\r\n\r\nexport class ListLoaiGiaIdDto implements IListLoaiGiaIdDto {\r\n  khoDuocId!: number;\r\n  checked!: boolean;\r\n  doiTuongKhoDuocNoiTruId!: number;\r\n\r\n  constructor(data?: IListLoaiGiaIdDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.khoDuocId = data['khoDuocId'];\r\n      this.checked = data['checked'];\r\n      this.doiTuongKhoDuocNoiTruId = data['doiTuongKhoDuocNoiTruId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ListLoaiGiaIdDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ListLoaiGiaIdDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['khoDuocId'] = this.khoDuocId;\r\n    data['checked'] = this.checked;\r\n    data['doiTuongKhoDuocNoiTruId'] = this.doiTuongKhoDuocNoiTruId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IListLoaiGiaIdDto {\r\n  khoDuocId: number;\r\n  checked: boolean;\r\n  doiTuongKhoDuocNoiTruId: number;\r\n}\r\n\r\nexport class ParamsCreateOrUpdateDoiTuongNoiTruDto implements IParamsCreateOrUpdateDoiTuongNoiTruDto {\r\n  doiTuongId!: number;\r\n  lstData!: ListLoaiGiaIdDto[] | undefined;\r\n\r\n  constructor(data?: IParamsCreateOrUpdateDoiTuongNoiTruDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doiTuongId = data['doiTuongId'];\r\n      if (Array.isArray(data['lstData'])) {\r\n        this.lstData = [] as any;\r\n        for (let item of data['lstData'])\r\n          this.lstData!.push(ListLoaiGiaIdDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ParamsCreateOrUpdateDoiTuongNoiTruDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ParamsCreateOrUpdateDoiTuongNoiTruDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doiTuongId'] = this.doiTuongId;\r\n    if (Array.isArray(this.lstData)) {\r\n      data['lstData'] = [];\r\n      for (let item of this.lstData)\r\n        data['lstData'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IParamsCreateOrUpdateDoiTuongNoiTruDto {\r\n  doiTuongId: number;\r\n  lstData: ListLoaiGiaIdDto[] | undefined;\r\n}\r\n\r\nexport class DoiTuongKhoDuocNoiTruPagedRequestDto implements IDoiTuongKhoDuocNoiTruPagedRequestDto {\r\n  doiTuongId!: number | undefined;\r\n  loaiGiaId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IDoiTuongKhoDuocNoiTruPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doiTuongId = data['doiTuongId'];\r\n      this.loaiGiaId = data['loaiGiaId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiTuongKhoDuocNoiTruPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiTuongKhoDuocNoiTruPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doiTuongId'] = this.doiTuongId;\r\n    data['loaiGiaId'] = this.loaiGiaId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiTuongKhoDuocNoiTruPagedRequestDto {\r\n  doiTuongId: number | undefined;\r\n  loaiGiaId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class DoiTuongKhoDuocNoiTruDto implements IDoiTuongKhoDuocNoiTruDto {\r\n  doiTuongId!: number;\r\n  khoDuocId!: number;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IDoiTuongKhoDuocNoiTruDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doiTuongId = data['doiTuongId'];\r\n      this.khoDuocId = data['khoDuocId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiTuongKhoDuocNoiTruDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiTuongKhoDuocNoiTruDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doiTuongId'] = this.doiTuongId;\r\n    data['khoDuocId'] = this.khoDuocId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiTuongKhoDuocNoiTruDto {\r\n  doiTuongId: number;\r\n  khoDuocId: number;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDoiTuongKhoDuocNoiTruDto implements IPagedResultDtoOfDoiTuongKhoDuocNoiTruDto {\r\n  totalCount!: number;\r\n  items!: DoiTuongKhoDuocNoiTruDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDoiTuongKhoDuocNoiTruDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DoiTuongKhoDuocNoiTruDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDoiTuongKhoDuocNoiTruDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDoiTuongKhoDuocNoiTruDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDoiTuongKhoDuocNoiTruDto {\r\n  totalCount: number;\r\n  items: DoiTuongKhoDuocNoiTruDto[] | undefined;\r\n}\r\n\r\nexport class Params implements IParams {\r\n  doiTuongId!: number | undefined;\r\n  filter!: string | undefined;\r\n  nhomGiaId!: number | undefined;\r\n\r\n  constructor(data?: IParams) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doiTuongId = data['doiTuongId'];\r\n      this.filter = data['filter'];\r\n      this.nhomGiaId = data['nhomGiaId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): Params {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new Params();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doiTuongId'] = this.doiTuongId;\r\n    data['filter'] = this.filter;\r\n    data['nhomGiaId'] = this.nhomGiaId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IParams {\r\n  doiTuongId: number | undefined;\r\n  filter: string | undefined;\r\n  nhomGiaId: number | undefined;\r\n}\r\n\r\nexport class DataTree implements IDataTree {\r\n  readonly expand!: boolean;\r\n  key!: number;\r\n  name!: string | undefined;\r\n  doUuTien!: number | undefined;\r\n  giaHoTro!: number | undefined;\r\n  checked!: boolean;\r\n  doiTuongLoaiGiaId!: number;\r\n\r\n  constructor(data?: IDataTree) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      (<any>this).expand = data['expand'];\r\n      this.key = data['key'];\r\n      this.name = data['name'];\r\n      this.doUuTien = data['doUuTien'];\r\n      this.giaHoTro = data['giaHoTro'];\r\n      this.checked = data['checked'];\r\n      this.doiTuongLoaiGiaId = data['doiTuongLoaiGiaId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DataTree {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DataTree();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['expand'] = this.expand;\r\n    data['key'] = this.key;\r\n    data['name'] = this.name;\r\n    data['doUuTien'] = this.doUuTien;\r\n    data['giaHoTro'] = this.giaHoTro;\r\n    data['checked'] = this.checked;\r\n    data['doiTuongLoaiGiaId'] = this.doiTuongLoaiGiaId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDataTree {\r\n  expand: boolean;\r\n  key: number;\r\n  name: string | undefined;\r\n  doUuTien: number | undefined;\r\n  giaHoTro: number | undefined;\r\n  checked: boolean;\r\n  doiTuongLoaiGiaId: number;\r\n}\r\n\r\nexport class LoaiGiaTreeDto implements ILoaiGiaTreeDto {\r\n  name!: string | undefined;\r\n  key!: number;\r\n  readonly expand!: boolean;\r\n  readonly allChecked!: boolean;\r\n  children!: DataTree[] | undefined;\r\n\r\n  constructor(data?: ILoaiGiaTreeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.name = data['name'];\r\n      this.key = data['key'];\r\n      (<any>this).expand = data['expand'];\r\n      (<any>this).allChecked = data['allChecked'];\r\n      if (Array.isArray(data['children'])) {\r\n        this.children = [] as any;\r\n        for (let item of data['children'])\r\n          this.children!.push(DataTree.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LoaiGiaTreeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LoaiGiaTreeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['key'] = this.key;\r\n    data['expand'] = this.expand;\r\n    data['allChecked'] = this.allChecked;\r\n    if (Array.isArray(this.children)) {\r\n      data['children'] = [];\r\n      for (let item of this.children)\r\n        data['children'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILoaiGiaTreeDto {\r\n  name: string | undefined;\r\n  key: number;\r\n  expand: boolean;\r\n  allChecked: boolean;\r\n  children: DataTree[] | undefined;\r\n}\r\n\r\nexport class Dto implements IDto {\r\n  doUuTien!: number | undefined;\r\n  loaiGiaId!: number;\r\n  checked!: boolean;\r\n  doiTuongLoaiGiaId!: number;\r\n\r\n  constructor(data?: IDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doUuTien = data['doUuTien'];\r\n      this.loaiGiaId = data['loaiGiaId'];\r\n      this.checked = data['checked'];\r\n      this.doiTuongLoaiGiaId = data['doiTuongLoaiGiaId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): Dto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new Dto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doUuTien'] = this.doUuTien;\r\n    data['loaiGiaId'] = this.loaiGiaId;\r\n    data['checked'] = this.checked;\r\n    data['doiTuongLoaiGiaId'] = this.doiTuongLoaiGiaId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDto {\r\n  doUuTien: number | undefined;\r\n  loaiGiaId: number;\r\n  checked: boolean;\r\n  doiTuongLoaiGiaId: number;\r\n}\r\n\r\nexport class ParamUpdateOrCreateDto implements IParamUpdateOrCreateDto {\r\n  doiTuongId!: number;\r\n  lstData!: Dto[] | undefined;\r\n\r\n  constructor(data?: IParamUpdateOrCreateDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doiTuongId = data['doiTuongId'];\r\n      if (Array.isArray(data['lstData'])) {\r\n        this.lstData = [] as any;\r\n        for (let item of data['lstData'])\r\n          this.lstData!.push(Dto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ParamUpdateOrCreateDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ParamUpdateOrCreateDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doiTuongId'] = this.doiTuongId;\r\n    if (Array.isArray(this.lstData)) {\r\n      data['lstData'] = [];\r\n      for (let item of this.lstData)\r\n        data['lstData'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IParamUpdateOrCreateDto {\r\n  doiTuongId: number;\r\n  lstData: Dto[] | undefined;\r\n}\r\n\r\nexport class DoiTuongLoaiGiaPagedRequestDto implements IDoiTuongLoaiGiaPagedRequestDto {\r\n  doiTuongId!: number | undefined;\r\n  loaiGiaId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IDoiTuongLoaiGiaPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doiTuongId = data['doiTuongId'];\r\n      this.loaiGiaId = data['loaiGiaId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiTuongLoaiGiaPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiTuongLoaiGiaPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doiTuongId'] = this.doiTuongId;\r\n    data['loaiGiaId'] = this.loaiGiaId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiTuongLoaiGiaPagedRequestDto {\r\n  doiTuongId: number | undefined;\r\n  loaiGiaId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class DoiTuongLoaiGiaDto implements IDoiTuongLoaiGiaDto {\r\n  doiTuongId!: number;\r\n  loaiGiaId!: number;\r\n  doUuTien!: number | undefined;\r\n  isActive!: boolean;\r\n  benhVienId!: number;\r\n  tenDoiTuong!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IDoiTuongLoaiGiaDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.doiTuongId = data['doiTuongId'];\r\n      this.loaiGiaId = data['loaiGiaId'];\r\n      this.doUuTien = data['doUuTien'];\r\n      this.isActive = data['isActive'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.tenDoiTuong = data['tenDoiTuong'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiTuongLoaiGiaDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiTuongLoaiGiaDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['doiTuongId'] = this.doiTuongId;\r\n    data['loaiGiaId'] = this.loaiGiaId;\r\n    data['doUuTien'] = this.doUuTien;\r\n    data['isActive'] = this.isActive;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['tenDoiTuong'] = this.tenDoiTuong;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiTuongLoaiGiaDto {\r\n  doiTuongId: number;\r\n  loaiGiaId: number;\r\n  doUuTien: number | undefined;\r\n  isActive: boolean;\r\n  benhVienId: number;\r\n  tenDoiTuong: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDoiTuongLoaiGiaDto implements IPagedResultDtoOfDoiTuongLoaiGiaDto {\r\n  totalCount!: number;\r\n  items!: DoiTuongLoaiGiaDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDoiTuongLoaiGiaDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DoiTuongLoaiGiaDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDoiTuongLoaiGiaDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDoiTuongLoaiGiaDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDoiTuongLoaiGiaDto {\r\n  totalCount: number;\r\n  items: DoiTuongLoaiGiaDto[] | undefined;\r\n}\r\n\r\nexport class DonViHanhChinhDto implements IDonViHanhChinhDto {\r\n  ma!: string | undefined;\r\n  parentId!: number | undefined;\r\n  ten!: string | undefined;\r\n  tenVietTat!: string | undefined;\r\n  tenDayDu!: string | undefined;\r\n  tenDayDuKhongDau!: string | undefined;\r\n  capDo!: number | undefined;\r\n  isActive!: boolean;\r\n  isExists!: boolean;\r\n  readonly capDoStr!: string | undefined;\r\n  parentStr!: string | undefined;\r\n  tinhId!: number | undefined;\r\n  huyenId!: number | undefined;\r\n  xaId!: number | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IDonViHanhChinhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.parentId = data['parentId'];\r\n      this.ten = data['ten'];\r\n      this.tenVietTat = data['tenVietTat'];\r\n      this.tenDayDu = data['tenDayDu'];\r\n      this.tenDayDuKhongDau = data['tenDayDuKhongDau'];\r\n      this.capDo = data['capDo'];\r\n      this.isActive = data['isActive'];\r\n      this.isExists = data['isExists'];\r\n      (<any>this).capDoStr = data['capDoStr'];\r\n      this.parentStr = data['parentStr'];\r\n      this.tinhId = data['tinhId'];\r\n      this.huyenId = data['huyenId'];\r\n      this.xaId = data['xaId'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DonViHanhChinhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DonViHanhChinhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['parentId'] = this.parentId;\r\n    data['ten'] = this.ten;\r\n    data['tenVietTat'] = this.tenVietTat;\r\n    data['tenDayDu'] = this.tenDayDu;\r\n    data['tenDayDuKhongDau'] = this.tenDayDuKhongDau;\r\n    data['capDo'] = this.capDo;\r\n    data['isActive'] = this.isActive;\r\n    data['isExists'] = this.isExists;\r\n    data['capDoStr'] = this.capDoStr;\r\n    data['parentStr'] = this.parentStr;\r\n    data['tinhId'] = this.tinhId;\r\n    data['huyenId'] = this.huyenId;\r\n    data['xaId'] = this.xaId;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDonViHanhChinhDto {\r\n  ma: string | undefined;\r\n  parentId: number | undefined;\r\n  ten: string | undefined;\r\n  tenVietTat: string | undefined;\r\n  tenDayDu: string | undefined;\r\n  tenDayDuKhongDau: string | undefined;\r\n  capDo: number | undefined;\r\n  isActive: boolean;\r\n  isExists: boolean;\r\n  capDoStr: string | undefined;\r\n  parentStr: string | undefined;\r\n  tinhId: number | undefined;\r\n  huyenId: number | undefined;\r\n  xaId: number | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedRequestDonViHanhChinhDto implements IPagedRequestDonViHanhChinhDto {\r\n  capDo!: number | undefined;\r\n  tinhId!: number | undefined;\r\n  huyenId!: number | undefined;\r\n  xaId!: number | undefined;\r\n  thonId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedRequestDonViHanhChinhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.capDo = data['capDo'];\r\n      this.tinhId = data['tinhId'];\r\n      this.huyenId = data['huyenId'];\r\n      this.xaId = data['xaId'];\r\n      this.thonId = data['thonId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedRequestDonViHanhChinhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedRequestDonViHanhChinhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['capDo'] = this.capDo;\r\n    data['tinhId'] = this.tinhId;\r\n    data['huyenId'] = this.huyenId;\r\n    data['xaId'] = this.xaId;\r\n    data['thonId'] = this.thonId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedRequestDonViHanhChinhDto {\r\n  capDo: number | undefined;\r\n  tinhId: number | undefined;\r\n  huyenId: number | undefined;\r\n  xaId: number | undefined;\r\n  thonId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDonViHanhChinhDto implements IPagedResultDtoOfDonViHanhChinhDto {\r\n  totalCount!: number;\r\n  items!: DonViHanhChinhDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDonViHanhChinhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DonViHanhChinhDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDonViHanhChinhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDonViHanhChinhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDonViHanhChinhDto {\r\n  totalCount: number;\r\n  items: DonViHanhChinhDto[] | undefined;\r\n}\r\n\r\nexport class DonViTinhPagedRequestDto implements IDonViTinhPagedRequestDto {\r\n  loaiVatTuId!: number | undefined;\r\n  isDonViCoBan!: boolean | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IDonViTinhPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiVatTuId = data['loaiVatTuId'];\r\n      this.isDonViCoBan = data['isDonViCoBan'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DonViTinhPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DonViTinhPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiVatTuId'] = this.loaiVatTuId;\r\n    data['isDonViCoBan'] = this.isDonViCoBan;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDonViTinhPagedRequestDto {\r\n  loaiVatTuId: number | undefined;\r\n  isDonViCoBan: boolean | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class DonViTinhDto implements IDonViTinhDto {\r\n  loaiVatTuId!: number;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  donViCoBanId!: number | undefined;\r\n  donViCoBan!: boolean;\r\n  giaTriQuyDoi!: number;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IDonViTinhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n    if (!data) {\r\n      this.donViCoBan = false;\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiVatTuId = data['loaiVatTuId'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.donViCoBanId = data['donViCoBanId'];\r\n      this.donViCoBan = data['donViCoBan'] !== undefined ? data['donViCoBan'] : false;\r\n      this.giaTriQuyDoi = data['giaTriQuyDoi'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DonViTinhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DonViTinhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiVatTuId'] = this.loaiVatTuId;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['donViCoBanId'] = this.donViCoBanId;\r\n    data['donViCoBan'] = this.donViCoBan;\r\n    data['giaTriQuyDoi'] = this.giaTriQuyDoi;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDonViTinhDto {\r\n  loaiVatTuId: number;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  donViCoBanId: number | undefined;\r\n  donViCoBan: boolean;\r\n  giaTriQuyDoi: number;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDonViTinhDto implements IPagedResultDtoOfDonViTinhDto {\r\n  totalCount!: number;\r\n  items!: DonViTinhDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDonViTinhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DonViTinhDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDonViTinhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDonViTinhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDonViTinhDto {\r\n  totalCount: number;\r\n  items: DonViTinhDto[] | undefined;\r\n}\r\n\r\nexport class DuocThongTinThauDto implements IDuocThongTinThauDto {\r\n  duocId!: number;\r\n  tenBhyt!: string | undefined;\r\n  maHoatChat!: string | undefined;\r\n  sttPheDuyet!: string | undefined;\r\n  nuocSanXuat!: string | undefined;\r\n  hangSanXuat!: string | undefined;\r\n  nhaThau!: string | undefined;\r\n  soDK!: string | undefined;\r\n  donGiaThau!: number | undefined;\r\n  goiThau!: string | undefined;\r\n  nhomThau!: string | undefined;\r\n  soQDThau!: string | undefined;\r\n  ngayTrungThau!: moment.Moment | undefined;\r\n  uuTien!: boolean | undefined;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IDuocThongTinThauDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.duocId = data['duocId'];\r\n      this.tenBhyt = data['tenBhyt'];\r\n      this.maHoatChat = data['maHoatChat'];\r\n      this.sttPheDuyet = data['sttPheDuyet'];\r\n      this.nuocSanXuat = data['nuocSanXuat'];\r\n      this.hangSanXuat = data['hangSanXuat'];\r\n      this.nhaThau = data['nhaThau'];\r\n      this.soDK = data['soDK'];\r\n      this.donGiaThau = data['donGiaThau'];\r\n      this.goiThau = data['goiThau'];\r\n      this.nhomThau = data['nhomThau'];\r\n      this.soQDThau = data['soQDThau'];\r\n      this.ngayTrungThau = data['ngayTrungThau'] ? moment(data['ngayTrungThau'].toString()) : <any>undefined;\r\n      this.uuTien = data['uuTien'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DuocThongTinThauDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DuocThongTinThauDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['duocId'] = this.duocId;\r\n    data['tenBhyt'] = this.tenBhyt;\r\n    data['maHoatChat'] = this.maHoatChat;\r\n    data['sttPheDuyet'] = this.sttPheDuyet;\r\n    data['nuocSanXuat'] = this.nuocSanXuat;\r\n    data['hangSanXuat'] = this.hangSanXuat;\r\n    data['nhaThau'] = this.nhaThau;\r\n    data['soDK'] = this.soDK;\r\n    data['donGiaThau'] = this.donGiaThau;\r\n    data['goiThau'] = this.goiThau;\r\n    data['nhomThau'] = this.nhomThau;\r\n    data['soQDThau'] = this.soQDThau;\r\n    data['ngayTrungThau'] = this.ngayTrungThau ? this.ngayTrungThau.toISOString() : <any>undefined;\r\n    data['uuTien'] = this.uuTien;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDuocThongTinThauDto {\r\n  duocId: number;\r\n  tenBhyt: string | undefined;\r\n  maHoatChat: string | undefined;\r\n  sttPheDuyet: string | undefined;\r\n  nuocSanXuat: string | undefined;\r\n  hangSanXuat: string | undefined;\r\n  nhaThau: string | undefined;\r\n  soDK: string | undefined;\r\n  donGiaThau: number | undefined;\r\n  goiThau: string | undefined;\r\n  nhomThau: string | undefined;\r\n  soQDThau: string | undefined;\r\n  ngayTrungThau: moment.Moment | undefined;\r\n  uuTien: boolean | undefined;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class InsertBulkThongTinThauByDuocIdRequest implements IInsertBulkThongTinThauByDuocIdRequest {\r\n  listOfThongTinThau!: DuocThongTinThauDto[] | undefined;\r\n\r\n  constructor(data?: IInsertBulkThongTinThauByDuocIdRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (Array.isArray(data['listOfThongTinThau'])) {\r\n        this.listOfThongTinThau = [] as any;\r\n        for (let item of data['listOfThongTinThau'])\r\n          this.listOfThongTinThau!.push(DuocThongTinThauDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): InsertBulkThongTinThauByDuocIdRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new InsertBulkThongTinThauByDuocIdRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (Array.isArray(this.listOfThongTinThau)) {\r\n      data['listOfThongTinThau'] = [];\r\n      for (let item of this.listOfThongTinThau)\r\n        data['listOfThongTinThau'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IInsertBulkThongTinThauByDuocIdRequest {\r\n  listOfThongTinThau: DuocThongTinThauDto[] | undefined;\r\n}\r\n\r\nexport enum DuocDungChungTimTheoEnum {\r\n  MaThuoc = 1,\r\n  TenThuoc = 2,\r\n  HoatChat = 3,\r\n  SoDangKy = 4,\r\n}\r\n\r\nexport class DuocDungChungPagedListInputDto implements IDuocDungChungPagedListInputDto {\r\n  timTheo!: DuocDungChungTimTheoEnum;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IDuocDungChungPagedListInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.timTheo = data['timTheo'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DuocDungChungPagedListInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DuocDungChungPagedListInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['timTheo'] = this.timTheo;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDuocDungChungPagedListInputDto {\r\n  timTheo: DuocDungChungTimTheoEnum;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class DuocDungChungDto implements IDuocDungChungDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  hamLuong!: string | undefined;\r\n  duongDung!: string | undefined;\r\n  hoatChat!: string | undefined;\r\n  soDK!: string | undefined;\r\n  loaiThuoc!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IDuocDungChungDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.hamLuong = data['hamLuong'];\r\n      this.duongDung = data['duongDung'];\r\n      this.hoatChat = data['hoatChat'];\r\n      this.soDK = data['soDK'];\r\n      this.loaiThuoc = data['loaiThuoc'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DuocDungChungDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DuocDungChungDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['hamLuong'] = this.hamLuong;\r\n    data['duongDung'] = this.duongDung;\r\n    data['hoatChat'] = this.hoatChat;\r\n    data['soDK'] = this.soDK;\r\n    data['loaiThuoc'] = this.loaiThuoc;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDuocDungChungDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  hamLuong: string | undefined;\r\n  duongDung: string | undefined;\r\n  hoatChat: string | undefined;\r\n  soDK: string | undefined;\r\n  loaiThuoc: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDuocDungChungDto implements IPagedResultDtoOfDuocDungChungDto {\r\n  totalCount!: number;\r\n  items!: DuocDungChungDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDuocDungChungDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DuocDungChungDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDuocDungChungDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDuocDungChungDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDuocDungChungDto {\r\n  totalCount: number;\r\n  items: DuocDungChungDto[] | undefined;\r\n}\r\n\r\nexport class ThemThuocTuDanhMucChungDto implements IThemThuocTuDanhMucChungDto {\r\n  id!: number;\r\n  maDuoc!: string | undefined;\r\n  donViTinh!: string | undefined;\r\n  duongDung!: string | undefined;\r\n\r\n  constructor(data?: IThemThuocTuDanhMucChungDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.maDuoc = data['maDuoc'];\r\n      this.donViTinh = data['donViTinh'];\r\n      this.duongDung = data['duongDung'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ThemThuocTuDanhMucChungDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ThemThuocTuDanhMucChungDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['maDuoc'] = this.maDuoc;\r\n    data['donViTinh'] = this.donViTinh;\r\n    data['duongDung'] = this.duongDung;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IThemThuocTuDanhMucChungDto {\r\n  id: number;\r\n  maDuoc: string | undefined;\r\n  donViTinh: string | undefined;\r\n  duongDung: string | undefined;\r\n}\r\n\r\nexport class ThemThuocTuDanhMucDungChungRequest implements IThemThuocTuDanhMucDungChungRequest {\r\n  listOfThuocCanThem!: ThemThuocTuDanhMucChungDto[] | undefined;\r\n\r\n  constructor(data?: IThemThuocTuDanhMucDungChungRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (Array.isArray(data['listOfThuocCanThem'])) {\r\n        this.listOfThuocCanThem = [] as any;\r\n        for (let item of data['listOfThuocCanThem'])\r\n          this.listOfThuocCanThem!.push(ThemThuocTuDanhMucChungDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ThemThuocTuDanhMucDungChungRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ThemThuocTuDanhMucDungChungRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (Array.isArray(this.listOfThuocCanThem)) {\r\n      data['listOfThuocCanThem'] = [];\r\n      for (let item of this.listOfThuocCanThem)\r\n        data['listOfThuocCanThem'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IThemThuocTuDanhMucDungChungRequest {\r\n  listOfThuocCanThem: ThemThuocTuDanhMucChungDto[] | undefined;\r\n}\r\n\r\nexport class DuocBenhVienPageListInputDto implements IDuocBenhVienPageListInputDto {\r\n  loaiVatTuId!: number | undefined;\r\n  chuongTrinhId!: number | undefined;\r\n  soDangKy!: string | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IDuocBenhVienPageListInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiVatTuId = data['loaiVatTuId'];\r\n      this.chuongTrinhId = data['chuongTrinhId'];\r\n      this.soDangKy = data['soDangKy'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DuocBenhVienPageListInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DuocBenhVienPageListInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiVatTuId'] = this.loaiVatTuId;\r\n    data['chuongTrinhId'] = this.chuongTrinhId;\r\n    data['soDangKy'] = this.soDangKy;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDuocBenhVienPageListInputDto {\r\n  loaiVatTuId: number | undefined;\r\n  chuongTrinhId: number | undefined;\r\n  soDangKy: string | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport enum LOAI_THUOC {\r\n  TayY = 1,\r\n  ChePhamYHocCoTruyen = 2,\r\n  ViThuocYHocCoTruyen = 3,\r\n}\r\n\r\nexport enum LOAI_VAT_TU_Y_TE {\r\n  Thuoc = 0,\r\n  VatTu = 1,\r\n  HoaChat = 4,\r\n}\r\n\r\nexport class DuocDto implements IDuocDto {\r\n  loaiVatTuId!: number;\r\n  loaiThuoc!: LOAI_THUOC;\r\n  loaiDuocId!: number | undefined;\r\n  nhomDuocId!: number | undefined;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenDayDu!: string | undefined;\r\n  donViTinhId!: number | undefined;\r\n  donViTinh!: string | undefined;\r\n  quyCach!: string | undefined;\r\n  hoatChat!: string | undefined;\r\n  duongDungId!: number | undefined;\r\n  duongDung!: string | undefined;\r\n  congDung!: string | undefined;\r\n  hamLuong!: string | undefined;\r\n  vtyt!: LOAI_VAT_TU_Y_TE;\r\n  soDangKy!: string | undefined;\r\n  tamNgungSuDung!: boolean | undefined;\r\n  bhyt!: boolean | undefined;\r\n  quanNhan!: boolean | undefined;\r\n  loaiDieuTri!: string | undefined;\r\n  nhomDvktBhytId!: number | undefined;\r\n  bhytTyLeThanhToanDungTuyen!: number | undefined;\r\n  mienPhi!: boolean | undefined;\r\n  tamNgungDuTru!: boolean | undefined;\r\n  phamVi!: string | undefined;\r\n  quanTamDacDiet!: boolean | undefined;\r\n  duocDcId!: number | undefined;\r\n  maDuocChung!: string | undefined;\r\n  phanNhomDuocId!: number | undefined;\r\n  phanLoaiDuocId!: number | undefined;\r\n  daChat!: boolean | undefined;\r\n  maDmdc!: string | undefined;\r\n  donViTinhToaThuocId!: number | undefined;\r\n  donViTinhToaThuoc!: string | undefined;\r\n  chuongTrinhId!: number | undefined;\r\n  nuocSanXuat!: string | undefined;\r\n  vacxinId!: number | undefined;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiVatTuId = data['loaiVatTuId'];\r\n      this.loaiThuoc = data['loaiThuoc'];\r\n      this.loaiDuocId = data['loaiDuocId'];\r\n      this.nhomDuocId = data['nhomDuocId'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenDayDu = data['tenDayDu'];\r\n      this.donViTinhId = data['donViTinhId'];\r\n      this.donViTinh = data['donViTinh'];\r\n      this.quyCach = data['quyCach'];\r\n      this.hoatChat = data['hoatChat'];\r\n      this.duongDungId = data['duongDungId'];\r\n      this.duongDung = data['duongDung'];\r\n      this.congDung = data['congDung'];\r\n      this.hamLuong = data['hamLuong'];\r\n      this.vtyt = data['vtyt'];\r\n      this.soDangKy = data['soDangKy'];\r\n      this.tamNgungSuDung = data['tamNgungSuDung'];\r\n      this.bhyt = data['bhyt'];\r\n      this.quanNhan = data['quanNhan'];\r\n      this.loaiDieuTri = data['loaiDieuTri'];\r\n      this.nhomDvktBhytId = data['nhomDvktBhytId'];\r\n      this.bhytTyLeThanhToanDungTuyen = data['bhytTyLeThanhToanDungTuyen'];\r\n      this.mienPhi = data['mienPhi'];\r\n      this.tamNgungDuTru = data['tamNgungDuTru'];\r\n      this.phamVi = data['phamVi'];\r\n      this.quanTamDacDiet = data['quanTamDacDiet'];\r\n      this.duocDcId = data['duocDcId'];\r\n      this.maDuocChung = data['maDuocChung'];\r\n      this.phanNhomDuocId = data['phanNhomDuocId'];\r\n      this.phanLoaiDuocId = data['phanLoaiDuocId'];\r\n      this.daChat = data['daChat'];\r\n      this.maDmdc = data['maDmdc'];\r\n      this.donViTinhToaThuocId = data['donViTinhToaThuocId'];\r\n      this.donViTinhToaThuoc = data['donViTinhToaThuoc'];\r\n      this.chuongTrinhId = data['chuongTrinhId'];\r\n      this.nuocSanXuat = data['nuocSanXuat'];\r\n      this.vacxinId = data['vacxinId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiVatTuId'] = this.loaiVatTuId;\r\n    data['loaiThuoc'] = this.loaiThuoc;\r\n    data['loaiDuocId'] = this.loaiDuocId;\r\n    data['nhomDuocId'] = this.nhomDuocId;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenDayDu'] = this.tenDayDu;\r\n    data['donViTinhId'] = this.donViTinhId;\r\n    data['donViTinh'] = this.donViTinh;\r\n    data['quyCach'] = this.quyCach;\r\n    data['hoatChat'] = this.hoatChat;\r\n    data['duongDungId'] = this.duongDungId;\r\n    data['duongDung'] = this.duongDung;\r\n    data['congDung'] = this.congDung;\r\n    data['hamLuong'] = this.hamLuong;\r\n    data['vtyt'] = this.vtyt;\r\n    data['soDangKy'] = this.soDangKy;\r\n    data['tamNgungSuDung'] = this.tamNgungSuDung;\r\n    data['bhyt'] = this.bhyt;\r\n    data['quanNhan'] = this.quanNhan;\r\n    data['loaiDieuTri'] = this.loaiDieuTri;\r\n    data['nhomDvktBhytId'] = this.nhomDvktBhytId;\r\n    data['bhytTyLeThanhToanDungTuyen'] = this.bhytTyLeThanhToanDungTuyen;\r\n    data['mienPhi'] = this.mienPhi;\r\n    data['tamNgungDuTru'] = this.tamNgungDuTru;\r\n    data['phamVi'] = this.phamVi;\r\n    data['quanTamDacDiet'] = this.quanTamDacDiet;\r\n    data['duocDcId'] = this.duocDcId;\r\n    data['maDuocChung'] = this.maDuocChung;\r\n    data['phanNhomDuocId'] = this.phanNhomDuocId;\r\n    data['phanLoaiDuocId'] = this.phanLoaiDuocId;\r\n    data['daChat'] = this.daChat;\r\n    data['maDmdc'] = this.maDmdc;\r\n    data['donViTinhToaThuocId'] = this.donViTinhToaThuocId;\r\n    data['donViTinhToaThuoc'] = this.donViTinhToaThuoc;\r\n    data['chuongTrinhId'] = this.chuongTrinhId;\r\n    data['nuocSanXuat'] = this.nuocSanXuat;\r\n    data['vacxinId'] = this.vacxinId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDuocDto {\r\n  loaiVatTuId: number;\r\n  loaiThuoc: LOAI_THUOC;\r\n  loaiDuocId: number | undefined;\r\n  nhomDuocId: number | undefined;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenDayDu: string | undefined;\r\n  donViTinhId: number | undefined;\r\n  donViTinh: string | undefined;\r\n  quyCach: string | undefined;\r\n  hoatChat: string | undefined;\r\n  duongDungId: number | undefined;\r\n  duongDung: string | undefined;\r\n  congDung: string | undefined;\r\n  hamLuong: string | undefined;\r\n  vtyt: LOAI_VAT_TU_Y_TE;\r\n  soDangKy: string | undefined;\r\n  tamNgungSuDung: boolean | undefined;\r\n  bhyt: boolean | undefined;\r\n  quanNhan: boolean | undefined;\r\n  loaiDieuTri: string | undefined;\r\n  nhomDvktBhytId: number | undefined;\r\n  bhytTyLeThanhToanDungTuyen: number | undefined;\r\n  mienPhi: boolean | undefined;\r\n  tamNgungDuTru: boolean | undefined;\r\n  phamVi: string | undefined;\r\n  quanTamDacDiet: boolean | undefined;\r\n  duocDcId: number | undefined;\r\n  maDuocChung: string | undefined;\r\n  phanNhomDuocId: number | undefined;\r\n  phanLoaiDuocId: number | undefined;\r\n  daChat: boolean | undefined;\r\n  maDmdc: string | undefined;\r\n  donViTinhToaThuocId: number | undefined;\r\n  donViTinhToaThuoc: string | undefined;\r\n  chuongTrinhId: number | undefined;\r\n  nuocSanXuat: string | undefined;\r\n  vacxinId: number | undefined;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDuocDto implements IPagedResultDtoOfDuocDto {\r\n  totalCount!: number;\r\n  items!: DuocDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DuocDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDuocDto {\r\n  totalCount: number;\r\n  items: DuocDto[] | undefined;\r\n}\r\n\r\nexport class PagedResultDtoOfDuocThongTinThauDto implements IPagedResultDtoOfDuocThongTinThauDto {\r\n  totalCount!: number;\r\n  items!: DuocThongTinThauDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDuocThongTinThauDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DuocThongTinThauDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDuocThongTinThauDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDuocThongTinThauDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDuocThongTinThauDto {\r\n  totalCount: number;\r\n  items: DuocThongTinThauDto[] | undefined;\r\n}\r\n\r\nexport enum GetEntityByIdMap {\r\n  BenhNhan = 1,\r\n  TiepNhan = 2,\r\n  NgoaiTruKhamBenh = 3,\r\n  TiepNhanBenhNhanBHYT = 4,\r\n  DMDoiTuong = 5,\r\n  BenhNhanDiaChi = 6,\r\n  BenhVien = 7,\r\n}\r\n\r\nexport class GetEntityByIdInputDto implements IGetEntityByIdInputDto {\r\n  map!: GetEntityByIdMap;\r\n  propertyOfDto!: string[] | undefined;\r\n  propertyId!: string | undefined;\r\n  id!: number;\r\n  isGetOne!: boolean;\r\n  isSoftDelete!: boolean;\r\n\r\n  constructor(data?: IGetEntityByIdInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.map = data['map'];\r\n      if (Array.isArray(data['propertyOfDto'])) {\r\n        this.propertyOfDto = [] as any;\r\n        for (let item of data['propertyOfDto'])\r\n          this.propertyOfDto!.push(item);\r\n      }\r\n      this.propertyId = data['propertyId'];\r\n      this.id = data['id'];\r\n      this.isGetOne = data['isGetOne'];\r\n      this.isSoftDelete = data['isSoftDelete'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GetEntityByIdInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GetEntityByIdInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['map'] = this.map;\r\n    if (Array.isArray(this.propertyOfDto)) {\r\n      data['propertyOfDto'] = [];\r\n      for (let item of this.propertyOfDto)\r\n        data['propertyOfDto'].push(item);\r\n    }\r\n    data['propertyId'] = this.propertyId;\r\n    data['id'] = this.id;\r\n    data['isGetOne'] = this.isGetOne;\r\n    data['isSoftDelete'] = this.isSoftDelete;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGetEntityByIdInputDto {\r\n  map: GetEntityByIdMap;\r\n  propertyOfDto: string[] | undefined;\r\n  propertyId: string | undefined;\r\n  id: number;\r\n  isGetOne: boolean;\r\n  isSoftDelete: boolean;\r\n}\r\n\r\nexport class GetEntityByIdOutDto implements IGetEntityByIdOutDto {\r\n  id!: number;\r\n  dto!: any | undefined;\r\n  isSuccessful!: boolean;\r\n\r\n  constructor(data?: IGetEntityByIdOutDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.dto = data['dto'];\r\n      this.isSuccessful = data['isSuccessful'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GetEntityByIdOutDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GetEntityByIdOutDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['dto'] = this.dto;\r\n    data['isSuccessful'] = this.isSuccessful;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGetEntityByIdOutDto {\r\n  id: number;\r\n  dto: any | undefined;\r\n  isSuccessful: boolean;\r\n}\r\n\r\nexport class GiuongBenhDto implements IGiuongBenhDto {\r\n  benhVienId!: number;\r\n  ma!: string | undefined;\r\n  moTa!: string | undefined;\r\n  khoaDieuTriId!: number;\r\n  phongBenhId!: number;\r\n  tang!: number | undefined;\r\n  vatDungKemTheo!: string | undefined;\r\n  isActive!: boolean;\r\n  isExists!: boolean;\r\n  tenKhoaDieuTri!: string | undefined;\r\n  tenPhongBenh!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IGiuongBenhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.benhVienId = data['benhVienId'];\r\n      this.ma = data['ma'];\r\n      this.moTa = data['moTa'];\r\n      this.khoaDieuTriId = data['khoaDieuTriId'];\r\n      this.phongBenhId = data['phongBenhId'];\r\n      this.tang = data['tang'];\r\n      this.vatDungKemTheo = data['vatDungKemTheo'];\r\n      this.isActive = data['isActive'];\r\n      this.isExists = data['isExists'];\r\n      this.tenKhoaDieuTri = data['tenKhoaDieuTri'];\r\n      this.tenPhongBenh = data['tenPhongBenh'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GiuongBenhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GiuongBenhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['ma'] = this.ma;\r\n    data['moTa'] = this.moTa;\r\n    data['khoaDieuTriId'] = this.khoaDieuTriId;\r\n    data['phongBenhId'] = this.phongBenhId;\r\n    data['tang'] = this.tang;\r\n    data['vatDungKemTheo'] = this.vatDungKemTheo;\r\n    data['isActive'] = this.isActive;\r\n    data['isExists'] = this.isExists;\r\n    data['tenKhoaDieuTri'] = this.tenKhoaDieuTri;\r\n    data['tenPhongBenh'] = this.tenPhongBenh;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGiuongBenhDto {\r\n  benhVienId: number;\r\n  ma: string | undefined;\r\n  moTa: string | undefined;\r\n  khoaDieuTriId: number;\r\n  phongBenhId: number;\r\n  tang: number | undefined;\r\n  vatDungKemTheo: string | undefined;\r\n  isActive: boolean;\r\n  isExists: boolean;\r\n  tenKhoaDieuTri: string | undefined;\r\n  tenPhongBenh: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class GiuongBenhPagedRequestDto implements IGiuongBenhPagedRequestDto {\r\n  khoaDieuTriId!: number | undefined;\r\n  phongBenhId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IGiuongBenhPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.khoaDieuTriId = data['khoaDieuTriId'];\r\n      this.phongBenhId = data['phongBenhId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GiuongBenhPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GiuongBenhPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['khoaDieuTriId'] = this.khoaDieuTriId;\r\n    data['phongBenhId'] = this.phongBenhId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGiuongBenhPagedRequestDto {\r\n  khoaDieuTriId: number | undefined;\r\n  phongBenhId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfGiuongBenhDto implements IPagedResultDtoOfGiuongBenhDto {\r\n  totalCount!: number;\r\n  items!: GiuongBenhDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfGiuongBenhDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(GiuongBenhDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfGiuongBenhDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfGiuongBenhDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfGiuongBenhDto {\r\n  totalCount: number;\r\n  items: GiuongBenhDto[] | undefined;\r\n}\r\n\r\nexport class LstDictionaryDto implements ILstDictionaryDto {\r\n  lstDictionaryTypeId!: number;\r\n  lstDictionaryTypeCode!: string | undefined;\r\n  code!: string | undefined;\r\n  name!: string | undefined;\r\n  nameEn!: string | undefined;\r\n  parentId!: number | undefined;\r\n  isActive!: boolean;\r\n  isExists!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: ILstDictionaryDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.lstDictionaryTypeId = data['lstDictionaryTypeId'];\r\n      this.lstDictionaryTypeCode = data['lstDictionaryTypeCode'];\r\n      this.code = data['code'];\r\n      this.name = data['name'];\r\n      this.nameEn = data['nameEn'];\r\n      this.parentId = data['parentId'];\r\n      this.isActive = data['isActive'];\r\n      this.isExists = data['isExists'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LstDictionaryDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LstDictionaryDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['lstDictionaryTypeId'] = this.lstDictionaryTypeId;\r\n    data['lstDictionaryTypeCode'] = this.lstDictionaryTypeCode;\r\n    data['code'] = this.code;\r\n    data['name'] = this.name;\r\n    data['nameEn'] = this.nameEn;\r\n    data['parentId'] = this.parentId;\r\n    data['isActive'] = this.isActive;\r\n    data['isExists'] = this.isExists;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILstDictionaryDto {\r\n  lstDictionaryTypeId: number;\r\n  lstDictionaryTypeCode: string | undefined;\r\n  code: string | undefined;\r\n  name: string | undefined;\r\n  nameEn: string | undefined;\r\n  parentId: number | undefined;\r\n  isActive: boolean;\r\n  isExists: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class LstDictionaryGetByListCodePagedRequestDto implements ILstDictionaryGetByListCodePagedRequestDto {\r\n  lstDictionaryTypeCodes!: string[] | undefined;\r\n\r\n  constructor(data?: ILstDictionaryGetByListCodePagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (Array.isArray(data['lstDictionaryTypeCodes'])) {\r\n        this.lstDictionaryTypeCodes = [] as any;\r\n        for (let item of data['lstDictionaryTypeCodes'])\r\n          this.lstDictionaryTypeCodes!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LstDictionaryGetByListCodePagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LstDictionaryGetByListCodePagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (Array.isArray(this.lstDictionaryTypeCodes)) {\r\n      data['lstDictionaryTypeCodes'] = [];\r\n      for (let item of this.lstDictionaryTypeCodes)\r\n        data['lstDictionaryTypeCodes'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILstDictionaryGetByListCodePagedRequestDto {\r\n  lstDictionaryTypeCodes: string[] | undefined;\r\n}\r\n\r\nexport class LstDictionaryPagedRequestDto implements ILstDictionaryPagedRequestDto {\r\n  lstDictionaryTypeId!: number | undefined;\r\n  parentId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ILstDictionaryPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.lstDictionaryTypeId = data['lstDictionaryTypeId'];\r\n      this.parentId = data['parentId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LstDictionaryPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LstDictionaryPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['lstDictionaryTypeId'] = this.lstDictionaryTypeId;\r\n    data['parentId'] = this.parentId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILstDictionaryPagedRequestDto {\r\n  lstDictionaryTypeId: number | undefined;\r\n  parentId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfLstDictionaryDto implements IPagedResultDtoOfLstDictionaryDto {\r\n  totalCount!: number;\r\n  items!: LstDictionaryDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfLstDictionaryDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(LstDictionaryDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfLstDictionaryDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfLstDictionaryDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfLstDictionaryDto {\r\n  totalCount: number;\r\n  items: LstDictionaryDto[] | undefined;\r\n}\r\n\r\nexport class LstDictionaryTypeDto implements ILstDictionaryTypeDto {\r\n  code!: string | undefined;\r\n  name!: string | undefined;\r\n  nameEn!: string | undefined;\r\n  level!: number | undefined;\r\n  parentId!: number | undefined;\r\n  isActive!: boolean | undefined;\r\n  isExists!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: ILstDictionaryTypeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.code = data['code'];\r\n      this.name = data['name'];\r\n      this.nameEn = data['nameEn'];\r\n      this.level = data['level'];\r\n      this.parentId = data['parentId'];\r\n      this.isActive = data['isActive'];\r\n      this.isExists = data['isExists'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LstDictionaryTypeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LstDictionaryTypeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['code'] = this.code;\r\n    data['name'] = this.name;\r\n    data['nameEn'] = this.nameEn;\r\n    data['level'] = this.level;\r\n    data['parentId'] = this.parentId;\r\n    data['isActive'] = this.isActive;\r\n    data['isExists'] = this.isExists;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILstDictionaryTypeDto {\r\n  code: string | undefined;\r\n  name: string | undefined;\r\n  nameEn: string | undefined;\r\n  level: number | undefined;\r\n  parentId: number | undefined;\r\n  isActive: boolean | undefined;\r\n  isExists: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class LstDictionaryTypePagedRequestDto implements ILstDictionaryTypePagedRequestDto {\r\n  parentId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ILstDictionaryTypePagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.parentId = data['parentId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LstDictionaryTypePagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LstDictionaryTypePagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['parentId'] = this.parentId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILstDictionaryTypePagedRequestDto {\r\n  parentId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfLstDictionaryTypeDto implements IPagedResultDtoOfLstDictionaryTypeDto {\r\n  totalCount!: number;\r\n  items!: LstDictionaryTypeDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfLstDictionaryTypeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(LstDictionaryTypeDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfLstDictionaryTypeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfLstDictionaryTypeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfLstDictionaryTypeDto {\r\n  totalCount: number;\r\n  items: LstDictionaryTypeDto[] | undefined;\r\n}\r\n\r\nexport class HoatChatPagedListInputDto implements IHoatChatPagedListInputDto {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IHoatChatPagedListInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): HoatChatPagedListInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new HoatChatPagedListInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IHoatChatPagedListInputDto {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class HoatChatDto implements IHoatChatDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  cap!: number | undefined;\r\n  parentId!: number | undefined;\r\n  stt!: number | undefined;\r\n  sttThuoc!: number | undefined;\r\n  duongDung!: string | undefined;\r\n  maDuongDung!: string | undefined;\r\n  ma1282!: string | undefined;\r\n  tuyen!: number | undefined;\r\n  loaiDuocId!: number | undefined;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IHoatChatDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.cap = data['cap'];\r\n      this.parentId = data['parentId'];\r\n      this.stt = data['stt'];\r\n      this.sttThuoc = data['sttThuoc'];\r\n      this.duongDung = data['duongDung'];\r\n      this.maDuongDung = data['maDuongDung'];\r\n      this.ma1282 = data['ma1282'];\r\n      this.tuyen = data['tuyen'];\r\n      this.loaiDuocId = data['loaiDuocId'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): HoatChatDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new HoatChatDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['cap'] = this.cap;\r\n    data['parentId'] = this.parentId;\r\n    data['stt'] = this.stt;\r\n    data['sttThuoc'] = this.sttThuoc;\r\n    data['duongDung'] = this.duongDung;\r\n    data['maDuongDung'] = this.maDuongDung;\r\n    data['ma1282'] = this.ma1282;\r\n    data['tuyen'] = this.tuyen;\r\n    data['loaiDuocId'] = this.loaiDuocId;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IHoatChatDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  cap: number | undefined;\r\n  parentId: number | undefined;\r\n  stt: number | undefined;\r\n  sttThuoc: number | undefined;\r\n  duongDung: string | undefined;\r\n  maDuongDung: string | undefined;\r\n  ma1282: string | undefined;\r\n  tuyen: number | undefined;\r\n  loaiDuocId: number | undefined;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfHoatChatDto implements IPagedResultDtoOfHoatChatDto {\r\n  totalCount!: number;\r\n  items!: HoatChatDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfHoatChatDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(HoatChatDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfHoatChatDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfHoatChatDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfHoatChatDto {\r\n  totalCount: number;\r\n  items: HoatChatDto[] | undefined;\r\n}\r\n\r\nexport class KiemTraExcelThuocRequest implements IKiemTraExcelThuocRequest {\r\n  fileDto!: FileDto;\r\n  hamLuongVaoTenDayDu!: boolean;\r\n  isUpdate!: boolean;\r\n  isThuoc!: boolean;\r\n\r\n  constructor(data?: IKiemTraExcelThuocRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.fileDto = data['fileDto'] ? FileDto.fromJS(data['fileDto']) : <any>undefined;\r\n      this.hamLuongVaoTenDayDu = data['hamLuongVaoTenDayDu'];\r\n      this.isUpdate = data['isUpdate'];\r\n      this.isThuoc = data['isThuoc'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KiemTraExcelThuocRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KiemTraExcelThuocRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['fileDto'] = this.fileDto ? this.fileDto.toJSON() : <any>undefined;\r\n    data['hamLuongVaoTenDayDu'] = this.hamLuongVaoTenDayDu;\r\n    data['isUpdate'] = this.isUpdate;\r\n    data['isThuoc'] = this.isThuoc;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKiemTraExcelThuocRequest {\r\n  fileDto: FileDto;\r\n  hamLuongVaoTenDayDu: boolean;\r\n  isUpdate: boolean;\r\n  isThuoc: boolean;\r\n}\r\n\r\nexport class ReadExcelThuocDto implements IReadExcelThuocDto {\r\n  stt!: string | undefined;\r\n  maduoc!: string | undefined;\r\n  mA_DMDC!: string | undefined;\r\n  tenduoc!: string | undefined;\r\n  hoatchat!: string | undefined;\r\n  donvitinh!: string | undefined;\r\n  hamluong!: string | undefined;\r\n  quycach!: string | undefined;\r\n  duongdung!: string | undefined;\r\n  stT_DMBYT!: string | undefined;\r\n  stT_PHEDUYET!: string | undefined;\r\n  nuocsanxuat!: string | undefined;\r\n  hangsanxuat!: string | undefined;\r\n  sodk!: string | undefined;\r\n  loaithuoc!: string | undefined;\r\n  dachat!: string | undefined;\r\n  dongiathau!: string | undefined;\r\n  soqdthau!: string | undefined;\r\n  nhomthau!: string | undefined;\r\n  goithau!: string | undefined;\r\n  ngaytrungthau!: string | undefined;\r\n  donViTinhId!: number | undefined;\r\n  duongDungId!: number | undefined;\r\n  nhomDuocId!: number | undefined;\r\n  phanNhomDuocId!: number | undefined;\r\n  loaiThuoc!: number | undefined;\r\n  bDaChat!: boolean;\r\n  ngayTrungThau!: moment.Moment | undefined;\r\n  donGiaThau!: number | undefined;\r\n  readonly tenThuocSdkSttPheDuyet!: string | undefined;\r\n  readonly tenSttPheDuyet!: string | undefined;\r\n  duocId!: number | undefined;\r\n\r\n  constructor(data?: IReadExcelThuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.stt = data['stt'];\r\n      this.maduoc = data['maduoc'];\r\n      this.mA_DMDC = data['mA_DMDC'];\r\n      this.tenduoc = data['tenduoc'];\r\n      this.hoatchat = data['hoatchat'];\r\n      this.donvitinh = data['donvitinh'];\r\n      this.hamluong = data['hamluong'];\r\n      this.quycach = data['quycach'];\r\n      this.duongdung = data['duongdung'];\r\n      this.stT_DMBYT = data['stT_DMBYT'];\r\n      this.stT_PHEDUYET = data['stT_PHEDUYET'];\r\n      this.nuocsanxuat = data['nuocsanxuat'];\r\n      this.hangsanxuat = data['hangsanxuat'];\r\n      this.sodk = data['sodk'];\r\n      this.loaithuoc = data['loaithuoc'];\r\n      this.dachat = data['dachat'];\r\n      this.dongiathau = data['dongiathau'];\r\n      this.soqdthau = data['soqdthau'];\r\n      this.nhomthau = data['nhomthau'];\r\n      this.goithau = data['goithau'];\r\n      this.ngaytrungthau = data['ngaytrungthau'];\r\n      this.donViTinhId = data['donViTinhId'];\r\n      this.duongDungId = data['duongDungId'];\r\n      this.nhomDuocId = data['nhomDuocId'];\r\n      this.phanNhomDuocId = data['phanNhomDuocId'];\r\n      this.loaiThuoc = data['loaiThuoc'];\r\n      this.bDaChat = data['bDaChat'];\r\n      this.ngayTrungThau = data['ngayTrungThau'] ? moment(data['ngayTrungThau'].toString()) : <any>undefined;\r\n      this.donGiaThau = data['donGiaThau'];\r\n      (<any>this).tenThuocSdkSttPheDuyet = data['tenThuocSdkSttPheDuyet'];\r\n      (<any>this).tenSttPheDuyet = data['tenSttPheDuyet'];\r\n      this.duocId = data['duocId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ReadExcelThuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ReadExcelThuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['stt'] = this.stt;\r\n    data['maduoc'] = this.maduoc;\r\n    data['mA_DMDC'] = this.mA_DMDC;\r\n    data['tenduoc'] = this.tenduoc;\r\n    data['hoatchat'] = this.hoatchat;\r\n    data['donvitinh'] = this.donvitinh;\r\n    data['hamluong'] = this.hamluong;\r\n    data['quycach'] = this.quycach;\r\n    data['duongdung'] = this.duongdung;\r\n    data['stT_DMBYT'] = this.stT_DMBYT;\r\n    data['stT_PHEDUYET'] = this.stT_PHEDUYET;\r\n    data['nuocsanxuat'] = this.nuocsanxuat;\r\n    data['hangsanxuat'] = this.hangsanxuat;\r\n    data['sodk'] = this.sodk;\r\n    data['loaithuoc'] = this.loaithuoc;\r\n    data['dachat'] = this.dachat;\r\n    data['dongiathau'] = this.dongiathau;\r\n    data['soqdthau'] = this.soqdthau;\r\n    data['nhomthau'] = this.nhomthau;\r\n    data['goithau'] = this.goithau;\r\n    data['ngaytrungthau'] = this.ngaytrungthau;\r\n    data['donViTinhId'] = this.donViTinhId;\r\n    data['duongDungId'] = this.duongDungId;\r\n    data['nhomDuocId'] = this.nhomDuocId;\r\n    data['phanNhomDuocId'] = this.phanNhomDuocId;\r\n    data['loaiThuoc'] = this.loaiThuoc;\r\n    data['bDaChat'] = this.bDaChat;\r\n    data['ngayTrungThau'] = this.ngayTrungThau ? this.ngayTrungThau.toISOString() : <any>undefined;\r\n    data['donGiaThau'] = this.donGiaThau;\r\n    data['tenThuocSdkSttPheDuyet'] = this.tenThuocSdkSttPheDuyet;\r\n    data['tenSttPheDuyet'] = this.tenSttPheDuyet;\r\n    data['duocId'] = this.duocId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IReadExcelThuocDto {\r\n  stt: string | undefined;\r\n  maduoc: string | undefined;\r\n  mA_DMDC: string | undefined;\r\n  tenduoc: string | undefined;\r\n  hoatchat: string | undefined;\r\n  donvitinh: string | undefined;\r\n  hamluong: string | undefined;\r\n  quycach: string | undefined;\r\n  duongdung: string | undefined;\r\n  stT_DMBYT: string | undefined;\r\n  stT_PHEDUYET: string | undefined;\r\n  nuocsanxuat: string | undefined;\r\n  hangsanxuat: string | undefined;\r\n  sodk: string | undefined;\r\n  loaithuoc: string | undefined;\r\n  dachat: string | undefined;\r\n  dongiathau: string | undefined;\r\n  soqdthau: string | undefined;\r\n  nhomthau: string | undefined;\r\n  goithau: string | undefined;\r\n  ngaytrungthau: string | undefined;\r\n  donViTinhId: number | undefined;\r\n  duongDungId: number | undefined;\r\n  nhomDuocId: number | undefined;\r\n  phanNhomDuocId: number | undefined;\r\n  loaiThuoc: number | undefined;\r\n  bDaChat: boolean;\r\n  ngayTrungThau: moment.Moment | undefined;\r\n  donGiaThau: number | undefined;\r\n  tenThuocSdkSttPheDuyet: string | undefined;\r\n  tenSttPheDuyet: string | undefined;\r\n  duocId: number | undefined;\r\n}\r\n\r\nexport class KiemTraThuocOutputDto implements IKiemTraThuocOutputDto {\r\n  excelDto!: ReadExcelThuocDto;\r\n  messageError!: string[] | undefined;\r\n  readonly isSuccessful!: boolean;\r\n\r\n  constructor(data?: IKiemTraThuocOutputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.excelDto = data['excelDto'] ? ReadExcelThuocDto.fromJS(data['excelDto']) : <any>undefined;\r\n      if (Array.isArray(data['messageError'])) {\r\n        this.messageError = [] as any;\r\n        for (let item of data['messageError'])\r\n          this.messageError!.push(item);\r\n      }\r\n      (<any>this).isSuccessful = data['isSuccessful'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KiemTraThuocOutputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KiemTraThuocOutputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['excelDto'] = this.excelDto ? this.excelDto.toJSON() : <any>undefined;\r\n    if (Array.isArray(this.messageError)) {\r\n      data['messageError'] = [];\r\n      for (let item of this.messageError)\r\n        data['messageError'].push(item);\r\n    }\r\n    data['isSuccessful'] = this.isSuccessful;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKiemTraThuocOutputDto {\r\n  excelDto: ReadExcelThuocDto;\r\n  messageError: string[] | undefined;\r\n  isSuccessful: boolean;\r\n}\r\n\r\nexport class KiemTraExcelThuocDto implements IKiemTraExcelThuocDto {\r\n  danhSachHopLe!: KiemTraThuocOutputDto[] | undefined;\r\n  danhSachLoi!: KiemTraThuocOutputDto[] | undefined;\r\n  isSuccessful!: boolean;\r\n  messageError!: string | undefined;\r\n  tokenListSuccess!: string;\r\n\r\n  constructor(data?: IKiemTraExcelThuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (Array.isArray(data['danhSachHopLe'])) {\r\n        this.danhSachHopLe = [] as any;\r\n        for (let item of data['danhSachHopLe'])\r\n          this.danhSachHopLe!.push(KiemTraThuocOutputDto.fromJS(item));\r\n      }\r\n      if (Array.isArray(data['danhSachLoi'])) {\r\n        this.danhSachLoi = [] as any;\r\n        for (let item of data['danhSachLoi'])\r\n          this.danhSachLoi!.push(KiemTraThuocOutputDto.fromJS(item));\r\n      }\r\n      this.isSuccessful = data['isSuccessful'];\r\n      this.messageError = data['messageError'];\r\n      this.tokenListSuccess = data['tokenListSuccess'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KiemTraExcelThuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KiemTraExcelThuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (Array.isArray(this.danhSachHopLe)) {\r\n      data['danhSachHopLe'] = [];\r\n      for (let item of this.danhSachHopLe)\r\n        data['danhSachHopLe'].push(item.toJSON());\r\n    }\r\n    if (Array.isArray(this.danhSachLoi)) {\r\n      data['danhSachLoi'] = [];\r\n      for (let item of this.danhSachLoi)\r\n        data['danhSachLoi'].push(item.toJSON());\r\n    }\r\n    data['isSuccessful'] = this.isSuccessful;\r\n    data['messageError'] = this.messageError;\r\n    data['tokenListSuccess'] = this.tokenListSuccess;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKiemTraExcelThuocDto {\r\n  danhSachHopLe: KiemTraThuocOutputDto[] | undefined;\r\n  danhSachLoi: KiemTraThuocOutputDto[] | undefined;\r\n  isSuccessful: boolean;\r\n  messageError: string | undefined;\r\n  tokenListSuccess: string;\r\n}\r\n\r\nexport class InsertThuocHopLeRequest implements IInsertThuocHopLeRequest {\r\n  token!: string;\r\n\r\n  constructor(data?: IInsertThuocHopLeRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.token = data['token'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): InsertThuocHopLeRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new InsertThuocHopLeRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['token'] = this.token;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IInsertThuocHopLeRequest {\r\n  token: string;\r\n}\r\n\r\nexport class CommonResultDtoOfInt32 implements ICommonResultDtoOfInt32 {\r\n  isSuccessful!: boolean;\r\n  errorCode!: string | undefined;\r\n  errorMessage!: string | undefined;\r\n  dataResult!: number;\r\n\r\n  constructor(data?: ICommonResultDtoOfInt32) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isSuccessful = data['isSuccessful'];\r\n      this.errorCode = data['errorCode'];\r\n      this.errorMessage = data['errorMessage'];\r\n      this.dataResult = data['dataResult'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CommonResultDtoOfInt32 {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CommonResultDtoOfInt32();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isSuccessful'] = this.isSuccessful;\r\n    data['errorCode'] = this.errorCode;\r\n    data['errorMessage'] = this.errorMessage;\r\n    data['dataResult'] = this.dataResult;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICommonResultDtoOfInt32 {\r\n  isSuccessful: boolean;\r\n  errorCode: string | undefined;\r\n  errorMessage: string | undefined;\r\n  dataResult: number;\r\n}\r\n\r\nexport class UpdateThuocHopLeRequest implements IUpdateThuocHopLeRequest {\r\n  token!: string;\r\n\r\n  constructor(data?: IUpdateThuocHopLeRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.token = data['token'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): UpdateThuocHopLeRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new UpdateThuocHopLeRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['token'] = this.token;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IUpdateThuocHopLeRequest {\r\n  token: string;\r\n}\r\n\r\nexport class KhangNguyenDto implements IKhangNguyenDto {\r\n  ten!: string | undefined;\r\n  moTa!: string | undefined;\r\n  listVacXin!: ComboBoxDto[] | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IKhangNguyenDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ten = data['ten'];\r\n      this.moTa = data['moTa'];\r\n      if (Array.isArray(data['listVacXin'])) {\r\n        this.listVacXin = [] as any;\r\n        for (let item of data['listVacXin'])\r\n          this.listVacXin!.push(ComboBoxDto.fromJS(item));\r\n      }\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KhangNguyenDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KhangNguyenDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ten'] = this.ten;\r\n    data['moTa'] = this.moTa;\r\n    if (Array.isArray(this.listVacXin)) {\r\n      data['listVacXin'] = [];\r\n      for (let item of this.listVacXin)\r\n        data['listVacXin'].push(item.toJSON());\r\n    }\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKhangNguyenDto {\r\n  ten: string | undefined;\r\n  moTa: string | undefined;\r\n  listVacXin: ComboBoxDto[] | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfKhangNguyenDto implements IPagedResultDtoOfKhangNguyenDto {\r\n  totalCount!: number;\r\n  items!: KhangNguyenDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfKhangNguyenDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(KhangNguyenDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfKhangNguyenDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfKhangNguyenDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfKhangNguyenDto {\r\n  totalCount: number;\r\n  items: KhangNguyenDto[] | undefined;\r\n}\r\n\r\nexport class KhoDuocPagedRequestDto implements IKhoDuocPagedRequestDto {\r\n  loaiKhoId!: number | undefined;\r\n  phongBanId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IKhoDuocPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiKhoId = data['loaiKhoId'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KhoDuocPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KhoDuocPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiKhoId'] = this.loaiKhoId;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKhoDuocPagedRequestDto {\r\n  loaiKhoId: number | undefined;\r\n  phongBanId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class KhoDuocDto implements IKhoDuocDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  phongBanName!: string | undefined;\r\n  loaiKhoName!: string | undefined;\r\n  phongBanId!: number;\r\n  loaiKhoId!: number;\r\n  khoDuoc!: boolean;\r\n  benhVienId!: number;\r\n  creationTime!: moment.Moment;\r\n  totalCount!: number;\r\n  isActive!: boolean;\r\n  isExists!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IKhoDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.phongBanName = data['phongBanName'];\r\n      this.loaiKhoName = data['loaiKhoName'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.loaiKhoId = data['loaiKhoId'];\r\n      this.khoDuoc = data['khoDuoc'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.creationTime = data['creationTime'] ? moment(data['creationTime'].toString()) : <any>undefined;\r\n      this.totalCount = data['totalCount'];\r\n      this.isActive = data['isActive'];\r\n      this.isExists = data['isExists'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): KhoDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new KhoDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['phongBanName'] = this.phongBanName;\r\n    data['loaiKhoName'] = this.loaiKhoName;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['loaiKhoId'] = this.loaiKhoId;\r\n    data['khoDuoc'] = this.khoDuoc;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['creationTime'] = this.creationTime ? this.creationTime.toISOString() : <any>undefined;\r\n    data['totalCount'] = this.totalCount;\r\n    data['isActive'] = this.isActive;\r\n    data['isExists'] = this.isExists;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IKhoDuocDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  phongBanName: string | undefined;\r\n  loaiKhoName: string | undefined;\r\n  phongBanId: number;\r\n  loaiKhoId: number;\r\n  khoDuoc: boolean;\r\n  benhVienId: number;\r\n  creationTime: moment.Moment;\r\n  totalCount: number;\r\n  isActive: boolean;\r\n  isExists: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfKhoDuocDto implements IPagedResultDtoOfKhoDuocDto {\r\n  totalCount!: number;\r\n  items!: KhoDuocDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfKhoDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(KhoDuocDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfKhoDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfKhoDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfKhoDuocDto {\r\n  totalCount: number;\r\n  items: KhoDuocDto[] | undefined;\r\n}\r\n\r\nexport class LoaiDuocPagedListInputDto implements ILoaiDuocPagedListInputDto {\r\n  loaiVatTuId!: number | undefined;\r\n  nhomLoaiDuocId!: number | undefined;\r\n  parentId!: number | undefined;\r\n  cap!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ILoaiDuocPagedListInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiVatTuId = data['loaiVatTuId'];\r\n      this.nhomLoaiDuocId = data['nhomLoaiDuocId'];\r\n      this.parentId = data['parentId'];\r\n      this.cap = data['cap'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LoaiDuocPagedListInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LoaiDuocPagedListInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiVatTuId'] = this.loaiVatTuId;\r\n    data['nhomLoaiDuocId'] = this.nhomLoaiDuocId;\r\n    data['parentId'] = this.parentId;\r\n    data['cap'] = this.cap;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILoaiDuocPagedListInputDto {\r\n  loaiVatTuId: number | undefined;\r\n  nhomLoaiDuocId: number | undefined;\r\n  parentId: number | undefined;\r\n  cap: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class LoaiDuocDto implements ILoaiDuocDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenEn!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  loaiVatTuId!: number | undefined;\r\n  nhomLoaiDuocId!: number | undefined;\r\n  parentId!: number | undefined;\r\n  cap!: number | undefined;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: ILoaiDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenEn = data['tenEn'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.loaiVatTuId = data['loaiVatTuId'];\r\n      this.nhomLoaiDuocId = data['nhomLoaiDuocId'];\r\n      this.parentId = data['parentId'];\r\n      this.cap = data['cap'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LoaiDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LoaiDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenEn'] = this.tenEn;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['loaiVatTuId'] = this.loaiVatTuId;\r\n    data['nhomLoaiDuocId'] = this.nhomLoaiDuocId;\r\n    data['parentId'] = this.parentId;\r\n    data['cap'] = this.cap;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILoaiDuocDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenEn: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  loaiVatTuId: number | undefined;\r\n  nhomLoaiDuocId: number | undefined;\r\n  parentId: number | undefined;\r\n  cap: number | undefined;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfLoaiDuocDto implements IPagedResultDtoOfLoaiDuocDto {\r\n  totalCount!: number;\r\n  items!: LoaiDuocDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfLoaiDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(LoaiDuocDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfLoaiDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfLoaiDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfLoaiDuocDto {\r\n  totalCount: number;\r\n  items: LoaiDuocDto[] | undefined;\r\n}\r\n\r\nexport class LoaiGiaDto implements ILoaiGiaDto {\r\n  nhomGiaId!: number;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  ghiChu!: string | undefined;\r\n  giaHoTro!: number | undefined;\r\n  fieldName!: string | undefined;\r\n  loaiIdRef!: string | undefined;\r\n  tienTeId!: number | undefined;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  isExists!: boolean;\r\n  tenTienTe!: string | undefined;\r\n  tenNhomGia!: string | undefined;\r\n  readonly loaiIdRefShow!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ILoaiGiaDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nhomGiaId = data['nhomGiaId'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.ghiChu = data['ghiChu'];\r\n      this.giaHoTro = data['giaHoTro'];\r\n      this.fieldName = data['fieldName'];\r\n      this.loaiIdRef = data['loaiIdRef'];\r\n      this.tienTeId = data['tienTeId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.isExists = data['isExists'];\r\n      this.tenTienTe = data['tenTienTe'];\r\n      this.tenNhomGia = data['tenNhomGia'];\r\n      (<any>this).loaiIdRefShow = data['loaiIdRefShow'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LoaiGiaDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LoaiGiaDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nhomGiaId'] = this.nhomGiaId;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['ghiChu'] = this.ghiChu;\r\n    data['giaHoTro'] = this.giaHoTro;\r\n    data['fieldName'] = this.fieldName;\r\n    data['loaiIdRef'] = this.loaiIdRef;\r\n    data['tienTeId'] = this.tienTeId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['isExists'] = this.isExists;\r\n    data['tenTienTe'] = this.tenTienTe;\r\n    data['tenNhomGia'] = this.tenNhomGia;\r\n    data['loaiIdRefShow'] = this.loaiIdRefShow;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILoaiGiaDto {\r\n  nhomGiaId: number;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  ghiChu: string | undefined;\r\n  giaHoTro: number | undefined;\r\n  fieldName: string | undefined;\r\n  loaiIdRef: string | undefined;\r\n  tienTeId: number | undefined;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  isExists: boolean;\r\n  tenTienTe: string | undefined;\r\n  tenNhomGia: string | undefined;\r\n  loaiIdRefShow: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class LoaiGiaPagedRequestDto implements ILoaiGiaPagedRequestDto {\r\n  tienTeId!: number | undefined;\r\n  nhomGiaId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ILoaiGiaPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.tienTeId = data['tienTeId'];\r\n      this.nhomGiaId = data['nhomGiaId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LoaiGiaPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LoaiGiaPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['tienTeId'] = this.tienTeId;\r\n    data['nhomGiaId'] = this.nhomGiaId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILoaiGiaPagedRequestDto {\r\n  tienTeId: number | undefined;\r\n  nhomGiaId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfLoaiGiaDto implements IPagedResultDtoOfLoaiGiaDto {\r\n  totalCount!: number;\r\n  items!: LoaiGiaDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfLoaiGiaDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(LoaiGiaDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfLoaiGiaDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfLoaiGiaDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfLoaiGiaDto {\r\n  totalCount: number;\r\n  items: LoaiGiaDto[] | undefined;\r\n}\r\n\r\nexport class LoaiVatTuDto implements ILoaiVatTuDto {\r\n  ten!: string | undefined;\r\n  tenEn!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: ILoaiVatTuDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ten = data['ten'];\r\n      this.tenEn = data['tenEn'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LoaiVatTuDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LoaiVatTuDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ten'] = this.ten;\r\n    data['tenEn'] = this.tenEn;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILoaiVatTuDto {\r\n  ten: string | undefined;\r\n  tenEn: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfLoaiVatTuDto implements IPagedResultDtoOfLoaiVatTuDto {\r\n  totalCount!: number;\r\n  items!: LoaiVatTuDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfLoaiVatTuDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(LoaiVatTuDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfLoaiVatTuDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfLoaiVatTuDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfLoaiVatTuDto {\r\n  totalCount: number;\r\n  items: LoaiVatTuDto[] | undefined;\r\n}\r\n\r\nexport class NhaCungCapDto implements INhaCungCapDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenEn!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  diaChi!: string | undefined;\r\n  dienThoai!: string | undefined;\r\n  fax!: string | undefined;\r\n  email!: string | undefined;\r\n  maSoThue!: string | undefined;\r\n  giamDoc!: string | undefined;\r\n  nguoiLienHe!: string | undefined;\r\n  loaiHinhCty!: number;\r\n  isActive!: boolean;\r\n  benhVienId!: number;\r\n  isExists!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: INhaCungCapDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenEn = data['tenEn'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.diaChi = data['diaChi'];\r\n      this.dienThoai = data['dienThoai'];\r\n      this.fax = data['fax'];\r\n      this.email = data['email'];\r\n      this.maSoThue = data['maSoThue'];\r\n      this.giamDoc = data['giamDoc'];\r\n      this.nguoiLienHe = data['nguoiLienHe'];\r\n      this.loaiHinhCty = data['loaiHinhCty'];\r\n      this.isActive = data['isActive'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isExists = data['isExists'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhaCungCapDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhaCungCapDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenEn'] = this.tenEn;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['diaChi'] = this.diaChi;\r\n    data['dienThoai'] = this.dienThoai;\r\n    data['fax'] = this.fax;\r\n    data['email'] = this.email;\r\n    data['maSoThue'] = this.maSoThue;\r\n    data['giamDoc'] = this.giamDoc;\r\n    data['nguoiLienHe'] = this.nguoiLienHe;\r\n    data['loaiHinhCty'] = this.loaiHinhCty;\r\n    data['isActive'] = this.isActive;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isExists'] = this.isExists;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhaCungCapDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenEn: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  diaChi: string | undefined;\r\n  dienThoai: string | undefined;\r\n  fax: string | undefined;\r\n  email: string | undefined;\r\n  maSoThue: string | undefined;\r\n  giamDoc: string | undefined;\r\n  nguoiLienHe: string | undefined;\r\n  loaiHinhCty: number;\r\n  isActive: boolean;\r\n  benhVienId: number;\r\n  isExists: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class NhaCungCapPagedRequestDto implements INhaCungCapPagedRequestDto {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: INhaCungCapPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhaCungCapPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhaCungCapPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhaCungCapPagedRequestDto {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfNhaCungCapDto implements IPagedResultDtoOfNhaCungCapDto {\r\n  totalCount!: number;\r\n  items!: NhaCungCapDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfNhaCungCapDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(NhaCungCapDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfNhaCungCapDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfNhaCungCapDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfNhaCungCapDto {\r\n  totalCount: number;\r\n  items: NhaCungCapDto[] | undefined;\r\n}\r\n\r\nexport enum NHAN_LUC_LOAI_HINH_ANH {\r\n  AnhDaiDien = 1,\r\n  ChuKy = 2,\r\n}\r\n\r\nexport class NhanLucPagedRequestDto implements INhanLucPagedRequestDto {\r\n  benhVienId!: number | undefined;\r\n  phongBanId!: number | undefined;\r\n  tinhTrang!: number | undefined;\r\n  chucVuId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: INhanLucPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.benhVienId = data['benhVienId'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.tinhTrang = data['tinhTrang'];\r\n      this.chucVuId = data['chucVuId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhanLucPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhanLucPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['tinhTrang'] = this.tinhTrang;\r\n    data['chucVuId'] = this.chucVuId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhanLucPagedRequestDto {\r\n  benhVienId: number | undefined;\r\n  phongBanId: number | undefined;\r\n  tinhTrang: number | undefined;\r\n  chucVuId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class NhanLucDto implements INhanLucDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  ngaySinh!: moment.Moment | undefined;\r\n  gioiTinh!: number;\r\n  dienThoai!: string | undefined;\r\n  cmnd!: string | undefined;\r\n  ngayCap!: moment.Moment | undefined;\r\n  noiCapCmnd!: number | undefined;\r\n  phongBanId!: number | undefined;\r\n  quocTichId!: number | undefined;\r\n  tinhId!: number | undefined;\r\n  huyenId!: number | undefined;\r\n  xaId!: number | undefined;\r\n  diaChi!: string | undefined;\r\n  danTocId!: number | undefined;\r\n  tinhTrang!: number | undefined;\r\n  chucVuId!: number | undefined;\r\n  chucDanhId!: number | undefined;\r\n  loaiNhanLucId!: number | undefined;\r\n  trinhDoChuyenMonId!: number | undefined;\r\n  chuyenNganhChinhId!: number | undefined;\r\n  chuyenNganhPhuId!: number | undefined;\r\n  soChungChiHanhNghe!: string | undefined;\r\n  ngayCapChinhChiHanhNghe!: moment.Moment | undefined;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: INhanLucDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.ngaySinh = data['ngaySinh'] ? moment(data['ngaySinh'].toString()) : <any>undefined;\r\n      this.gioiTinh = data['gioiTinh'];\r\n      this.dienThoai = data['dienThoai'];\r\n      this.cmnd = data['cmnd'];\r\n      this.ngayCap = data['ngayCap'] ? moment(data['ngayCap'].toString()) : <any>undefined;\r\n      this.noiCapCmnd = data['noiCapCmnd'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.quocTichId = data['quocTichId'];\r\n      this.tinhId = data['tinhId'];\r\n      this.huyenId = data['huyenId'];\r\n      this.xaId = data['xaId'];\r\n      this.diaChi = data['diaChi'];\r\n      this.danTocId = data['danTocId'];\r\n      this.tinhTrang = data['tinhTrang'];\r\n      this.chucVuId = data['chucVuId'];\r\n      this.chucDanhId = data['chucDanhId'];\r\n      this.loaiNhanLucId = data['loaiNhanLucId'];\r\n      this.trinhDoChuyenMonId = data['trinhDoChuyenMonId'];\r\n      this.chuyenNganhChinhId = data['chuyenNganhChinhId'];\r\n      this.chuyenNganhPhuId = data['chuyenNganhPhuId'];\r\n      this.soChungChiHanhNghe = data['soChungChiHanhNghe'];\r\n      this.ngayCapChinhChiHanhNghe = data['ngayCapChinhChiHanhNghe'] ? moment(data['ngayCapChinhChiHanhNghe'].toString()) : <any>undefined;\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhanLucDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhanLucDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['ngaySinh'] = this.ngaySinh ? this.ngaySinh.toISOString() : <any>undefined;\r\n    data['gioiTinh'] = this.gioiTinh;\r\n    data['dienThoai'] = this.dienThoai;\r\n    data['cmnd'] = this.cmnd;\r\n    data['ngayCap'] = this.ngayCap ? this.ngayCap.toISOString() : <any>undefined;\r\n    data['noiCapCmnd'] = this.noiCapCmnd;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['quocTichId'] = this.quocTichId;\r\n    data['tinhId'] = this.tinhId;\r\n    data['huyenId'] = this.huyenId;\r\n    data['xaId'] = this.xaId;\r\n    data['diaChi'] = this.diaChi;\r\n    data['danTocId'] = this.danTocId;\r\n    data['tinhTrang'] = this.tinhTrang;\r\n    data['chucVuId'] = this.chucVuId;\r\n    data['chucDanhId'] = this.chucDanhId;\r\n    data['loaiNhanLucId'] = this.loaiNhanLucId;\r\n    data['trinhDoChuyenMonId'] = this.trinhDoChuyenMonId;\r\n    data['chuyenNganhChinhId'] = this.chuyenNganhChinhId;\r\n    data['chuyenNganhPhuId'] = this.chuyenNganhPhuId;\r\n    data['soChungChiHanhNghe'] = this.soChungChiHanhNghe;\r\n    data['ngayCapChinhChiHanhNghe'] = this.ngayCapChinhChiHanhNghe ? this.ngayCapChinhChiHanhNghe.toISOString() : <any>undefined;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhanLucDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  ngaySinh: moment.Moment | undefined;\r\n  gioiTinh: number;\r\n  dienThoai: string | undefined;\r\n  cmnd: string | undefined;\r\n  ngayCap: moment.Moment | undefined;\r\n  noiCapCmnd: number | undefined;\r\n  phongBanId: number | undefined;\r\n  quocTichId: number | undefined;\r\n  tinhId: number | undefined;\r\n  huyenId: number | undefined;\r\n  xaId: number | undefined;\r\n  diaChi: string | undefined;\r\n  danTocId: number | undefined;\r\n  tinhTrang: number | undefined;\r\n  chucVuId: number | undefined;\r\n  chucDanhId: number | undefined;\r\n  loaiNhanLucId: number | undefined;\r\n  trinhDoChuyenMonId: number | undefined;\r\n  chuyenNganhChinhId: number | undefined;\r\n  chuyenNganhPhuId: number | undefined;\r\n  soChungChiHanhNghe: string | undefined;\r\n  ngayCapChinhChiHanhNghe: moment.Moment | undefined;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfNhanLucDto implements IPagedResultDtoOfNhanLucDto {\r\n  totalCount!: number;\r\n  items!: NhanLucDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfNhanLucDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(NhanLucDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfNhanLucDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfNhanLucDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfNhanLucDto {\r\n  totalCount: number;\r\n  items: NhanLucDto[] | undefined;\r\n}\r\n\r\nexport class NhomDuocPagedListInputDto implements INhomDuocPagedListInputDto {\r\n  phanNhomDuocId!: number | undefined;\r\n  loaiThuoc!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: INhomDuocPagedListInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.phanNhomDuocId = data['phanNhomDuocId'];\r\n      this.loaiThuoc = data['loaiThuoc'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhomDuocPagedListInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhomDuocPagedListInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['phanNhomDuocId'] = this.phanNhomDuocId;\r\n    data['loaiThuoc'] = this.loaiThuoc;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhomDuocPagedListInputDto {\r\n  phanNhomDuocId: number | undefined;\r\n  loaiThuoc: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class NhomDuocDto implements INhomDuocDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenEn!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  phanNhomDuocId!: number | undefined;\r\n  loaiThuoc!: number | undefined;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: INhomDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenEn = data['tenEn'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.phanNhomDuocId = data['phanNhomDuocId'];\r\n      this.loaiThuoc = data['loaiThuoc'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhomDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhomDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenEn'] = this.tenEn;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['phanNhomDuocId'] = this.phanNhomDuocId;\r\n    data['loaiThuoc'] = this.loaiThuoc;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhomDuocDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenEn: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  phanNhomDuocId: number | undefined;\r\n  loaiThuoc: number | undefined;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfNhomDuocDto implements IPagedResultDtoOfNhomDuocDto {\r\n  totalCount!: number;\r\n  items!: NhomDuocDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfNhomDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(NhomDuocDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfNhomDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfNhomDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfNhomDuocDto {\r\n  totalCount: number;\r\n  items: NhomDuocDto[] | undefined;\r\n}\r\n\r\nexport enum NhomDvktBhyt_ThuocVtyt {\r\n  DichVuKyThuat = 0,\r\n  Thuoc = 1,\r\n  VatTuYTe = 2,\r\n}\r\n\r\nexport class NhomDvktBhytPagedListInputDto implements INhomDvktBhytPagedListInputDto {\r\n  thuocVtyt!: NhomDvktBhyt_ThuocVtyt;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: INhomDvktBhytPagedListInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.thuocVtyt = data['thuocVtyt'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhomDvktBhytPagedListInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhomDvktBhytPagedListInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['thuocVtyt'] = this.thuocVtyt;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhomDvktBhytPagedListInputDto {\r\n  thuocVtyt: NhomDvktBhyt_ThuocVtyt;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class NhomDvktBhytDto implements INhomDvktBhytDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  thuocVtyt!: NhomDvktBhyt_ThuocVtyt;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: INhomDvktBhytDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.thuocVtyt = data['thuocVtyt'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhomDvktBhytDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhomDvktBhytDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['thuocVtyt'] = this.thuocVtyt;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhomDvktBhytDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  thuocVtyt: NhomDvktBhyt_ThuocVtyt;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfNhomDvktBhytDto implements IPagedResultDtoOfNhomDvktBhytDto {\r\n  totalCount!: number;\r\n  items!: NhomDvktBhytDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfNhomDvktBhytDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(NhomDvktBhytDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfNhomDvktBhytDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfNhomDvktBhytDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfNhomDvktBhytDto {\r\n  totalCount: number;\r\n  items: NhomDvktBhytDto[] | undefined;\r\n}\r\n\r\nexport class GetPermissionInputDto implements IGetPermissionInputDto {\r\n  benhVienId!: number | undefined;\r\n  isRoleStatic!: boolean;\r\n\r\n  constructor(data?: IGetPermissionInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isRoleStatic = data['isRoleStatic'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GetPermissionInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GetPermissionInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isRoleStatic'] = this.isRoleStatic;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGetPermissionInputDto {\r\n  benhVienId: number | undefined;\r\n  isRoleStatic: boolean;\r\n}\r\n\r\nexport class ProviderInfoDto implements IProviderInfoDto {\r\n  providerName!: string | undefined;\r\n  providerKey!: string | undefined;\r\n\r\n  constructor(data?: IProviderInfoDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.providerName = data['providerName'];\r\n      this.providerKey = data['providerKey'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ProviderInfoDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ProviderInfoDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['providerName'] = this.providerName;\r\n    data['providerKey'] = this.providerKey;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IProviderInfoDto {\r\n  providerName: string | undefined;\r\n  providerKey: string | undefined;\r\n}\r\n\r\nexport class PermissionGrantInfoDto implements IPermissionGrantInfoDto {\r\n  name!: string | undefined;\r\n  displayName!: string | undefined;\r\n  parentName!: string | undefined;\r\n  isGranted!: boolean;\r\n  allowedProviders!: string[] | undefined;\r\n  grantedProviders!: ProviderInfoDto[] | undefined;\r\n\r\n  constructor(data?: IPermissionGrantInfoDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.name = data['name'];\r\n      this.displayName = data['displayName'];\r\n      this.parentName = data['parentName'];\r\n      this.isGranted = data['isGranted'];\r\n      if (Array.isArray(data['allowedProviders'])) {\r\n        this.allowedProviders = [] as any;\r\n        for (let item of data['allowedProviders'])\r\n          this.allowedProviders!.push(item);\r\n      }\r\n      if (Array.isArray(data['grantedProviders'])) {\r\n        this.grantedProviders = [] as any;\r\n        for (let item of data['grantedProviders'])\r\n          this.grantedProviders!.push(ProviderInfoDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PermissionGrantInfoDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PermissionGrantInfoDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['displayName'] = this.displayName;\r\n    data['parentName'] = this.parentName;\r\n    data['isGranted'] = this.isGranted;\r\n    if (Array.isArray(this.allowedProviders)) {\r\n      data['allowedProviders'] = [];\r\n      for (let item of this.allowedProviders)\r\n        data['allowedProviders'].push(item);\r\n    }\r\n    if (Array.isArray(this.grantedProviders)) {\r\n      data['grantedProviders'] = [];\r\n      for (let item of this.grantedProviders)\r\n        data['grantedProviders'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPermissionGrantInfoDto {\r\n  name: string | undefined;\r\n  displayName: string | undefined;\r\n  parentName: string | undefined;\r\n  isGranted: boolean;\r\n  allowedProviders: string[] | undefined;\r\n  grantedProviders: ProviderInfoDto[] | undefined;\r\n}\r\n\r\nexport class PermissionGroupDto implements IPermissionGroupDto {\r\n  name!: string | undefined;\r\n  displayName!: string | undefined;\r\n  permissions!: PermissionGrantInfoDto[] | undefined;\r\n\r\n  constructor(data?: IPermissionGroupDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.name = data['name'];\r\n      this.displayName = data['displayName'];\r\n      if (Array.isArray(data['permissions'])) {\r\n        this.permissions = [] as any;\r\n        for (let item of data['permissions'])\r\n          this.permissions!.push(PermissionGrantInfoDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PermissionGroupDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PermissionGroupDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['name'] = this.name;\r\n    data['displayName'] = this.displayName;\r\n    if (Array.isArray(this.permissions)) {\r\n      data['permissions'] = [];\r\n      for (let item of this.permissions)\r\n        data['permissions'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPermissionGroupDto {\r\n  name: string | undefined;\r\n  displayName: string | undefined;\r\n  permissions: PermissionGrantInfoDto[] | undefined;\r\n}\r\n\r\nexport class GetPermissionListResultDto implements IGetPermissionListResultDto {\r\n  entityDisplayName!: string | undefined;\r\n  groups!: PermissionGroupDto[] | undefined;\r\n\r\n  constructor(data?: IGetPermissionListResultDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.entityDisplayName = data['entityDisplayName'];\r\n      if (Array.isArray(data['groups'])) {\r\n        this.groups = [] as any;\r\n        for (let item of data['groups'])\r\n          this.groups!.push(PermissionGroupDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GetPermissionListResultDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GetPermissionListResultDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['entityDisplayName'] = this.entityDisplayName;\r\n    if (Array.isArray(this.groups)) {\r\n      data['groups'] = [];\r\n      for (let item of this.groups)\r\n        data['groups'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGetPermissionListResultDto {\r\n  entityDisplayName: string | undefined;\r\n  groups: PermissionGroupDto[] | undefined;\r\n}\r\n\r\nexport enum LOAI_PHAC_DO {\r\n  PhacDoBac1 = 1,\r\n  PhacDoBac2 = 2,\r\n}\r\n\r\nexport class PhacDoDieuTriPagedRequestDto implements IPhacDoDieuTriPagedRequestDto {\r\n  loaiPhacDo!: LOAI_PHAC_DO;\r\n  isActive!: boolean | undefined;\r\n  filter!: string | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPhacDoDieuTriPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiPhacDo = data['loaiPhacDo'];\r\n      this.isActive = data['isActive'];\r\n      this.filter = data['filter'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PhacDoDieuTriPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PhacDoDieuTriPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiPhacDo'] = this.loaiPhacDo;\r\n    data['isActive'] = this.isActive;\r\n    data['filter'] = this.filter;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPhacDoDieuTriPagedRequestDto {\r\n  loaiPhacDo: LOAI_PHAC_DO;\r\n  isActive: boolean | undefined;\r\n  filter: string | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PhacDoDieuTriDto implements IPhacDoDieuTriDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  loaiPhacDo!: LOAI_PHAC_DO;\r\n  isActive!: boolean;\r\n  readonly trangThaiShow!: string | undefined;\r\n  readonly loaiPhacDoShow!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IPhacDoDieuTriDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.loaiPhacDo = data['loaiPhacDo'];\r\n      this.isActive = data['isActive'];\r\n      (<any>this).trangThaiShow = data['trangThaiShow'];\r\n      (<any>this).loaiPhacDoShow = data['loaiPhacDoShow'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PhacDoDieuTriDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PhacDoDieuTriDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['loaiPhacDo'] = this.loaiPhacDo;\r\n    data['isActive'] = this.isActive;\r\n    data['trangThaiShow'] = this.trangThaiShow;\r\n    data['loaiPhacDoShow'] = this.loaiPhacDoShow;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPhacDoDieuTriDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  loaiPhacDo: LOAI_PHAC_DO;\r\n  isActive: boolean;\r\n  trangThaiShow: string | undefined;\r\n  loaiPhacDoShow: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfPhacDoDieuTriDto implements IPagedResultDtoOfPhacDoDieuTriDto {\r\n  totalCount!: number;\r\n  items!: PhacDoDieuTriDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfPhacDoDieuTriDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(PhacDoDieuTriDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfPhacDoDieuTriDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfPhacDoDieuTriDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfPhacDoDieuTriDto {\r\n  totalCount: number;\r\n  items: PhacDoDieuTriDto[] | undefined;\r\n}\r\n\r\nexport class PhanNhomDuocDto implements IPhanNhomDuocDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  isActive!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: IPhanNhomDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.isActive = data['isActive'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PhanNhomDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PhanNhomDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['isActive'] = this.isActive;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPhanNhomDuocDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  isActive: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfPhanNhomDuocDto implements IPagedResultDtoOfPhanNhomDuocDto {\r\n  totalCount!: number;\r\n  items!: PhanNhomDuocDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfPhanNhomDuocDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(PhanNhomDuocDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfPhanNhomDuocDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfPhanNhomDuocDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfPhanNhomDuocDto {\r\n  totalCount: number;\r\n  items: PhanNhomDuocDto[] | undefined;\r\n}\r\n\r\nexport class PhongBanTreeDto implements IPhongBanTreeDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  parentId!: number | undefined;\r\n  benhVienId!: number;\r\n  readonly id!: number;\r\n\r\n  constructor(data?: IPhongBanTreeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.parentId = data['parentId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      (<any>this).id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PhongBanTreeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PhongBanTreeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['parentId'] = this.parentId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPhongBanTreeDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  parentId: number | undefined;\r\n  benhVienId: number;\r\n  id: number;\r\n}\r\n\r\nexport class PagedRequestPhongBanDto implements IPagedRequestPhongBanDto {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedRequestPhongBanDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedRequestPhongBanDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedRequestPhongBanDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedRequestPhongBanDto {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PhongBanDto implements IPhongBanDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenEn!: string | undefined;\r\n  loaiPhongBanId!: number | undefined;\r\n  cap!: number;\r\n  parentId!: number | undefined;\r\n  loaiPhongBenhId!: number | undefined;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  loaiPhongBan!: string | undefined;\r\n  parentName!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IPhongBanDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenEn = data['tenEn'];\r\n      this.loaiPhongBanId = data['loaiPhongBanId'];\r\n      this.cap = data['cap'];\r\n      this.parentId = data['parentId'];\r\n      this.loaiPhongBenhId = data['loaiPhongBenhId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.loaiPhongBan = data['loaiPhongBan'];\r\n      this.parentName = data['parentName'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PhongBanDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PhongBanDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenEn'] = this.tenEn;\r\n    data['loaiPhongBanId'] = this.loaiPhongBanId;\r\n    data['cap'] = this.cap;\r\n    data['parentId'] = this.parentId;\r\n    data['loaiPhongBenhId'] = this.loaiPhongBenhId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['loaiPhongBan'] = this.loaiPhongBan;\r\n    data['parentName'] = this.parentName;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPhongBanDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenEn: string | undefined;\r\n  loaiPhongBanId: number | undefined;\r\n  cap: number;\r\n  parentId: number | undefined;\r\n  loaiPhongBenhId: number | undefined;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  loaiPhongBan: string | undefined;\r\n  parentName: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfPhongBanDto implements IPagedResultDtoOfPhongBanDto {\r\n  totalCount!: number;\r\n  items!: PhongBanDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfPhongBanDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(PhongBanDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfPhongBanDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfPhongBanDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfPhongBanDto {\r\n  totalCount: number;\r\n  items: PhongBanDto[] | undefined;\r\n}\r\n\r\nexport class FetchBenhIcdSearchRequest implements IFetchBenhIcdSearchRequest {\r\n  id!: number | undefined;\r\n  chuongId!: number | undefined;\r\n  nhomId!: number | undefined;\r\n  isSelect!: boolean;\r\n  maBenh!: string | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IFetchBenhIcdSearchRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.chuongId = data['chuongId'];\r\n      this.nhomId = data['nhomId'];\r\n      this.isSelect = data['isSelect'];\r\n      this.maBenh = data['maBenh'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): FetchBenhIcdSearchRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new FetchBenhIcdSearchRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['chuongId'] = this.chuongId;\r\n    data['nhomId'] = this.nhomId;\r\n    data['isSelect'] = this.isSelect;\r\n    data['maBenh'] = this.maBenh;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IFetchBenhIcdSearchRequest {\r\n  id: number | undefined;\r\n  chuongId: number | undefined;\r\n  nhomId: number | undefined;\r\n  isSelect: boolean;\r\n  maBenh: string | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfComboBoxDto implements IPagedResultDtoOfComboBoxDto {\r\n  totalCount!: number;\r\n  items!: ComboBoxDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfComboBoxDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(ComboBoxDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfComboBoxDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfComboBoxDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfComboBoxDto {\r\n  totalCount: number;\r\n  items: ComboBoxDto[] | undefined;\r\n}\r\n\r\nexport class BenhIcdSearchDto implements IBenhIcdSearchDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenNhom!: string | undefined;\r\n  tenChuong!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IBenhIcdSearchDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenNhom = data['tenNhom'];\r\n      this.tenChuong = data['tenChuong'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): BenhIcdSearchDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new BenhIcdSearchDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenNhom'] = this.tenNhom;\r\n    data['tenChuong'] = this.tenChuong;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IBenhIcdSearchDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenNhom: string | undefined;\r\n  tenChuong: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfBenhIcdSearchDto implements IPagedResultDtoOfBenhIcdSearchDto {\r\n  totalCount!: number;\r\n  items!: BenhIcdSearchDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfBenhIcdSearchDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(BenhIcdSearchDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfBenhIcdSearchDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfBenhIcdSearchDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfBenhIcdSearchDto {\r\n  totalCount: number;\r\n  items: BenhIcdSearchDto[] | undefined;\r\n}\r\n\r\nexport enum SelectOptionType {\r\n  GioiTinh = 0,\r\n  GioiTinhCon = 1,\r\n  CapDoDonViHanhChinh = 2,\r\n  LoaiBenhVien = 3,\r\n  NhanLucTinhTrang = 4,\r\n  LoaiThuoc = 5,\r\n  DonViThoiGianSuDung = 6,\r\n  ToaThuocMauLoai = 7,\r\n  NhomDvktBhytThuocVtyt = 8,\r\n  BenhNhanLoaiDiaChi = 9,\r\n  NoiTuVong = 10,\r\n  CapCoSo = 11,\r\n  LoaiPhacDo = 12,\r\n  MucDoDapUng = 13,\r\n  LoaiPhieu = 14,\r\n  BHYTTuyen = 15,\r\n  KyBaoCao3081 = 16,\r\n  TrangThaiBaoCao3081 = 17,\r\n  KhamBenhNgoaiTruKetQuaKham = 18,\r\n  BenhTruyenNhiemPhanLoaiChanDoan = 19,\r\n  BenhTruyenNhiemTiemChung = 20,\r\n  BenhTruyenNhiemTinhTrangTruongHopBenh = 21,\r\n  BenhTruyenNhiemLoaiXetNghiem = 22,\r\n  BenhTruyenNhiemLoaiCoSoDieuTri = 23,\r\n  BenhTruyenNhiemKetQuaXetNghiem = 24,\r\n  DoiTuongXetNghiem = 25,\r\n  TrangThaiXetNghiem = 26,\r\n  Tinh = 27,\r\n  TinhSession = 28,\r\n  Huyen = 29,\r\n  HuyenSesion = 30,\r\n  Xa = 31,\r\n  Thon = 32,\r\n  XaHuyenTinh = 33,\r\n  HoatChat = 34,\r\n  LoaiVatTu = 35,\r\n  NhomDuoc = 36,\r\n  DonViTinh = 37,\r\n  DonViTinhCoBan = 38,\r\n  LoaiDuoc = 39,\r\n  PhanNhomDuoc = 40,\r\n  ChuongTrinh = 41,\r\n  NhomDichVuKyThuatBaoHiem = 42,\r\n  NhomDvktBhytThuoc = 43,\r\n  PhongBan = 44,\r\n  PhongBanByDichVu = 45,\r\n  NhomThamSoHeThong = 46,\r\n  BenhVienHienTaiVaCapCon = 47,\r\n  TienTe = 48,\r\n  BacSiToaThuocMau = 49,\r\n  LoaiGia = 50,\r\n  NhomGia = 51,\r\n  DuocToaThuocMau = 52,\r\n  ICD = 53,\r\n  ICDMAVN = 54,\r\n  ChuongICD = 55,\r\n  NhomICD = 56,\r\n  NhomDichVu = 57,\r\n  DichVu = 58,\r\n  DichVuDaCauHinhPhongBan = 59,\r\n  DichVuTiepDon = 60,\r\n  NhomDichVuXetNghiem = 61,\r\n  NhomDichVuCDHA = 62,\r\n  NhanLuc = 63,\r\n  LoaiKhuyetTat = 64,\r\n  BienPhapPhaThai = 65,\r\n  BenhNhan = 66,\r\n  KhoDuoc = 67,\r\n  HoGiaDinh = 68,\r\n  BenhTruyenNhiem = 69,\r\n  BenhTruyenNhiemBaoCaoThang = 70,\r\n  AttpCoSoSXKDThucPham = 71,\r\n  DoiTuongBaoHiemYTe = 72,\r\n  NhaCungCap = 73,\r\n  DichVuKyThuat = 74,\r\n  DichVuTheoNhomDichVu = 75,\r\n  MaDichVuKyThuat = 76,\r\n  ChungTuSoLoNhap = 77,\r\n  LoaiGiaByDoiTuong = 78,\r\n  ChungTuSoLoNhapView = 79,\r\n  ThietBi = 80,\r\n  MauKetQuaChanDoanHinhAnh = 81,\r\n  KhoaNoiTru = 82,\r\n  KhangNguyen = 83,\r\n  VacXin = 84,\r\n  PhongBenhTrucThuocKhoa = 85,\r\n  GiuongBenhTrongPhongBenh = 86,\r\n  BenhVienCon = 87,\r\n  GoiCuoc = 88,\r\n  GoiCuocCascader = 89,\r\n  KhuVucLuuTru = 90,\r\n  NhomDoiTuong = 91,\r\n  LoaiPhongBan = 92,\r\n  NhomTSHeThong = 93,\r\n  LoaiDichVu = 94,\r\n  DanToc = 95,\r\n  ChucVu = 96,\r\n  ChucDanh = 97,\r\n  LoaiNhanLuc = 98,\r\n  TrinhDoChuyenMon = 99,\r\n  LoaiChuyenNganh = 100,\r\n  QuocGia = 101,\r\n  LoaiPhongBenh = 102,\r\n  GD_HINHTHUC = 103,\r\n  GD_PHUONGTIEN = 104,\r\n  LoaiBenhAnNgoaiTru = 105,\r\n  KhoaDieuTri = 106,\r\n  DuocPhamNguonNhapHang = 107,\r\n  DuocPhamNguonNhapHangDuTruThuoc = 108,\r\n  PhongBenh = 109,\r\n  NoiCapCanCuoc = 110,\r\n  DonViTaiSan = 111,\r\n  LoaiTaiSan = 112,\r\n  TrangThaiTaiSan = 113,\r\n  LyDoGiamTaiSan = 114,\r\n  DuongDung = 115,\r\n  KieuHo = 116,\r\n  XetNghiemLamQueThu = 117,\r\n  KetQuaDieuTri = 118,\r\n  PhamLoaiBenhNhan = 119,\r\n  TonGiao = 120,\r\n  NgheNghiep = 121,\r\n  QuanHeChuHo = 122,\r\n  QuanHeChuHoVaChuHo = 123,\r\n  TinhTrangHonNhan = 124,\r\n  TinhTrangLamViec = 125,\r\n  TrinhDoHocVan = 126,\r\n  BienPhapTranhThai = 127,\r\n  LoaiBenh = 128,\r\n  LoaiKhoDuoc = 129,\r\n  TinhTrangHienTai = 130,\r\n  LoaiNha = 131,\r\n  NguonNuoc = 132,\r\n  LoaiNhaVeSinh = 133,\r\n  XuLyRac = 134,\r\n  LyDoPhieuThu = 135,\r\n  LyDoPhieuChi = 136,\r\n  DiaDiemAnUong = 137,\r\n  TrieuChung = 138,\r\n  LayMau = 139,\r\n  LoaiBienLai = 140,\r\n  HinhThucThanhToan = 141,\r\n}\r\n\r\nexport class SelectOptionInputDto implements ISelectOptionInputDto {\r\n  type!: SelectOptionType;\r\n  cascader!: string | undefined;\r\n  benhVienId!: number;\r\n  readonly cascaderId!: number | undefined;\r\n  readonly keyCache!: string | undefined;\r\n\r\n  constructor(data?: ISelectOptionInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.type = data['type'];\r\n      this.cascader = data['cascader'];\r\n      this.benhVienId = data['benhVienId'];\r\n      (<any>this).cascaderId = data['cascaderId'];\r\n      (<any>this).keyCache = data['keyCache'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SelectOptionInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SelectOptionInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['type'] = this.type;\r\n    data['cascader'] = this.cascader;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['cascaderId'] = this.cascaderId;\r\n    data['keyCache'] = this.keyCache;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISelectOptionInputDto {\r\n  type: SelectOptionType;\r\n  cascader: string | undefined;\r\n  benhVienId: number;\r\n  cascaderId: number | undefined;\r\n  keyCache: string | undefined;\r\n}\r\n\r\nexport enum SelectSearchServerType {\r\n  Huyen = 0,\r\n  Xa = 1,\r\n}\r\n\r\nexport class SelectSearchServerDto implements ISelectSearchServerDto {\r\n  value!: string | undefined;\r\n  readonly valueId!: number | undefined;\r\n  type!: SelectSearchServerType;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ISelectSearchServerDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.value = data['value'];\r\n      (<any>this).valueId = data['valueId'];\r\n      this.type = data['type'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SelectSearchServerDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SelectSearchServerDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['value'] = this.value;\r\n    data['valueId'] = this.valueId;\r\n    data['type'] = this.type;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISelectSearchServerDto {\r\n  value: string | undefined;\r\n  valueId: number | undefined;\r\n  type: SelectSearchServerType;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedRequestSoKhamDto implements IPagedRequestSoKhamDto {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedRequestSoKhamDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedRequestSoKhamDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedRequestSoKhamDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedRequestSoKhamDto {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class SoKhamDto implements ISoKhamDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ISoKhamDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SoKhamDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SoKhamDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISoKhamDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfSoKhamDto implements IPagedResultDtoOfSoKhamDto {\r\n  totalCount!: number;\r\n  items!: SoKhamDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfSoKhamDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(SoKhamDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfSoKhamDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfSoKhamDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfSoKhamDto {\r\n  totalCount: number;\r\n  items: SoKhamDto[] | undefined;\r\n}\r\n\r\nexport class StaticRolePagedInputDto implements IStaticRolePagedInputDto {\r\n  loaiBenhVien!: number | undefined;\r\n  isAdminTuyen!: boolean | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IStaticRolePagedInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiBenhVien = data['loaiBenhVien'];\r\n      this.isAdminTuyen = data['isAdminTuyen'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): StaticRolePagedInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new StaticRolePagedInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiBenhVien'] = this.loaiBenhVien;\r\n    data['isAdminTuyen'] = this.isAdminTuyen;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IStaticRolePagedInputDto {\r\n  loaiBenhVien: number | undefined;\r\n  isAdminTuyen: boolean | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class StaticRolePagedOutputDto implements IStaticRolePagedOutputDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  isAdminTuyen!: boolean;\r\n  listLoaiCoSo!: string | undefined;\r\n  loaiBenhVien!: number[] | undefined;\r\n  readonly listTenLoaiCoSo!: string[] | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IStaticRolePagedOutputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.isAdminTuyen = data['isAdminTuyen'];\r\n      this.listLoaiCoSo = data['listLoaiCoSo'];\r\n      if (Array.isArray(data['loaiBenhVien'])) {\r\n        this.loaiBenhVien = [] as any;\r\n        for (let item of data['loaiBenhVien'])\r\n          this.loaiBenhVien!.push(item);\r\n      }\r\n      if (Array.isArray(data['listTenLoaiCoSo'])) {\r\n        (<any>this).listTenLoaiCoSo = [] as any;\r\n        for (let item of data['listTenLoaiCoSo'])\r\n          (<any>this).listTenLoaiCoSo!.push(item);\r\n      }\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): StaticRolePagedOutputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new StaticRolePagedOutputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['isAdminTuyen'] = this.isAdminTuyen;\r\n    data['listLoaiCoSo'] = this.listLoaiCoSo;\r\n    if (Array.isArray(this.loaiBenhVien)) {\r\n      data['loaiBenhVien'] = [];\r\n      for (let item of this.loaiBenhVien)\r\n        data['loaiBenhVien'].push(item);\r\n    }\r\n    if (Array.isArray(this.listTenLoaiCoSo)) {\r\n      data['listTenLoaiCoSo'] = [];\r\n      for (let item of this.listTenLoaiCoSo)\r\n        data['listTenLoaiCoSo'].push(item);\r\n    }\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IStaticRolePagedOutputDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  isAdminTuyen: boolean;\r\n  listLoaiCoSo: string | undefined;\r\n  loaiBenhVien: number[] | undefined;\r\n  listTenLoaiCoSo: string[] | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfStaticRolePagedOutputDto implements IPagedResultDtoOfStaticRolePagedOutputDto {\r\n  totalCount!: number;\r\n  items!: StaticRolePagedOutputDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfStaticRolePagedOutputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(StaticRolePagedOutputDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfStaticRolePagedOutputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfStaticRolePagedOutputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfStaticRolePagedOutputDto {\r\n  totalCount: number;\r\n  items: StaticRolePagedOutputDto[] | undefined;\r\n}\r\n\r\nexport class SysRoleDto implements ISysRoleDto {\r\n  roleId!: string;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  isAdminTuyen!: boolean;\r\n  isStatic!: boolean;\r\n  listLoaiCoSo!: string | undefined;\r\n  loaiBenhVien!: string[] | undefined;\r\n  benhVienId!: number | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ISysRoleDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.roleId = data['roleId'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.isAdminTuyen = data['isAdminTuyen'];\r\n      this.isStatic = data['isStatic'];\r\n      this.listLoaiCoSo = data['listLoaiCoSo'];\r\n      if (Array.isArray(data['loaiBenhVien'])) {\r\n        this.loaiBenhVien = [] as any;\r\n        for (let item of data['loaiBenhVien'])\r\n          this.loaiBenhVien!.push(item);\r\n      }\r\n      this.benhVienId = data['benhVienId'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SysRoleDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SysRoleDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['roleId'] = this.roleId;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['isAdminTuyen'] = this.isAdminTuyen;\r\n    data['isStatic'] = this.isStatic;\r\n    data['listLoaiCoSo'] = this.listLoaiCoSo;\r\n    if (Array.isArray(this.loaiBenhVien)) {\r\n      data['loaiBenhVien'] = [];\r\n      for (let item of this.loaiBenhVien)\r\n        data['loaiBenhVien'].push(item);\r\n    }\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISysRoleDto {\r\n  roleId: string;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  isAdminTuyen: boolean;\r\n  isStatic: boolean;\r\n  listLoaiCoSo: string | undefined;\r\n  loaiBenhVien: string[] | undefined;\r\n  benhVienId: number | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class CommonResultDtoOfSysRoleDto implements ICommonResultDtoOfSysRoleDto {\r\n  isSuccessful!: boolean;\r\n  errorCode!: string | undefined;\r\n  errorMessage!: string | undefined;\r\n  dataResult!: SysRoleDto;\r\n\r\n  constructor(data?: ICommonResultDtoOfSysRoleDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isSuccessful = data['isSuccessful'];\r\n      this.errorCode = data['errorCode'];\r\n      this.errorMessage = data['errorMessage'];\r\n      this.dataResult = data['dataResult'] ? SysRoleDto.fromJS(data['dataResult']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CommonResultDtoOfSysRoleDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CommonResultDtoOfSysRoleDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isSuccessful'] = this.isSuccessful;\r\n    data['errorCode'] = this.errorCode;\r\n    data['errorMessage'] = this.errorMessage;\r\n    data['dataResult'] = this.dataResult ? this.dataResult.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICommonResultDtoOfSysRoleDto {\r\n  isSuccessful: boolean;\r\n  errorCode: string | undefined;\r\n  errorMessage: string | undefined;\r\n  dataResult: SysRoleDto;\r\n}\r\n\r\nexport class SetListPermissionAbleForAdminRoleRequest implements ISetListPermissionAbleForAdminRoleRequest {\r\n  sysRoleId!: number;\r\n  permissionNames!: string[] | undefined;\r\n\r\n  constructor(data?: ISetListPermissionAbleForAdminRoleRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.sysRoleId = data['sysRoleId'];\r\n      if (Array.isArray(data['permissionNames'])) {\r\n        this.permissionNames = [] as any;\r\n        for (let item of data['permissionNames'])\r\n          this.permissionNames!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SetListPermissionAbleForAdminRoleRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SetListPermissionAbleForAdminRoleRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    if (Array.isArray(this.permissionNames)) {\r\n      data['permissionNames'] = [];\r\n      for (let item of this.permissionNames)\r\n        data['permissionNames'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISetListPermissionAbleForAdminRoleRequest {\r\n  sysRoleId: number;\r\n  permissionNames: string[] | undefined;\r\n}\r\n\r\nexport class SysPermissionAdminDto implements ISysPermissionAdminDto {\r\n  sysRoleId!: number;\r\n  name!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ISysPermissionAdminDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.sysRoleId = data['sysRoleId'];\r\n      this.name = data['name'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SysPermissionAdminDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SysPermissionAdminDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    data['name'] = this.name;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISysPermissionAdminDto {\r\n  sysRoleId: number;\r\n  name: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class SysPermissionLoaiBenhVienEntity implements ISysPermissionLoaiBenhVienEntity {\r\n  loaiBenhVien!: number;\r\n  name!: string | undefined;\r\n  readonly id!: number;\r\n\r\n  constructor(data?: ISysPermissionLoaiBenhVienEntity) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiBenhVien = data['loaiBenhVien'];\r\n      this.name = data['name'];\r\n      (<any>this).id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SysPermissionLoaiBenhVienEntity {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SysPermissionLoaiBenhVienEntity();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiBenhVien'] = this.loaiBenhVien;\r\n    data['name'] = this.name;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISysPermissionLoaiBenhVienEntity {\r\n  loaiBenhVien: number;\r\n  name: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class SetPermissionLoaiBenhVienRequest implements ISetPermissionLoaiBenhVienRequest {\r\n  loaiBenhVien!: number;\r\n  permissionNames!: string[] | undefined;\r\n\r\n  constructor(data?: ISetPermissionLoaiBenhVienRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loaiBenhVien = data['loaiBenhVien'];\r\n      if (Array.isArray(data['permissionNames'])) {\r\n        this.permissionNames = [] as any;\r\n        for (let item of data['permissionNames'])\r\n          this.permissionNames!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SetPermissionLoaiBenhVienRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SetPermissionLoaiBenhVienRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loaiBenhVien'] = this.loaiBenhVien;\r\n    if (Array.isArray(this.permissionNames)) {\r\n      data['permissionNames'] = [];\r\n      for (let item of this.permissionNames)\r\n        data['permissionNames'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISetPermissionLoaiBenhVienRequest {\r\n  loaiBenhVien: number;\r\n  permissionNames: string[] | undefined;\r\n}\r\n\r\nexport class SetPermissionForSysRoleRequest implements ISetPermissionForSysRoleRequest {\r\n  sysRoleId!: number;\r\n  permissionNames!: string[] | undefined;\r\n\r\n  constructor(data?: ISetPermissionForSysRoleRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.sysRoleId = data['sysRoleId'];\r\n      if (Array.isArray(data['permissionNames'])) {\r\n        this.permissionNames = [] as any;\r\n        for (let item of data['permissionNames'])\r\n          this.permissionNames!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SetPermissionForSysRoleRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SetPermissionForSysRoleRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    if (Array.isArray(this.permissionNames)) {\r\n      data['permissionNames'] = [];\r\n      for (let item of this.permissionNames)\r\n        data['permissionNames'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISetPermissionForSysRoleRequest {\r\n  sysRoleId: number;\r\n  permissionNames: string[] | undefined;\r\n}\r\n\r\nexport class SysRolePermissionDto implements ISysRolePermissionDto {\r\n  sysRoleId!: number;\r\n  permissionNames!: string[] | undefined;\r\n\r\n  constructor(data?: ISysRolePermissionDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.sysRoleId = data['sysRoleId'];\r\n      if (Array.isArray(data['permissionNames'])) {\r\n        this.permissionNames = [] as any;\r\n        for (let item of data['permissionNames'])\r\n          this.permissionNames!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SysRolePermissionDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SysRolePermissionDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    if (Array.isArray(this.permissionNames)) {\r\n      data['permissionNames'] = [];\r\n      for (let item of this.permissionNames)\r\n        data['permissionNames'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISysRolePermissionDto {\r\n  sysRoleId: number;\r\n  permissionNames: string[] | undefined;\r\n}\r\n\r\nexport class RoleCoSoPagedInputDto implements IRoleCoSoPagedInputDto {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IRoleCoSoPagedInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): RoleCoSoPagedInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new RoleCoSoPagedInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IRoleCoSoPagedInputDto {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfSysRoleDto implements IPagedResultDtoOfSysRoleDto {\r\n  totalCount!: number;\r\n  items!: SysRoleDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfSysRoleDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(SysRoleDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfSysRoleDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfSysRoleDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfSysRoleDto {\r\n  totalCount: number;\r\n  items: SysRoleDto[] | undefined;\r\n}\r\n\r\nexport class CommonResultDtoOfInt64 implements ICommonResultDtoOfInt64 {\r\n  isSuccessful!: boolean;\r\n  errorCode!: string | undefined;\r\n  errorMessage!: string | undefined;\r\n  dataResult!: number;\r\n\r\n  constructor(data?: ICommonResultDtoOfInt64) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isSuccessful = data['isSuccessful'];\r\n      this.errorCode = data['errorCode'];\r\n      this.errorMessage = data['errorMessage'];\r\n      this.dataResult = data['dataResult'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CommonResultDtoOfInt64 {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CommonResultDtoOfInt64();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isSuccessful'] = this.isSuccessful;\r\n    data['errorCode'] = this.errorCode;\r\n    data['errorMessage'] = this.errorMessage;\r\n    data['dataResult'] = this.dataResult;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICommonResultDtoOfInt64 {\r\n  isSuccessful: boolean;\r\n  errorCode: string | undefined;\r\n  errorMessage: string | undefined;\r\n  dataResult: number;\r\n}\r\n\r\nexport class GetListUserAdminCoSoRequest implements IGetListUserAdminCoSoRequest {\r\n  tinhId!: number | undefined;\r\n  huyenId!: number | undefined;\r\n  xaId!: number | undefined;\r\n  benhVienId!: number | undefined;\r\n  id!: number | undefined;\r\n  sysRoleId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IGetListUserAdminCoSoRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.tinhId = data['tinhId'];\r\n      this.huyenId = data['huyenId'];\r\n      this.xaId = data['xaId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.id = data['id'];\r\n      this.sysRoleId = data['sysRoleId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GetListUserAdminCoSoRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GetListUserAdminCoSoRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['tinhId'] = this.tinhId;\r\n    data['huyenId'] = this.huyenId;\r\n    data['xaId'] = this.xaId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['id'] = this.id;\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGetListUserAdminCoSoRequest {\r\n  tinhId: number | undefined;\r\n  huyenId: number | undefined;\r\n  xaId: number | undefined;\r\n  benhVienId: number | undefined;\r\n  id: number | undefined;\r\n  sysRoleId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class SysUserDto implements ISysUserDto {\r\n  userId!: string;\r\n  userName!: string | undefined;\r\n  ma!: string | undefined;\r\n  hoTen!: string | undefined;\r\n  hoTenKhongDau!: string | undefined;\r\n  email!: string | undefined;\r\n  soDienThoai!: string | undefined;\r\n  nhanLucId!: number | undefined;\r\n  benhVienId!: number | undefined;\r\n  phongBanId!: number | undefined;\r\n  listRoleName!: string | undefined;\r\n  tenBenhVien!: string | undefined;\r\n  sysRoleAdminId!: number | undefined;\r\n  tenQuyen!: string | undefined;\r\n  isCreator!: boolean;\r\n  isLock!: boolean;\r\n  tinhId!: number | undefined;\r\n  huyenId!: number | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ISysUserDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.userId = data['userId'];\r\n      this.userName = data['userName'];\r\n      this.ma = data['ma'];\r\n      this.hoTen = data['hoTen'];\r\n      this.hoTenKhongDau = data['hoTenKhongDau'];\r\n      this.email = data['email'];\r\n      this.soDienThoai = data['soDienThoai'];\r\n      this.nhanLucId = data['nhanLucId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.listRoleName = data['listRoleName'];\r\n      this.tenBenhVien = data['tenBenhVien'];\r\n      this.sysRoleAdminId = data['sysRoleAdminId'];\r\n      this.tenQuyen = data['tenQuyen'];\r\n      this.isCreator = data['isCreator'];\r\n      this.isLock = data['isLock'];\r\n      this.tinhId = data['tinhId'];\r\n      this.huyenId = data['huyenId'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SysUserDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SysUserDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['userId'] = this.userId;\r\n    data['userName'] = this.userName;\r\n    data['ma'] = this.ma;\r\n    data['hoTen'] = this.hoTen;\r\n    data['hoTenKhongDau'] = this.hoTenKhongDau;\r\n    data['email'] = this.email;\r\n    data['soDienThoai'] = this.soDienThoai;\r\n    data['nhanLucId'] = this.nhanLucId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['listRoleName'] = this.listRoleName;\r\n    data['tenBenhVien'] = this.tenBenhVien;\r\n    data['sysRoleAdminId'] = this.sysRoleAdminId;\r\n    data['tenQuyen'] = this.tenQuyen;\r\n    data['isCreator'] = this.isCreator;\r\n    data['isLock'] = this.isLock;\r\n    data['tinhId'] = this.tinhId;\r\n    data['huyenId'] = this.huyenId;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISysUserDto {\r\n  userId: string;\r\n  userName: string | undefined;\r\n  ma: string | undefined;\r\n  hoTen: string | undefined;\r\n  hoTenKhongDau: string | undefined;\r\n  email: string | undefined;\r\n  soDienThoai: string | undefined;\r\n  nhanLucId: number | undefined;\r\n  benhVienId: number | undefined;\r\n  phongBanId: number | undefined;\r\n  listRoleName: string | undefined;\r\n  tenBenhVien: string | undefined;\r\n  sysRoleAdminId: number | undefined;\r\n  tenQuyen: string | undefined;\r\n  isCreator: boolean;\r\n  isLock: boolean;\r\n  tinhId: number | undefined;\r\n  huyenId: number | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfSysUserDto implements IPagedResultDtoOfSysUserDto {\r\n  totalCount!: number;\r\n  items!: SysUserDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfSysUserDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(SysUserDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfSysUserDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfSysUserDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfSysUserDto {\r\n  totalCount: number;\r\n  items: SysUserDto[] | undefined;\r\n}\r\n\r\nexport class CreateSysUserDto implements ICreateSysUserDto {\r\n  ma!: string | undefined;\r\n  hoTen!: string | undefined;\r\n  nhanLucId!: number | undefined;\r\n  email!: string | undefined;\r\n  soDienThoai!: string | undefined;\r\n  matKhau!: string | undefined;\r\n  benhVienId!: number;\r\n\r\n  constructor(data?: ICreateSysUserDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.hoTen = data['hoTen'];\r\n      this.nhanLucId = data['nhanLucId'];\r\n      this.email = data['email'];\r\n      this.soDienThoai = data['soDienThoai'];\r\n      this.matKhau = data['matKhau'];\r\n      this.benhVienId = data['benhVienId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CreateSysUserDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CreateSysUserDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['hoTen'] = this.hoTen;\r\n    data['nhanLucId'] = this.nhanLucId;\r\n    data['email'] = this.email;\r\n    data['soDienThoai'] = this.soDienThoai;\r\n    data['matKhau'] = this.matKhau;\r\n    data['benhVienId'] = this.benhVienId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICreateSysUserDto {\r\n  ma: string | undefined;\r\n  hoTen: string | undefined;\r\n  nhanLucId: number | undefined;\r\n  email: string | undefined;\r\n  soDienThoai: string | undefined;\r\n  matKhau: string | undefined;\r\n  benhVienId: number;\r\n}\r\n\r\nexport class TaoTaiKhoanAdminCoSoInputDto implements ITaoTaiKhoanAdminCoSoInputDto {\r\n  benhVienId!: number;\r\n  sysRoleId!: number;\r\n  userDto!: CreateSysUserDto;\r\n\r\n  constructor(data?: ITaoTaiKhoanAdminCoSoInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.benhVienId = data['benhVienId'];\r\n      this.sysRoleId = data['sysRoleId'];\r\n      this.userDto = data['userDto'] ? CreateSysUserDto.fromJS(data['userDto']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): TaoTaiKhoanAdminCoSoInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new TaoTaiKhoanAdminCoSoInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    data['userDto'] = this.userDto ? this.userDto.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ITaoTaiKhoanAdminCoSoInputDto {\r\n  benhVienId: number;\r\n  sysRoleId: number;\r\n  userDto: CreateSysUserDto;\r\n}\r\n\r\nexport class CommonResultDtoOfSysUserDto implements ICommonResultDtoOfSysUserDto {\r\n  isSuccessful!: boolean;\r\n  errorCode!: string | undefined;\r\n  errorMessage!: string | undefined;\r\n  dataResult!: SysUserDto;\r\n\r\n  constructor(data?: ICommonResultDtoOfSysUserDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isSuccessful = data['isSuccessful'];\r\n      this.errorCode = data['errorCode'];\r\n      this.errorMessage = data['errorMessage'];\r\n      this.dataResult = data['dataResult'] ? SysUserDto.fromJS(data['dataResult']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CommonResultDtoOfSysUserDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CommonResultDtoOfSysUserDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isSuccessful'] = this.isSuccessful;\r\n    data['errorCode'] = this.errorCode;\r\n    data['errorMessage'] = this.errorMessage;\r\n    data['dataResult'] = this.dataResult ? this.dataResult.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICommonResultDtoOfSysUserDto {\r\n  isSuccessful: boolean;\r\n  errorCode: string | undefined;\r\n  errorMessage: string | undefined;\r\n  dataResult: SysUserDto;\r\n}\r\n\r\nexport class UpdateUserDto implements IUpdateUserDto {\r\n  id!: number;\r\n  hoTen!: string | undefined;\r\n  nhanLucId!: number | undefined;\r\n  email!: string | undefined;\r\n  soDienThoai!: string | undefined;\r\n\r\n  constructor(data?: IUpdateUserDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.hoTen = data['hoTen'];\r\n      this.nhanLucId = data['nhanLucId'];\r\n      this.email = data['email'];\r\n      this.soDienThoai = data['soDienThoai'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): UpdateUserDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new UpdateUserDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['hoTen'] = this.hoTen;\r\n    data['nhanLucId'] = this.nhanLucId;\r\n    data['email'] = this.email;\r\n    data['soDienThoai'] = this.soDienThoai;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IUpdateUserDto {\r\n  id: number;\r\n  hoTen: string | undefined;\r\n  nhanLucId: number | undefined;\r\n  email: string | undefined;\r\n  soDienThoai: string | undefined;\r\n}\r\n\r\nexport class DoiMatKhauRequest implements IDoiMatKhauRequest {\r\n  userExtensionId!: number;\r\n  matKhauMoi!: string | undefined;\r\n\r\n  constructor(data?: IDoiMatKhauRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.userExtensionId = data['userExtensionId'];\r\n      this.matKhauMoi = data['matKhauMoi'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DoiMatKhauRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DoiMatKhauRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['userExtensionId'] = this.userExtensionId;\r\n    data['matKhauMoi'] = this.matKhauMoi;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDoiMatKhauRequest {\r\n  userExtensionId: number;\r\n  matKhauMoi: string | undefined;\r\n}\r\n\r\nexport class CommonResultDtoOfGuid implements ICommonResultDtoOfGuid {\r\n  isSuccessful!: boolean;\r\n  errorCode!: string | undefined;\r\n  errorMessage!: string | undefined;\r\n  dataResult!: string;\r\n\r\n  constructor(data?: ICommonResultDtoOfGuid) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.isSuccessful = data['isSuccessful'];\r\n      this.errorCode = data['errorCode'];\r\n      this.errorMessage = data['errorMessage'];\r\n      this.dataResult = data['dataResult'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CommonResultDtoOfGuid {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CommonResultDtoOfGuid();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['isSuccessful'] = this.isSuccessful;\r\n    data['errorCode'] = this.errorCode;\r\n    data['errorMessage'] = this.errorMessage;\r\n    data['dataResult'] = this.dataResult;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICommonResultDtoOfGuid {\r\n  isSuccessful: boolean;\r\n  errorCode: string | undefined;\r\n  errorMessage: string | undefined;\r\n  dataResult: string;\r\n}\r\n\r\nexport class GetListUserCoSoRequest implements IGetListUserCoSoRequest {\r\n  sysRoleId!: number | undefined;\r\n  id!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IGetListUserCoSoRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.sysRoleId = data['sysRoleId'];\r\n      this.id = data['id'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): GetListUserCoSoRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new GetListUserCoSoRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    data['id'] = this.id;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IGetListUserCoSoRequest {\r\n  sysRoleId: number | undefined;\r\n  id: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class RoleAbleDto implements IRoleAbleDto {\r\n  sysRoleId!: number;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  isCheck!: boolean;\r\n  isStatic!: boolean;\r\n  isAdminTuyen!: boolean;\r\n\r\n  constructor(data?: IRoleAbleDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.sysRoleId = data['sysRoleId'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.isCheck = data['isCheck'];\r\n      this.isStatic = data['isStatic'];\r\n      this.isAdminTuyen = data['isAdminTuyen'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): RoleAbleDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new RoleAbleDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['isCheck'] = this.isCheck;\r\n    data['isStatic'] = this.isStatic;\r\n    data['isAdminTuyen'] = this.isAdminTuyen;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IRoleAbleDto {\r\n  sysRoleId: number;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  isCheck: boolean;\r\n  isStatic: boolean;\r\n  isAdminTuyen: boolean;\r\n}\r\n\r\nexport class SetRoleForUserRequest implements ISetRoleForUserRequest {\r\n  userExtensionId!: number;\r\n  listSysRoleId!: number[] | undefined;\r\n\r\n  constructor(data?: ISetRoleForUserRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.userExtensionId = data['userExtensionId'];\r\n      if (Array.isArray(data['listSysRoleId'])) {\r\n        this.listSysRoleId = [] as any;\r\n        for (let item of data['listSysRoleId'])\r\n          this.listSysRoleId!.push(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SetRoleForUserRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SetRoleForUserRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['userExtensionId'] = this.userExtensionId;\r\n    if (Array.isArray(this.listSysRoleId)) {\r\n      data['listSysRoleId'] = [];\r\n      for (let item of this.listSysRoleId)\r\n        data['listSysRoleId'].push(item);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISetRoleForUserRequest {\r\n  userExtensionId: number;\r\n  listSysRoleId: number[] | undefined;\r\n}\r\n\r\nexport class SysUserRoleEntity implements ISysUserRoleEntity {\r\n  sysRoleId!: number;\r\n  userExtensionId!: number;\r\n  readonly id!: number;\r\n\r\n  constructor(data?: ISysUserRoleEntity) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.sysRoleId = data['sysRoleId'];\r\n      this.userExtensionId = data['userExtensionId'];\r\n      (<any>this).id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SysUserRoleEntity {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SysUserRoleEntity();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['sysRoleId'] = this.sysRoleId;\r\n    data['userExtensionId'] = this.userExtensionId;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISysUserRoleEntity {\r\n  sysRoleId: number;\r\n  userExtensionId: number;\r\n  id: number;\r\n}\r\n\r\nexport class CauHinhSysAppPrivateRoleItemDto implements ICauHinhSysAppPrivateRoleItemDto {\r\n  id!: number;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  isCheck!: boolean;\r\n\r\n  constructor(data?: ICauHinhSysAppPrivateRoleItemDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.isCheck = data['isCheck'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): CauHinhSysAppPrivateRoleItemDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new CauHinhSysAppPrivateRoleItemDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['isCheck'] = this.isCheck;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ICauHinhSysAppPrivateRoleItemDto {\r\n  id: number;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  isCheck: boolean;\r\n}\r\n\r\nexport class DanhSachCauHinhSysAppPrivateRoleDto implements IDanhSachCauHinhSysAppPrivateRoleDto {\r\n  listOfPhongBan!: CauHinhSysAppPrivateRoleItemDto[] | undefined;\r\n  listOfKhoDuoc!: CauHinhSysAppPrivateRoleItemDto[] | undefined;\r\n  listOfCanLamSang!: CauHinhSysAppPrivateRoleItemDto[] | undefined;\r\n\r\n  constructor(data?: IDanhSachCauHinhSysAppPrivateRoleDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      if (Array.isArray(data['listOfPhongBan'])) {\r\n        this.listOfPhongBan = [] as any;\r\n        for (let item of data['listOfPhongBan'])\r\n          this.listOfPhongBan!.push(CauHinhSysAppPrivateRoleItemDto.fromJS(item));\r\n      }\r\n      if (Array.isArray(data['listOfKhoDuoc'])) {\r\n        this.listOfKhoDuoc = [] as any;\r\n        for (let item of data['listOfKhoDuoc'])\r\n          this.listOfKhoDuoc!.push(CauHinhSysAppPrivateRoleItemDto.fromJS(item));\r\n      }\r\n      if (Array.isArray(data['listOfCanLamSang'])) {\r\n        this.listOfCanLamSang = [] as any;\r\n        for (let item of data['listOfCanLamSang'])\r\n          this.listOfCanLamSang!.push(CauHinhSysAppPrivateRoleItemDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DanhSachCauHinhSysAppPrivateRoleDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DanhSachCauHinhSysAppPrivateRoleDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    if (Array.isArray(this.listOfPhongBan)) {\r\n      data['listOfPhongBan'] = [];\r\n      for (let item of this.listOfPhongBan)\r\n        data['listOfPhongBan'].push(item.toJSON());\r\n    }\r\n    if (Array.isArray(this.listOfKhoDuoc)) {\r\n      data['listOfKhoDuoc'] = [];\r\n      for (let item of this.listOfKhoDuoc)\r\n        data['listOfKhoDuoc'].push(item.toJSON());\r\n    }\r\n    if (Array.isArray(this.listOfCanLamSang)) {\r\n      data['listOfCanLamSang'] = [];\r\n      for (let item of this.listOfCanLamSang)\r\n        data['listOfCanLamSang'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDanhSachCauHinhSysAppPrivateRoleDto {\r\n  listOfPhongBan: CauHinhSysAppPrivateRoleItemDto[] | undefined;\r\n  listOfKhoDuoc: CauHinhSysAppPrivateRoleItemDto[] | undefined;\r\n  listOfCanLamSang: CauHinhSysAppPrivateRoleItemDto[] | undefined;\r\n}\r\n\r\nexport class SysAppPrivateRoleDto implements ISysAppPrivateRoleDto {\r\n  groupCode!: string | undefined;\r\n  code!: string | undefined;\r\n  userId!: string;\r\n  userV1Id!: number | undefined;\r\n  benhVienId!: number;\r\n  valueId!: number | undefined;\r\n  valueCode!: string | undefined;\r\n  valueName!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ISysAppPrivateRoleDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.groupCode = data['groupCode'];\r\n      this.code = data['code'];\r\n      this.userId = data['userId'];\r\n      this.userV1Id = data['userV1Id'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.valueId = data['valueId'];\r\n      this.valueCode = data['valueCode'];\r\n      this.valueName = data['valueName'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SysAppPrivateRoleDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SysAppPrivateRoleDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['groupCode'] = this.groupCode;\r\n    data['code'] = this.code;\r\n    data['userId'] = this.userId;\r\n    data['userV1Id'] = this.userV1Id;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['valueId'] = this.valueId;\r\n    data['valueCode'] = this.valueCode;\r\n    data['valueName'] = this.valueName;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISysAppPrivateRoleDto {\r\n  groupCode: string | undefined;\r\n  code: string | undefined;\r\n  userId: string;\r\n  userV1Id: number | undefined;\r\n  benhVienId: number;\r\n  valueId: number | undefined;\r\n  valueCode: string | undefined;\r\n  valueName: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class LuuSysAppPrivateRoleUserRequset implements ILuuSysAppPrivateRoleUserRequset {\r\n  userExtensionId!: number;\r\n  code!: string | undefined;\r\n  dtos!: SysAppPrivateRoleDto[] | undefined;\r\n\r\n  constructor(data?: ILuuSysAppPrivateRoleUserRequset) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.userExtensionId = data['userExtensionId'];\r\n      this.code = data['code'];\r\n      if (Array.isArray(data['dtos'])) {\r\n        this.dtos = [] as any;\r\n        for (let item of data['dtos'])\r\n          this.dtos!.push(SysAppPrivateRoleDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): LuuSysAppPrivateRoleUserRequset {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new LuuSysAppPrivateRoleUserRequset();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['userExtensionId'] = this.userExtensionId;\r\n    data['code'] = this.code;\r\n    if (Array.isArray(this.dtos)) {\r\n      data['dtos'] = [];\r\n      for (let item of this.dtos)\r\n        data['dtos'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ILuuSysAppPrivateRoleUserRequset {\r\n  userExtensionId: number;\r\n  code: string | undefined;\r\n  dtos: SysAppPrivateRoleDto[] | undefined;\r\n}\r\n\r\nexport class ParamUpdateValueThamSoBenhVien implements IParamUpdateValueThamSoBenhVien {\r\n  id!: number;\r\n  value!: string | undefined;\r\n\r\n  constructor(data?: IParamUpdateValueThamSoBenhVien) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.value = data['value'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ParamUpdateValueThamSoBenhVien {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ParamUpdateValueThamSoBenhVien();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['value'] = this.value;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IParamUpdateValueThamSoBenhVien {\r\n  id: number;\r\n  value: string | undefined;\r\n}\r\n\r\nexport class ParamsUpdateChangedThamSoBenhVien implements IParamsUpdateChangedThamSoBenhVien {\r\n  id!: number;\r\n  value!: boolean;\r\n  dataFieldChanged!: string | undefined;\r\n\r\n  constructor(data?: IParamsUpdateChangedThamSoBenhVien) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.value = data['value'];\r\n      this.dataFieldChanged = data['dataFieldChanged'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ParamsUpdateChangedThamSoBenhVien {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ParamsUpdateChangedThamSoBenhVien();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['value'] = this.value;\r\n    data['dataFieldChanged'] = this.dataFieldChanged;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IParamsUpdateChangedThamSoBenhVien {\r\n  id: number;\r\n  value: boolean;\r\n  dataFieldChanged: string | undefined;\r\n}\r\n\r\nexport class ThamSoBenhVienPagedRequestDto implements IThamSoBenhVienPagedRequestDto {\r\n  groupCodeId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IThamSoBenhVienPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.groupCodeId = data['groupCodeId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ThamSoBenhVienPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ThamSoBenhVienPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['groupCodeId'] = this.groupCodeId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IThamSoBenhVienPagedRequestDto {\r\n  groupCodeId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class SysAppSettingsDto implements ISysAppSettingsDto {\r\n  code!: string | undefined;\r\n  value!: string | undefined;\r\n  description!: string | undefined;\r\n  locked!: boolean;\r\n  systemEditonOnly!: boolean;\r\n  groupCode!: string | undefined;\r\n  dataType!: string | undefined;\r\n  language!: string | undefined;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  tenNhom!: string | undefined;\r\n  groupCodeId!: number;\r\n  tuyenBenhVien!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ISysAppSettingsDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.code = data['code'];\r\n      this.value = data['value'];\r\n      this.description = data['description'];\r\n      this.locked = data['locked'];\r\n      this.systemEditonOnly = data['systemEditonOnly'];\r\n      this.groupCode = data['groupCode'];\r\n      this.dataType = data['dataType'];\r\n      this.language = data['language'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.tenNhom = data['tenNhom'];\r\n      this.groupCodeId = data['groupCodeId'];\r\n      this.tuyenBenhVien = data['tuyenBenhVien'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): SysAppSettingsDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new SysAppSettingsDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['code'] = this.code;\r\n    data['value'] = this.value;\r\n    data['description'] = this.description;\r\n    data['locked'] = this.locked;\r\n    data['systemEditonOnly'] = this.systemEditonOnly;\r\n    data['groupCode'] = this.groupCode;\r\n    data['dataType'] = this.dataType;\r\n    data['language'] = this.language;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['tenNhom'] = this.tenNhom;\r\n    data['groupCodeId'] = this.groupCodeId;\r\n    data['tuyenBenhVien'] = this.tuyenBenhVien;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ISysAppSettingsDto {\r\n  code: string | undefined;\r\n  value: string | undefined;\r\n  description: string | undefined;\r\n  locked: boolean;\r\n  systemEditonOnly: boolean;\r\n  groupCode: string | undefined;\r\n  dataType: string | undefined;\r\n  language: string | undefined;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  tenNhom: string | undefined;\r\n  groupCodeId: number;\r\n  tuyenBenhVien: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfSysAppSettingsDto implements IPagedResultDtoOfSysAppSettingsDto {\r\n  totalCount!: number;\r\n  items!: SysAppSettingsDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfSysAppSettingsDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(SysAppSettingsDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfSysAppSettingsDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfSysAppSettingsDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfSysAppSettingsDto {\r\n  totalCount: number;\r\n  items: SysAppSettingsDto[] | undefined;\r\n}\r\n\r\nexport class ThamSoHeThongPagedRequest implements IThamSoHeThongPagedRequest {\r\n  nhomThamSoId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IThamSoHeThongPagedRequest) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nhomThamSoId = data['nhomThamSoId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ThamSoHeThongPagedRequest {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ThamSoHeThongPagedRequest();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nhomThamSoId'] = this.nhomThamSoId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IThamSoHeThongPagedRequest {\r\n  nhomThamSoId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class ThamSoHeThongDto implements IThamSoHeThongDto {\r\n  code!: string | undefined;\r\n  value!: string | undefined;\r\n  description!: string | undefined;\r\n  locked!: boolean;\r\n  systemEditonOnly!: boolean;\r\n  groupCode!: string | undefined;\r\n  dataType!: string | undefined;\r\n  language!: string | undefined;\r\n  isActive!: boolean;\r\n  nhomThamSoId!: number;\r\n  nhomThamSo!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IThamSoHeThongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.code = data['code'];\r\n      this.value = data['value'];\r\n      this.description = data['description'];\r\n      this.locked = data['locked'];\r\n      this.systemEditonOnly = data['systemEditonOnly'];\r\n      this.groupCode = data['groupCode'];\r\n      this.dataType = data['dataType'];\r\n      this.language = data['language'];\r\n      this.isActive = data['isActive'];\r\n      this.nhomThamSoId = data['nhomThamSoId'];\r\n      this.nhomThamSo = data['nhomThamSo'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ThamSoHeThongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ThamSoHeThongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['code'] = this.code;\r\n    data['value'] = this.value;\r\n    data['description'] = this.description;\r\n    data['locked'] = this.locked;\r\n    data['systemEditonOnly'] = this.systemEditonOnly;\r\n    data['groupCode'] = this.groupCode;\r\n    data['dataType'] = this.dataType;\r\n    data['language'] = this.language;\r\n    data['isActive'] = this.isActive;\r\n    data['nhomThamSoId'] = this.nhomThamSoId;\r\n    data['nhomThamSo'] = this.nhomThamSo;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IThamSoHeThongDto {\r\n  code: string | undefined;\r\n  value: string | undefined;\r\n  description: string | undefined;\r\n  locked: boolean;\r\n  systemEditonOnly: boolean;\r\n  groupCode: string | undefined;\r\n  dataType: string | undefined;\r\n  language: string | undefined;\r\n  isActive: boolean;\r\n  nhomThamSoId: number;\r\n  nhomThamSo: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfThamSoHeThongDto implements IPagedResultDtoOfThamSoHeThongDto {\r\n  totalCount!: number;\r\n  items!: ThamSoHeThongDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfThamSoHeThongDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(ThamSoHeThongDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfThamSoHeThongDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfThamSoHeThongDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfThamSoHeThongDto {\r\n  totalCount: number;\r\n  items: ThamSoHeThongDto[] | undefined;\r\n}\r\n\r\nexport class PagedRequestThietBiDto implements IPagedRequestThietBiDto {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedRequestThietBiDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedRequestThietBiDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedRequestThietBiDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedRequestThietBiDto {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class ThietBiDto implements IThietBiDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenKhongDau!: string | undefined;\r\n  nhomThietBiId!: number | undefined;\r\n  phongBanId!: number | undefined;\r\n  isActive!: boolean;\r\n  benhVienId!: number;\r\n  tenPhongBan!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IThietBiDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenKhongDau = data['tenKhongDau'];\r\n      this.nhomThietBiId = data['nhomThietBiId'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.isActive = data['isActive'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.tenPhongBan = data['tenPhongBan'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ThietBiDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ThietBiDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenKhongDau'] = this.tenKhongDau;\r\n    data['nhomThietBiId'] = this.nhomThietBiId;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['isActive'] = this.isActive;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['tenPhongBan'] = this.tenPhongBan;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IThietBiDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenKhongDau: string | undefined;\r\n  nhomThietBiId: number | undefined;\r\n  phongBanId: number | undefined;\r\n  isActive: boolean;\r\n  benhVienId: number;\r\n  tenPhongBan: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfThietBiDto implements IPagedResultDtoOfThietBiDto {\r\n  totalCount!: number;\r\n  items!: ThietBiDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfThietBiDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(ThietBiDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfThietBiDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfThietBiDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfThietBiDto {\r\n  totalCount: number;\r\n  items: ThietBiDto[] | undefined;\r\n}\r\n\r\nexport class TienTeDto implements ITienTeDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tenEn!: string | undefined;\r\n  isActive!: boolean;\r\n  isExists!: boolean;\r\n  id!: number;\r\n\r\n  constructor(data?: ITienTeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tenEn = data['tenEn'];\r\n      this.isActive = data['isActive'];\r\n      this.isExists = data['isExists'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): TienTeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new TienTeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tenEn'] = this.tenEn;\r\n    data['isActive'] = this.isActive;\r\n    data['isExists'] = this.isExists;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ITienTeDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tenEn: string | undefined;\r\n  isActive: boolean;\r\n  isExists: boolean;\r\n  id: number;\r\n}\r\n\r\nexport class TienTePagedRequestDto implements ITienTePagedRequestDto {\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ITienTePagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): TienTePagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new TienTePagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ITienTePagedRequestDto {\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfTienTeDto implements IPagedResultDtoOfTienTeDto {\r\n  totalCount!: number;\r\n  items!: TienTeDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfTienTeDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(TienTeDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfTienTeDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfTienTeDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfTienTeDto {\r\n  totalCount: number;\r\n  items: TienTeDto[] | undefined;\r\n}\r\n\r\nexport class TienTeTyGiaPagedRequestDto implements ITienTeTyGiaPagedRequestDto {\r\n  tienTeId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: ITienTeTyGiaPagedRequestDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.tienTeId = data['tienTeId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): TienTeTyGiaPagedRequestDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new TienTeTyGiaPagedRequestDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['tienTeId'] = this.tienTeId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ITienTeTyGiaPagedRequestDto {\r\n  tienTeId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class TienTeTyGiaDto implements ITienTeTyGiaDto {\r\n  tienTeId!: number;\r\n  tyGiaVND!: number | undefined;\r\n  tyGiaUSD!: number | undefined;\r\n  benhVienId!: number;\r\n  isActive!: boolean;\r\n  tenTienTe!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: ITienTeTyGiaDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.tienTeId = data['tienTeId'];\r\n      this.tyGiaVND = data['tyGiaVND'];\r\n      this.tyGiaUSD = data['tyGiaUSD'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.isActive = data['isActive'];\r\n      this.tenTienTe = data['tenTienTe'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): TienTeTyGiaDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new TienTeTyGiaDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['tienTeId'] = this.tienTeId;\r\n    data['tyGiaVND'] = this.tyGiaVND;\r\n    data['tyGiaUSD'] = this.tyGiaUSD;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['isActive'] = this.isActive;\r\n    data['tenTienTe'] = this.tenTienTe;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface ITienTeTyGiaDto {\r\n  tienTeId: number;\r\n  tyGiaVND: number | undefined;\r\n  tyGiaUSD: number | undefined;\r\n  benhVienId: number;\r\n  isActive: boolean;\r\n  tenTienTe: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfTienTeTyGiaDto implements IPagedResultDtoOfTienTeTyGiaDto {\r\n  totalCount!: number;\r\n  items!: TienTeTyGiaDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfTienTeTyGiaDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(TienTeTyGiaDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfTienTeTyGiaDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfTienTeTyGiaDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfTienTeTyGiaDto {\r\n  totalCount: number;\r\n  items: TienTeTyGiaDto[] | undefined;\r\n}\r\n\r\nexport class PagedRequestToaThuocMauDto implements IPagedRequestToaThuocMauDto {\r\n  loai!: string | undefined;\r\n  bacSiId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedRequestToaThuocMauDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.loai = data['loai'];\r\n      this.bacSiId = data['bacSiId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedRequestToaThuocMauDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedRequestToaThuocMauDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['loai'] = this.loai;\r\n    data['bacSiId'] = this.bacSiId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedRequestToaThuocMauDto {\r\n  loai: string | undefined;\r\n  bacSiId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class DSToaThuocMauDto implements IDSToaThuocMauDto {\r\n  bacSiId!: number | undefined;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  maICD!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IDSToaThuocMauDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.bacSiId = data['bacSiId'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.maICD = data['maICD'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): DSToaThuocMauDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new DSToaThuocMauDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['bacSiId'] = this.bacSiId;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['maICD'] = this.maICD;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IDSToaThuocMauDto {\r\n  bacSiId: number | undefined;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  maICD: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfDSToaThuocMauDto implements IPagedResultDtoOfDSToaThuocMauDto {\r\n  totalCount!: number;\r\n  items!: DSToaThuocMauDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfDSToaThuocMauDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(DSToaThuocMauDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfDSToaThuocMauDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfDSToaThuocMauDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfDSToaThuocMauDto {\r\n  totalCount: number;\r\n  items: DSToaThuocMauDto[] | undefined;\r\n}\r\n\r\nexport class ToaThuocMauDto implements IToaThuocMauDto {\r\n  bacSiId!: number | undefined;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  duocId!: number | undefined;\r\n  sang!: number | undefined;\r\n  trua!: number | undefined;\r\n  chieu!: number | undefined;\r\n  toi!: number | undefined;\r\n  soNgay!: number | undefined;\r\n  soLuong!: number | undefined;\r\n  duongDungId!: number | undefined;\r\n  loai!: string | undefined;\r\n  maICD!: string | undefined;\r\n  benhVienId!: number;\r\n  maDuoc!: string | undefined;\r\n  tenDuoc!: string | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IToaThuocMauDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.bacSiId = data['bacSiId'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.duocId = data['duocId'];\r\n      this.sang = data['sang'];\r\n      this.trua = data['trua'];\r\n      this.chieu = data['chieu'];\r\n      this.toi = data['toi'];\r\n      this.soNgay = data['soNgay'];\r\n      this.soLuong = data['soLuong'];\r\n      this.duongDungId = data['duongDungId'];\r\n      this.loai = data['loai'];\r\n      this.maICD = data['maICD'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.maDuoc = data['maDuoc'];\r\n      this.tenDuoc = data['tenDuoc'];\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): ToaThuocMauDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new ToaThuocMauDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['bacSiId'] = this.bacSiId;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['duocId'] = this.duocId;\r\n    data['sang'] = this.sang;\r\n    data['trua'] = this.trua;\r\n    data['chieu'] = this.chieu;\r\n    data['toi'] = this.toi;\r\n    data['soNgay'] = this.soNgay;\r\n    data['soLuong'] = this.soLuong;\r\n    data['duongDungId'] = this.duongDungId;\r\n    data['loai'] = this.loai;\r\n    data['maICD'] = this.maICD;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['maDuoc'] = this.maDuoc;\r\n    data['tenDuoc'] = this.tenDuoc;\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IToaThuocMauDto {\r\n  bacSiId: number | undefined;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  duocId: number | undefined;\r\n  sang: number | undefined;\r\n  trua: number | undefined;\r\n  chieu: number | undefined;\r\n  toi: number | undefined;\r\n  soNgay: number | undefined;\r\n  soLuong: number | undefined;\r\n  duongDungId: number | undefined;\r\n  loai: string | undefined;\r\n  maICD: string | undefined;\r\n  benhVienId: number;\r\n  maDuoc: string | undefined;\r\n  tenDuoc: string | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedRequestToaThuocMauChiTietDto implements IPagedRequestToaThuocMauChiTietDto {\r\n  ma!: string | undefined;\r\n  bacSiId!: number;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedRequestToaThuocMauChiTietDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.bacSiId = data['bacSiId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedRequestToaThuocMauChiTietDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedRequestToaThuocMauChiTietDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['bacSiId'] = this.bacSiId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedRequestToaThuocMauChiTietDto {\r\n  ma: string | undefined;\r\n  bacSiId: number;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class PagedResultDtoOfToaThuocMauDto implements IPagedResultDtoOfToaThuocMauDto {\r\n  totalCount!: number;\r\n  items!: ToaThuocMauDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfToaThuocMauDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(ToaThuocMauDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfToaThuocMauDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfToaThuocMauDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfToaThuocMauDto {\r\n  totalCount: number;\r\n  items: ToaThuocMauDto[] | undefined;\r\n}\r\n\r\nexport class BenhVienSessionDto implements IBenhVienSessionDto {\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  tinhId!: number | undefined;\r\n  huyenId!: number | undefined;\r\n  xaId!: number | undefined;\r\n  tuyenBenhVien!: number | undefined;\r\n  loaiBenhVien!: number | undefined;\r\n  benhVienChaId!: number | undefined;\r\n  diaChi!: string | undefined;\r\n  coQuanChuQuanId!: number | undefined;\r\n\r\n  constructor(data?: IBenhVienSessionDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.tinhId = data['tinhId'];\r\n      this.huyenId = data['huyenId'];\r\n      this.xaId = data['xaId'];\r\n      this.tuyenBenhVien = data['tuyenBenhVien'];\r\n      this.loaiBenhVien = data['loaiBenhVien'];\r\n      this.benhVienChaId = data['benhVienChaId'];\r\n      this.diaChi = data['diaChi'];\r\n      this.coQuanChuQuanId = data['coQuanChuQuanId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): BenhVienSessionDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new BenhVienSessionDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['tinhId'] = this.tinhId;\r\n    data['huyenId'] = this.huyenId;\r\n    data['xaId'] = this.xaId;\r\n    data['tuyenBenhVien'] = this.tuyenBenhVien;\r\n    data['loaiBenhVien'] = this.loaiBenhVien;\r\n    data['benhVienChaId'] = this.benhVienChaId;\r\n    data['diaChi'] = this.diaChi;\r\n    data['coQuanChuQuanId'] = this.coQuanChuQuanId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IBenhVienSessionDto {\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  tinhId: number | undefined;\r\n  huyenId: number | undefined;\r\n  xaId: number | undefined;\r\n  tuyenBenhVien: number | undefined;\r\n  loaiBenhVien: number | undefined;\r\n  benhVienChaId: number | undefined;\r\n  diaChi: string | undefined;\r\n  coQuanChuQuanId: number | undefined;\r\n}\r\n\r\nexport class NhanLucSessionDto implements INhanLucSessionDto {\r\n  id!: number;\r\n  ma!: string | undefined;\r\n  ten!: string | undefined;\r\n  ngaySinh!: moment.Moment | undefined;\r\n  gioiTinh!: number;\r\n  phongBanId!: number | undefined;\r\n  chucVuId!: number | undefined;\r\n  chucDanhId!: number | undefined;\r\n  loaiNhanLucId!: number | undefined;\r\n\r\n  constructor(data?: INhanLucSessionDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.id = data['id'];\r\n      this.ma = data['ma'];\r\n      this.ten = data['ten'];\r\n      this.ngaySinh = data['ngaySinh'] ? moment(data['ngaySinh'].toString()) : <any>undefined;\r\n      this.gioiTinh = data['gioiTinh'];\r\n      this.phongBanId = data['phongBanId'];\r\n      this.chucVuId = data['chucVuId'];\r\n      this.chucDanhId = data['chucDanhId'];\r\n      this.loaiNhanLucId = data['loaiNhanLucId'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): NhanLucSessionDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new NhanLucSessionDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['id'] = this.id;\r\n    data['ma'] = this.ma;\r\n    data['ten'] = this.ten;\r\n    data['ngaySinh'] = this.ngaySinh ? this.ngaySinh.toISOString() : <any>undefined;\r\n    data['gioiTinh'] = this.gioiTinh;\r\n    data['phongBanId'] = this.phongBanId;\r\n    data['chucVuId'] = this.chucVuId;\r\n    data['chucDanhId'] = this.chucDanhId;\r\n    data['loaiNhanLucId'] = this.loaiNhanLucId;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface INhanLucSessionDto {\r\n  id: number;\r\n  ma: string | undefined;\r\n  ten: string | undefined;\r\n  ngaySinh: moment.Moment | undefined;\r\n  gioiTinh: number;\r\n  phongBanId: number | undefined;\r\n  chucVuId: number | undefined;\r\n  chucDanhId: number | undefined;\r\n  loaiNhanLucId: number | undefined;\r\n}\r\n\r\nexport class UserSessionDto implements IUserSessionDto {\r\n  userId!: string;\r\n  benhVienId!: number | undefined;\r\n  nhanLucId!: number | undefined;\r\n  benhVienDto!: BenhVienSessionDto;\r\n  nhanLucDto!: NhanLucSessionDto;\r\n\r\n  constructor(data?: IUserSessionDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.userId = data['userId'];\r\n      this.benhVienId = data['benhVienId'];\r\n      this.nhanLucId = data['nhanLucId'];\r\n      this.benhVienDto = data['benhVienDto'] ? BenhVienSessionDto.fromJS(data['benhVienDto']) : <any>undefined;\r\n      this.nhanLucDto = data['nhanLucDto'] ? NhanLucSessionDto.fromJS(data['nhanLucDto']) : <any>undefined;\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): UserSessionDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new UserSessionDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['userId'] = this.userId;\r\n    data['benhVienId'] = this.benhVienId;\r\n    data['nhanLucId'] = this.nhanLucId;\r\n    data['benhVienDto'] = this.benhVienDto ? this.benhVienDto.toJSON() : <any>undefined;\r\n    data['nhanLucDto'] = this.nhanLucDto ? this.nhanLucDto.toJSON() : <any>undefined;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IUserSessionDto {\r\n  userId: string;\r\n  benhVienId: number | undefined;\r\n  nhanLucId: number | undefined;\r\n  benhVienDto: BenhVienSessionDto;\r\n  nhanLucDto: NhanLucSessionDto;\r\n}\r\n\r\nexport class PagedVacXinInputDto implements IPagedVacXinInputDto {\r\n  nhomVacXinId!: number | undefined;\r\n  filter!: string | undefined;\r\n  isActive!: boolean | undefined;\r\n  exportMode!: ExportModel;\r\n  outputFileExtension!: OutputFileExtension;\r\n  sorting!: string | undefined;\r\n  skipCount!: number;\r\n  maxResultCount!: number;\r\n\r\n  constructor(data?: IPagedVacXinInputDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.nhomVacXinId = data['nhomVacXinId'];\r\n      this.filter = data['filter'];\r\n      this.isActive = data['isActive'];\r\n      this.exportMode = data['exportMode'];\r\n      this.outputFileExtension = data['outputFileExtension'];\r\n      this.sorting = data['sorting'];\r\n      this.skipCount = data['skipCount'];\r\n      this.maxResultCount = data['maxResultCount'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedVacXinInputDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedVacXinInputDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['nhomVacXinId'] = this.nhomVacXinId;\r\n    data['filter'] = this.filter;\r\n    data['isActive'] = this.isActive;\r\n    data['exportMode'] = this.exportMode;\r\n    data['outputFileExtension'] = this.outputFileExtension;\r\n    data['sorting'] = this.sorting;\r\n    data['skipCount'] = this.skipCount;\r\n    data['maxResultCount'] = this.maxResultCount;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedVacXinInputDto {\r\n  nhomVacXinId: number | undefined;\r\n  filter: string | undefined;\r\n  isActive: boolean | undefined;\r\n  exportMode: ExportModel;\r\n  outputFileExtension: OutputFileExtension;\r\n  sorting: string | undefined;\r\n  skipCount: number;\r\n  maxResultCount: number;\r\n}\r\n\r\nexport class VacXinDto implements IVacXinDto {\r\n  ten!: string | undefined;\r\n  tenDayDu!: string | undefined;\r\n  cvx!: string | undefined;\r\n  strLoai!: string | undefined;\r\n  loai!: number;\r\n  tcmr!: boolean;\r\n  duongDung!: number | undefined;\r\n  vacXinKhangNguyenId!: number;\r\n  tenKhangNguyen!: string | undefined;\r\n  listKhangNguyen!: string[] | undefined;\r\n  id!: number;\r\n\r\n  constructor(data?: IVacXinDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.ten = data['ten'];\r\n      this.tenDayDu = data['tenDayDu'];\r\n      this.cvx = data['cvx'];\r\n      this.strLoai = data['strLoai'];\r\n      this.loai = data['loai'];\r\n      this.tcmr = data['tcmr'];\r\n      this.duongDung = data['duongDung'];\r\n      this.vacXinKhangNguyenId = data['vacXinKhangNguyenId'];\r\n      this.tenKhangNguyen = data['tenKhangNguyen'];\r\n      if (Array.isArray(data['listKhangNguyen'])) {\r\n        this.listKhangNguyen = [] as any;\r\n        for (let item of data['listKhangNguyen'])\r\n          this.listKhangNguyen!.push(item);\r\n      }\r\n      this.id = data['id'];\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): VacXinDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new VacXinDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['ten'] = this.ten;\r\n    data['tenDayDu'] = this.tenDayDu;\r\n    data['cvx'] = this.cvx;\r\n    data['strLoai'] = this.strLoai;\r\n    data['loai'] = this.loai;\r\n    data['tcmr'] = this.tcmr;\r\n    data['duongDung'] = this.duongDung;\r\n    data['vacXinKhangNguyenId'] = this.vacXinKhangNguyenId;\r\n    data['tenKhangNguyen'] = this.tenKhangNguyen;\r\n    if (Array.isArray(this.listKhangNguyen)) {\r\n      data['listKhangNguyen'] = [];\r\n      for (let item of this.listKhangNguyen)\r\n        data['listKhangNguyen'].push(item);\r\n    }\r\n    data['id'] = this.id;\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IVacXinDto {\r\n  ten: string | undefined;\r\n  tenDayDu: string | undefined;\r\n  cvx: string | undefined;\r\n  strLoai: string | undefined;\r\n  loai: number;\r\n  tcmr: boolean;\r\n  duongDung: number | undefined;\r\n  vacXinKhangNguyenId: number;\r\n  tenKhangNguyen: string | undefined;\r\n  listKhangNguyen: string[] | undefined;\r\n  id: number;\r\n}\r\n\r\nexport class PagedResultDtoOfVacXinDto implements IPagedResultDtoOfVacXinDto {\r\n  totalCount!: number;\r\n  items!: VacXinDto[] | undefined;\r\n\r\n  constructor(data?: IPagedResultDtoOfVacXinDto) {\r\n    if (data) {\r\n      for (var property in data) {\r\n        if (data.hasOwnProperty(property))\r\n          (<any>this)[property] = (<any>data)[property];\r\n      }\r\n    }\r\n  }\r\n\r\n  init(data?: any) {\r\n    if (data) {\r\n      this.totalCount = data['totalCount'];\r\n      if (Array.isArray(data['items'])) {\r\n        this.items = [] as any;\r\n        for (let item of data['items'])\r\n          this.items!.push(VacXinDto.fromJS(item));\r\n      }\r\n    }\r\n  }\r\n\r\n  static fromJS(data: any): PagedResultDtoOfVacXinDto {\r\n    data = typeof data === 'object' ? data : {};\r\n    let result = new PagedResultDtoOfVacXinDto();\r\n    result.init(data);\r\n    return result;\r\n  }\r\n\r\n  toJSON(data?: any) {\r\n    data = typeof data === 'object' ? data : {};\r\n    data['totalCount'] = this.totalCount;\r\n    if (Array.isArray(this.items)) {\r\n      data['items'] = [];\r\n      for (let item of this.items)\r\n        data['items'].push(item.toJSON());\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport interface IPagedResultDtoOfVacXinDto {\r\n  totalCount: number;\r\n  items: VacXinDto[] | undefined;\r\n}\r\n\r\nexport class ApiException extends Error {\r\n  message: string;\r\n  status: number;\r\n  response: string;\r\n  headers: { [key: string]: any; };\r\n  result: any;\r\n\r\n  constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n    super();\r\n\r\n    this.message = message;\r\n    this.status = status;\r\n    this.response = response;\r\n    this.headers = headers;\r\n    this.result = result;\r\n  }\r\n\r\n  protected isApiException = true;\r\n\r\n  static isApiException(obj: any): obj is ApiException {\r\n    return obj.isApiException === true;\r\n  }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n  if (result !== null && result !== undefined)\r\n    return _observableThrow(result);\r\n  else\r\n    return _observableThrow(new ApiException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n  return new Observable<string>((observer: any) => {\r\n    if (!blob) {\r\n      observer.next('');\r\n      observer.complete();\r\n    } else {\r\n      let reader = new FileReader();\r\n      reader.onload = event => {\r\n        observer.next((<any>event.target).result);\r\n        observer.complete();\r\n      };\r\n      reader.readAsText(blob);\r\n    }\r\n  });\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DestroyRxjsService extends Subject<void> implements OnDestroy {\r\n  ngOnDestroy(): void {\r\n    this.next();\r\n    this.complete();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport * as $ from 'jquery';\r\nimport { AppUtilityService } from './app-utility-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfValidatorService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public noWhitespaceValidator(control: FormControl) {\r\n    if (AppUtilityService.isNullOrEmpty(control.value)) {\r\n      return { whiteSpace: true };\r\n    }\r\n    const v = '' + control.value;\r\n    const isWhitespace = v.trim().length === 0;\r\n    const isValid = !isWhitespace;\r\n    return isValid ? null : { whiteSpace: true };\r\n  }\r\n\r\n  public emailValidator(control: FormControl) {\r\n    const value = control?.value || '';\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const isValid = re.test(value);\r\n    return isValid ? null : { email: true };\r\n  }\r\n\r\n  public passwordValidator(control: FormControl) {\r\n    const value = control?.value || '';\r\n    const check = value.match(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{8,}$/);\r\n    const isValid = !!check;\r\n    return isValid ? null : { password: true };\r\n  }\r\n\r\n  public phoneValidator(control: FormControl) {\r\n    const value = control?.value || '';\r\n    const check = value.match(/(09|01[2|6|8|9])+([0-9]{8})\\b/);\r\n    const isValid = !!check;\r\n    return isValid ? null : { phone: true };\r\n  }\r\n\r\n  focusControlItem(id: number) {\r\n    const arr = $('#' + id).find('.ord-form-control');\r\n    let flag = true;\r\n    arr.each(function() {\r\n      let txt = $(this).find('.form-control-err').text();\r\n      if (txt) {\r\n        txt = txt.replace(/ /g, '');\r\n      }\r\n      if (flag && AppUtilityService.isNotNull(txt)) {\r\n        $(this).find('.ord-dynamic-input').focus();\r\n        $(this).find('.ant-input-number-input').focus();\r\n        $(this).find('.ant-input').focus();\r\n        $(this).find('.ant-select-selection-search-input').focus();\r\n        if ($(this).find('.ant-radio-input')[0]) {\r\n          $(this).find('.ant-radio-input')[0].focus();\r\n        }\r\n        flag = false;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  focusFirst(id: number) {\r\n    const arr = $('#' + id).find('.ord-form-control');\r\n    let flag = true;\r\n    arr.each(function() {\r\n      if (flag) {\r\n        $(this).find('.ord-dynamic-input').focus();\r\n        $(this).find('.ant-input-number-input').focus();\r\n        $(this).find('.ant-input').focus();\r\n        $(this).find('.ant-select-selection-search-input').focus();\r\n        if ($(this).find('.ant-radio-input')[0]) {\r\n          $(this).find('.ant-radio-input')[0].focus();\r\n        }\r\n        flag = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { OfControlModel, OfExtendControlModel, OfType } from '../models';\r\nimport { OfValidatorService } from './of-validator.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfCreateControlFormService {\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private validatorService: OfValidatorService) {\r\n  }\r\n\r\n  createControl(fields: OfControlModel[]): FormGroup {\r\n    const group = this.fb.group({});\r\n    _.forEach(fields, (field: OfControlModel) => {\r\n      this.createField(field, group);\r\n    });\r\n    return group;\r\n  }\r\n\r\n  createExtendControl(group: FormGroup, controls: OfExtendControlModel[]) {\r\n    _.forEach(controls, (field: OfExtendControlModel) => {\r\n      const f = group.get(field.dataField);\r\n      if (f) {\r\n        return;\r\n      }\r\n      this.createValidations(field);\r\n      const control = this.fb.control(\r\n        field.value,\r\n        this.bindValidations(field)\r\n      );\r\n      if (field.disabled) {\r\n        control.disable({ onlySelf: true });\r\n      }\r\n      group.addControl(field.dataField, control);\r\n    });\r\n\r\n  }\r\n\r\n  updateControl(fields: OfControlModel[], group: FormGroup): void {\r\n    Object.keys(group.controls).forEach(key => {\r\n      const fDataField = fields.find(x => x.dataField === key);\r\n      if (!fDataField) {\r\n        group.removeControl(key);\r\n      }\r\n    });\r\n    _.forEach(fields, (field: OfControlModel) => {\r\n      const f = group.get(field.dataField);\r\n      if (f) {\r\n        return;\r\n      }\r\n      this.createField(field, group);\r\n    });\r\n  }\r\n\r\n  private createField(field: OfControlModel, group: FormGroup) {\r\n    const ignoreType: OfType[] = ['contentHtml', 'componentRef', 'templateRef'];\r\n    if (ignoreType.indexOf(field.type) > 0) {\r\n      return;\r\n    }\r\n    this.createValidations(field);\r\n    const control = this.fb.control(\r\n      field.value,\r\n      this.bindValidations(field)\r\n    );\r\n    if (field.disabled) {\r\n      control.disable({ onlySelf: true });\r\n    }\r\n    group.addControl(field.dataField, control);\r\n  }\r\n\r\n\r\n  createValidations(field: OfControlModel | OfExtendControlModel) {\r\n    field.validations = field.validations || [];\r\n    field.validations.forEach(valid => {\r\n      if (valid.name === 'email') {\r\n        valid.validator = this.validatorService.emailValidator;\r\n        valid.message = valid.message || 'Email sai định dạng!';\r\n        return;\r\n      }\r\n      if (valid.name === 'phone') {\r\n        valid.validator = this.validatorService.phoneValidator;\r\n        valid.message = valid.message || 'Số điện thoại không đúng định dạng!';\r\n        return;\r\n      }\r\n      if (valid.name === 'password') {\r\n        valid.validator = this.validatorService.passwordValidator;\r\n        valid.message = valid.message || 'Mật khẩu tối thiểu 8 ký tự, bao gồm chữ in hoa/ thường , số và ký tự đặc biệt!';\r\n        return;\r\n      }\r\n    });\r\n    if (field.required) {\r\n      field.validations.push({\r\n        name: 'whiteSpace',\r\n        validator: this.validatorService.noWhitespaceValidator,\r\n        message: field.errorEmpty\r\n      });\r\n    }\r\n  }\r\n\r\n  bindValidations(field: OfControlModel | OfExtendControlModel) {\r\n    const validations = field.validations || [];\r\n    if (validations.length > 0) {\r\n      const validList = [];\r\n      validations.forEach(valid => {\r\n        validList.push(valid.validator);\r\n      });\r\n      return Validators.compose(validList);\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","<form class=\"dynamic-form\" [formGroup]=\"form\">\r\n  <div nz-row [nzGutter]=\"[18, 6]\" [id]=\"schemaModel.id\">\r\n    <ng-content select=\"[topContent]\"></ng-content>\r\n    <ng-container *ngFor=\"let field of fields;trackBy:trackByField\">\r\n      <div nz-col *ngIf=\"!field.hidden\" [nzSpan]=\"field.width\" [ngClass]=\"field.css\">\r\n        <nz-form-label [nzRequired]=\"field.required\" [hidden]=\"field.hiddenLabel\">\r\n          <span [innerHTML]=\"field.label\"></span>\r\n        </nz-form-label>\r\n        <div ofDynamicField [schemaModel]=\"schemaModel\" [field]=\"field\" [group]=\"form\"\r\n             [ofFieldTempates]=\"ofFieldTempates\" (searchEvent)=\"searchEvent.emit($event)\">\r\n        </div>\r\n        <span class=\"form-control-err text-danger\">\r\n              {{this.form.controls[field.dataField]?.errors | showValidationError : field?.validations : schemaModel.submitted}}\r\n        </span>\r\n        <div [innerHTML]=\"field.bottomHtml\"></div>\r\n      </div>\r\n    </ng-container>\r\n    <div *ngIf=\"schemaModel.isSearchBox\" nz-col class=\"gutter-row of-btn-search ord-form-control\" [nzSpan]=\"2\">\r\n      <button nz-button nzType=\"primary\"\r\n              [nzLoading]=\"schemaModel.searchBtnBusy\"\r\n              (click)=\"onClickSearchBtn()\">Tìm kiếm\r\n      </button>\r\n    </div>\r\n    <ng-content select=\"[bottomContent]\"></ng-content>\r\n  </div>\r\n</form>\r\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport * as _ from 'lodash';\r\nimport { DestroyRxjsService } from '../../services/destroy-rxjs.service';\r\nimport { OfControlModel, OfSchemaModel } from '../../models';\r\nimport { OfFieldComponent } from '../of-template-ref/of-field.component';\r\nimport { OfCreateControlFormService } from '../../services/of-create-control-form-service';\r\nimport { OfValidatorService } from '../../services/of-validator.service';\r\nimport { distinctUntilChanged, filter, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'of',\r\n  templateUrl: './of-dynamic.component.html',\r\n  styleUrls: ['./of-dynamic.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [DestroyRxjsService]\r\n})\r\nexport class OfDynamicComponent implements OnInit, AfterViewInit {\r\n  @Input() schemaModel: OfSchemaModel;\r\n  @Output() submitValueEvent = new EventEmitter<any>();\r\n  @Output() searchEvent = new EventEmitter<any>();\r\n  form: FormGroup;\r\n  fields: OfControlModel[] = [];\r\n  ofFieldTempates: OfFieldComponent[] = [];\r\n\r\n  get value() {\r\n    return this.form?.getRawValue();\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private createCtrlService: OfCreateControlFormService,\r\n              private validatorService: OfValidatorService,\r\n              private destroy$: DestroyRxjsService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fields = this.schemaModel.fields || [];\r\n    this.form = this.createCtrlService.createControl(this.fields);\r\n    this.schemaModel.form = this.form;\r\n    this.init$();\r\n  }\r\n\r\n  reBuilderForm() {\r\n    this.fields = this.schemaModel.fields || [];\r\n    this.createCtrlService.updateControl(this.fields, this.form);\r\n    this.schemaModel.form = this.form;\r\n  }\r\n\r\n\r\n  init$() {\r\n    this.schemaModel.rebuilder$.pipe(takeUntil(this.destroy$),\r\n      distinctUntilChanged(),\r\n      filter(x => x > 0))\r\n      .subscribe(() => {\r\n        this.reBuilderForm();\r\n      });\r\n  }\r\n\r\n  trackByField(index: number, field: OfControlModel) {\r\n    return field.dataField;\r\n  }\r\n\r\n  onSubmit(isCheckValid = true): any {\r\n    this.schemaModel.submitted = true;\r\n    if (!isCheckValid) {\r\n      this.submitValueEvent.emit(this.value);\r\n      return this.value;\r\n    }\r\n    _.forEach(this.fields, (field) => {\r\n      const f = this.form.controls[field.dataField];\r\n      if (f) {\r\n        if (field.hidden) {\r\n          f.setValidators(null);\r\n        } else {\r\n          f.setValidators(this.createCtrlService.bindValidations(field));\r\n        }\r\n      }\r\n    });\r\n    if (this.form.valid) {\r\n      this.submitValueEvent.emit(this.value);\r\n      return this.value;\r\n    } else {\r\n      setTimeout(() => {\r\n        this.validatorService.focusControlItem(this.schemaModel.id);\r\n      }, 500);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.validatorService.focusFirst(this.schemaModel.id);\r\n    }, 500);\r\n  }\r\n\r\n  onClickSearchBtn() {\r\n    this.schemaModel.searchBtnBusy = true;\r\n    this.searchEvent.emit(this.value);\r\n    this.schemaModel.searchEvent$.next(this.value);\r\n  }\r\n\r\n\r\n  disableAll(f = true) {\r\n    this.schemaModel.disableAll(f);\r\n  }\r\n\r\n  disableField(name: string, f = true) {\r\n    this.schemaModel.disableField(name, f);\r\n  }\r\n\r\n  addOfFieldTempates(d: OfFieldComponent) {\r\n    this.ofFieldTempates.push(d);\r\n  }\r\n}\r\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\nimport { OfDynamicComponent } from '../of-dynamic/of-dynamic.component';\n\n@Component({\n  selector: 'of-field',\n  template: ``\n})\nexport class OfFieldComponent {\n  // map với dataField\n  @Input() id = '';\n  @ContentChild('control') controlTemplate: TemplateRef<any>;\n\n  constructor(public ofDynamic: OfDynamicComponent) {\n    this.ofDynamic.addOfFieldTempates(this);\n  }\n\n}\n","import { Component } from '@angular/core';\r\nimport {\r\n  IOfSelectOptionDto, OfCheckBoxModel, OfContentHtmlModel, OfCurrencyModel, OfDateModel,\r\n  OfExtendControlModel, OfNumberModel, OfPwdModel, OfRadioModel,\r\n  OfSchemaModel,\r\n  OfSelectSearchServerModel, OfSwitchModel,\r\n  OfTemplateRefModel, OfTextAreaModel\r\n} from '../models';\r\nimport { OfTextModel } from './of-text/of-text.model';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { OfSelectModel } from './of-select/of-select-model';\r\nimport { OfSelectAsyncModel } from './of-select-async/of-select-async-model';\r\nimport { OfSelectApiModel } from './of-select-api/of-select-api-model';\r\nimport {\r\n  SelectoptionServiceProxy,\r\n  SelectOptionType,\r\n  SelectsearchserverServiceProxy,\r\n  SelectSearchServerType\r\n} from '../services/danh-muc-service-proxies';\r\nimport { OfSelectCascadeModel } from './of-select-cascade/of-select-cascade-model';\r\n\r\n@Component({\r\n  selector: 'lib-of',\r\n  template: `\r\n      <div class=\"form-group\">\r\n          <of #vcForm [schemaModel]=\"schemaModel\">\r\n              <of-field id=\"templateRef\">\r\n                  <ng-template #control let-group=\"group\">\r\n                      <form [formGroup]=\"group\">\r\n                          <nz-input-group nzCompact>\r\n                              <nz-select formControlName=\"templateOpt\" style=\"width: 50%\">\r\n                                  <nz-option [nzLabel]=\"'Option 1'\" [nzValue]=\"'1'\"></nz-option>\r\n                                  <nz-option [nzLabel]=\"'Option 2'\" [nzValue]=\"'2'\"></nz-option>\r\n                              </nz-select>\r\n                              <input formControlName=\"templateInput\" nz-input placeholder=\"templateInput\"\r\n                                     style=\"width: 50%\"/>\r\n                          </nz-input-group>\r\n                      </form>\r\n                  </ng-template>\r\n              </of-field>\r\n          </of>\r\n      </div>\r\n      <div>\r\n          <button class=\"btn btn-primary\" (click)=\"onClickDisable()\">Disable</button>\r\n          <button class=\"btn btn-primary\" (click)=\"onClickSetValue()\">Set value</button>\r\n          <button class=\"btn btn-primary\" (click)=\"vcForm.onSubmit()\">Submit</button>\r\n          <button class=\"btn btn-primary\" (click)=\"schemaModel.submitted = false\">Clear Submit</button>\r\n          <button class=\"btn btn-primary\" (click)=\"onClickAddControl()\">AddControl</button>\r\n      </div>\r\n      <pre>{{vcForm.value|json}}</pre>\r\n\r\n  `,\r\n  styles: [],\r\n  providers: [SelectoptionServiceProxy, SelectsearchserverServiceProxy]\r\n})\r\nexport class OfComponent {\r\n  formDisable$ = new BehaviorSubject(false);\r\n  ngaySinhMin$ = new BehaviorSubject<Date>(new Date(2021, 2, 27));\r\n  danTocOption$ = new BehaviorSubject<IOfSelectOptionDto[]>([{\r\n    displayText: 'Kinh',\r\n    value: '1'\r\n  }, {\r\n    displayText: 'Mông',\r\n    value: '2'\r\n  }]);\r\n  schemaModel = new OfSchemaModel({\r\n    fields: [\r\n      new OfTextModel({\r\n        label: 'Mã',\r\n        dataField: 'ma',\r\n        required: true,\r\n        validations: [\r\n          {\r\n            name: 'email'\r\n          }\r\n        ],\r\n        disabled: true\r\n\r\n      }),\r\n      new OfTextModel({\r\n        label: 'Họ tên',\r\n        dataField: 'tenDayDu',\r\n        required: true,\r\n        disabledAsync: this.formDisable$\r\n      }),\r\n\r\n      new OfSelectModel({\r\n        label: 'Giới tính',\r\n        dataField: 'gioiTinhId',\r\n        value: 1,\r\n        options: [\r\n          { displayText: 'Nam', value: '1' },\r\n          { displayText: 'Nữ', value: '2' }\r\n        ]\r\n      }),\r\n      new OfSelectAsyncModel({\r\n        label: 'Dân tộc async',\r\n        dataField: 'danToc',\r\n        value: 1,\r\n        optionsAsync: this.danTocOption$\r\n      }),\r\n      new OfSelectApiModel({\r\n        label: 'Tỉnh',\r\n        dataField: 'tinhId',\r\n        functionService: this.selectSp.getoptions({\r\n          type: SelectOptionType.Tinh\r\n        } as any),\r\n        keyCache: 'tinh'\r\n      }),\r\n      new OfSelectCascadeModel({\r\n        label: 'Huyện',\r\n        dataField: 'huyenId',\r\n        cascadeField: 'tinhId',\r\n        functionService: (cascade) => {\r\n          return this.selectSp.getoptions({\r\n            type: SelectOptionType.Huyen,\r\n            cascader: cascade\r\n          } as any);\r\n        },\r\n        renderOptionFunc: (opt) => {\r\n          if (opt) {\r\n            return opt.value + ' - ' + opt.displayText;\r\n          }\r\n          return '';\r\n        },\r\n        renderSelectedFunc: (opt) => {\r\n          if (opt) {\r\n            return `<b>${opt.value}</b>` + ' - ' + opt.displayText;\r\n          }\r\n          return '';\r\n        }\r\n      }),\r\n      new OfSelectCascadeModel({\r\n        label: 'Xã',\r\n        dataField: 'xaId',\r\n        cascadeField: 'huyenId',\r\n        functionService: (cascade) => {\r\n          return this.selectSp.getoptions({\r\n            type: SelectOptionType.Xa,\r\n            cascader: cascade\r\n          } as any);\r\n        },\r\n        keyCache: 'xa'\r\n      }),\r\n\r\n      new OfSelectSearchServerModel({\r\n        label: 'Quận huyện search',\r\n        dataField: 'huyenSearchServerId',\r\n        functionService: (dto) => {\r\n          return this.searchSp.getoptions({\r\n            ...dto,\r\n            type: SelectSearchServerType.Huyen\r\n          });\r\n        }\r\n      }),\r\n      new OfSelectSearchServerModel({\r\n        label: 'Quận huyện search showPagination',\r\n        dataField: 'huyenSearchServerId',\r\n        functionService: (dto) => {\r\n          return this.searchSp.getoptions({\r\n            ...dto,\r\n            type: SelectSearchServerType.Huyen\r\n          });\r\n        },\r\n        showPagination: true\r\n      }),\r\n      new OfCheckBoxModel({\r\n        label: '',\r\n        dataField: 'checkBox',\r\n        checkBoxLabel: 'Check box',\r\n        disabledAsync: this.formDisable$\r\n      }),\r\n      new OfDateModel({\r\n        label: 'Ngày sinh',\r\n        dataField: 'ngaySinh',\r\n        required: true,\r\n        notGreaterThanCurrent: true,\r\n        minDateAsync: this.ngaySinhMin$,\r\n        disabledAsync: this.formDisable$\r\n      }),\r\n      new OfCurrencyModel({\r\n        label: 'Đơn giá',\r\n        dataField: 'donGia',\r\n        disabledAsync: this.formDisable$\r\n      }),\r\n      new OfContentHtmlModel({\r\n        label: ' ',\r\n        dataField: 'benhNhanId',\r\n        content: '<h3>content string html</h3>',\r\n        disabledAsync: this.formDisable$\r\n      }),\r\n      new OfTextAreaModel({\r\n        label: 'Ghi chú',\r\n        dataField: 'ghiChu',\r\n        rows: 2,\r\n        disabledAsync: this.formDisable$\r\n      }),\r\n      new OfNumberModel({\r\n        label: 'Số thứ tự',\r\n        dataField: 'soThuTu',\r\n        min: 10,\r\n        max: 100,\r\n        step: 2,\r\n        disabledAsync: this.formDisable$\r\n      }),\r\n      new OfNumberModel({\r\n        label: 'Điện thoại',\r\n        dataField: 'dienThoai',\r\n        onlyKeyNumber: true,\r\n        disabledAsync: this.formDisable$\r\n      }),\r\n      new OfPwdModel({\r\n        label: 'Mật khẩu',\r\n        dataField: 'matKhau',\r\n        disabledAsync: this.formDisable$,\r\n        validations: [\r\n          {\r\n            name: 'password'\r\n          }\r\n        ]\r\n      }),\r\n      new OfRadioModel({\r\n        label: 'Loại',\r\n        dataField: 'loai',\r\n        items: [{\r\n          label: 'Loại 1',\r\n          value: 1\r\n        }, {\r\n          label: 'Loại 2',\r\n          value: 2\r\n        }, {\r\n          label: 'Loại 3',\r\n          value: 3\r\n        }]\r\n      }),\r\n      new OfSwitchModel({\r\n        label: 'Switch',\r\n        dataField: 'switch',\r\n        yesText: 'Có'\r\n      }),\r\n      new OfTemplateRefModel({\r\n        label: 'templateRef',\r\n        dataField: 'templateRef',\r\n        controls: [\r\n          new OfExtendControlModel({\r\n            dataField: 'templateOpt',\r\n            value: '1'\r\n          }),\r\n          new OfExtendControlModel({\r\n            dataField: 'templateInput',\r\n            required: true\r\n          })\r\n        ]\r\n      })\r\n    ]\r\n  });\r\n  private disable = false;\r\n\r\n  constructor(private selectSp: SelectoptionServiceProxy,\r\n              private searchSp: SelectsearchserverServiceProxy) {\r\n\r\n  }\r\n\r\n  onClickDisable() {\r\n    this.disable = !this.disable;\r\n    this.schemaModel.disableAll(this.disable);\r\n  }\r\n\r\n  onClickSetValue() {\r\n    this.schemaModel.patchValue({\r\n      ngaySinh: new Date(2021, 2, 28),\r\n      ma: Number(new Date()),\r\n      ghiChu: Number(new Date()),\r\n      huyenSearchServerId: '9361',\r\n      tinhId: '867',\r\n      huyenId: '531',\r\n      xaId: '533'\r\n    });\r\n  }\r\n\r\n  onClickAddControl() {\r\n    this.schemaModel.addControls([\r\n      new OfTextModel({\r\n        label: 'Mã ' + Number(new Date()),\r\n        dataField: 'ma' + Number(new Date()),\r\n        required: true,\r\n        validations: [\r\n          {\r\n            name: 'email'\r\n          }\r\n        ],\r\n        value: Number(new Date())\r\n      })\r\n    ], 0);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { RestService } from '@abp/ng.core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfService {\n  apiName = 'Of';\n\n  constructor(private restService: RestService) {}\n\n  sample() {\n    // return this.restService.request<void, any>(\n    //   { method: 'GET', url: '/api/Of/sample' },\n    //   { apiName: this.apiName }\n    // );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DynamicLayoutComponent } from '@abp/ng.core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OfComponent } from './components/of.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: DynamicLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: OfComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OfRoutingModule {}\n","import { NgModule } from '@angular/core';\r\nimport { NzAffixModule } from 'ng-zorro-antd/affix';\r\nimport { NzAlertModule } from 'ng-zorro-antd/alert';\r\nimport { NzAnchorModule } from 'ng-zorro-antd/anchor';\r\nimport { NzAutocompleteModule } from 'ng-zorro-antd/auto-complete';\r\nimport { NzAvatarModule } from 'ng-zorro-antd/avatar';\r\nimport { NzBackTopModule } from 'ng-zorro-antd/back-top';\r\nimport { NzBadgeModule } from 'ng-zorro-antd/badge';\r\nimport { NzBreadCrumbModule } from 'ng-zorro-antd/breadcrumb';\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzCalendarModule } from 'ng-zorro-antd/calendar';\r\nimport { NzCardModule } from 'ng-zorro-antd/card';\r\nimport { NzCarouselModule } from 'ng-zorro-antd/carousel';\r\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\r\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\r\nimport { NzCollapseModule } from 'ng-zorro-antd/collapse';\r\nimport { NzCommentModule } from 'ng-zorro-antd/comment';\r\nimport { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';\r\nimport { NzTransButtonModule } from 'ng-zorro-antd/core/trans-button';\r\nimport { NzWaveModule } from 'ng-zorro-antd/core/wave';\r\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\r\nimport { NzDescriptionsModule } from 'ng-zorro-antd/descriptions';\r\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\r\nimport { NzDrawerModule } from 'ng-zorro-antd/drawer';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\r\nimport { NzFormModule } from 'ng-zorro-antd/form';\r\nimport { NzGridModule } from 'ng-zorro-antd/grid';\r\nimport { NZ_DATE_LOCALE, NZ_I18N, NzI18nModule, vi_VN } from 'ng-zorro-antd/i18n';\r\nimport { NZ_ICONS, NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzInputModule } from 'ng-zorro-antd/input';\r\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\r\nimport { NzLayoutModule } from 'ng-zorro-antd/layout';\r\nimport { NzListModule } from 'ng-zorro-antd/list';\r\nimport { NzMentionModule } from 'ng-zorro-antd/mention';\r\nimport { NzMenuModule } from 'ng-zorro-antd/menu';\r\nimport { NzMessageModule } from 'ng-zorro-antd/message';\r\nimport { NzModalModule } from 'ng-zorro-antd/modal';\r\nimport { NzNotificationModule } from 'ng-zorro-antd/notification';\r\nimport { NzPageHeaderModule } from 'ng-zorro-antd/page-header';\r\nimport { NzPaginationModule } from 'ng-zorro-antd/pagination';\r\nimport { NzPopconfirmModule } from 'ng-zorro-antd/popconfirm';\r\nimport { NzPopoverModule } from 'ng-zorro-antd/popover';\r\nimport { NzProgressModule } from 'ng-zorro-antd/progress';\r\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\r\nimport { NzRateModule } from 'ng-zorro-antd/rate';\r\nimport { NzResultModule } from 'ng-zorro-antd/result';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzSkeletonModule } from 'ng-zorro-antd/skeleton';\r\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\r\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\r\nimport { NzStatisticModule } from 'ng-zorro-antd/statistic';\r\nimport { NzStepsModule } from 'ng-zorro-antd/steps';\r\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\r\nimport { NzTableModule } from 'ng-zorro-antd/table';\r\nimport { NzTabsModule } from 'ng-zorro-antd/tabs';\r\nimport { NzTagModule } from 'ng-zorro-antd/tag';\r\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\r\nimport { NzTimelineModule } from 'ng-zorro-antd/timeline';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\nimport { NzTransferModule } from 'ng-zorro-antd/transfer';\r\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\r\nimport { NzTreeSelectModule } from 'ng-zorro-antd/tree-select';\r\nimport { NzTypographyModule } from 'ng-zorro-antd/typography';\r\nimport { NzUploadModule } from 'ng-zorro-antd/upload';\r\nimport { NzResizableModule } from 'ng-zorro-antd/resizable';\r\nimport { vi as viDate } from 'date-fns/locale';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport vi from '@angular/common/locales/vi';\r\nimport * as AllIcons from '@ant-design/icons-angular/icons';\r\nimport { IconDefinition } from '@ant-design/icons-angular';\r\nimport { NzSpaceModule } from 'ng-zorro-antd/space';\r\n\r\nregisterLocaleData(vi);\r\n\r\nconst antDesignIcons = AllIcons as {\r\n  [key: string]: IconDefinition;\r\n};\r\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key]);\r\nconst antModule = [\r\n  NzAffixModule,\r\n  NzAlertModule,\r\n  NzAnchorModule,\r\n  NzAutocompleteModule,\r\n  NzAvatarModule,\r\n  NzBackTopModule,\r\n  NzBadgeModule,\r\n  NzButtonModule,\r\n  NzBreadCrumbModule,\r\n  NzCalendarModule,\r\n  NzCardModule,\r\n  NzCarouselModule,\r\n  NzCascaderModule,\r\n  NzCheckboxModule,\r\n  NzCollapseModule,\r\n  NzCommentModule,\r\n  NzDatePickerModule,\r\n  NzDescriptionsModule,\r\n  NzDividerModule,\r\n  NzDrawerModule,\r\n  NzDropDownModule,\r\n  NzEmptyModule,\r\n  NzFormModule,\r\n  NzGridModule,\r\n  NzI18nModule,\r\n  NzIconModule,\r\n  NzInputModule,\r\n  NzInputNumberModule,\r\n  NzLayoutModule,\r\n  NzListModule,\r\n  NzMentionModule,\r\n  NzMenuModule,\r\n  NzMessageModule,\r\n  NzModalModule,\r\n  NzNoAnimationModule,\r\n  NzNotificationModule,\r\n  NzPageHeaderModule,\r\n  NzPaginationModule,\r\n  NzPopconfirmModule,\r\n  NzPopoverModule,\r\n  NzProgressModule,\r\n  NzRadioModule,\r\n  NzRateModule,\r\n  NzResultModule,\r\n  NzSelectModule,\r\n  NzSkeletonModule,\r\n  NzSliderModule,\r\n  NzSpinModule,\r\n  NzStatisticModule,\r\n  NzStepsModule,\r\n  NzSwitchModule,\r\n  NzTableModule,\r\n  NzTabsModule,\r\n  NzTagModule,\r\n  NzTimePickerModule,\r\n  NzTimelineModule,\r\n  NzToolTipModule,\r\n  NzTransButtonModule,\r\n  NzTransferModule,\r\n  NzTreeModule,\r\n  NzTreeSelectModule,\r\n  NzTypographyModule,\r\n  NzUploadModule,\r\n  NzWaveModule,\r\n  NzResizableModule,\r\n  NzSpaceModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [antModule],\r\n  providers: [\r\n    { provide: NZ_I18N, useValue: vi_VN },\r\n    { provide: NZ_ICONS, useValue: icons },\r\n    { provide: NZ_DATE_LOCALE, useValue: viDate }\r\n  ]\r\n})\r\nexport class AntDesignModule {\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OfCheckBoxModel } from './of-check-box.model';\r\n\r\n@Component({\r\n  selector: 'of-check-box',\r\n  template: `\r\n      <form [formGroup]=\"group\">\r\n          <label nz-checkbox [formControlName]=\"field.dataField\">{{ field.checkBoxLabel }}</label>\r\n      </form>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OfCheckBoxComponent implements OnInit {\r\n  field: OfCheckBoxModel;\r\n  group: FormGroup;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DestroyRxjsService } from '../services/destroy-rxjs.service';\r\nimport { OfControlModel, OfSchemaModel } from '../models';\r\nimport { OfFieldComponent } from '../components/of-template-ref/of-field.component';\r\nimport { OfComponentRefModel } from '../components/of-component-ref/of-component-ref.model';\r\nimport { debounceTime, takeUntil } from 'rxjs/operators';\r\nimport { AppUtilityService } from '../services/app-utility-service';\r\n\r\n@Directive({\r\n  selector: '[ofDynamicField]',\r\n  providers: [DestroyRxjsService]\r\n})\r\nexport class DynamicFieldDirective implements OnInit {\r\n  @Input() schemaModel: OfSchemaModel;\r\n  @Input() field: OfControlModel;\r\n  @Input() group: FormGroup;\r\n  @Input() ofFieldTempates: OfFieldComponent[] = [];\r\n  @Output() searchEvent = new EventEmitter<any>();\r\n  private componentRef: any;\r\n  private component: any;\r\n\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private container: ViewContainerRef,\r\n    private destroy$: DestroyRxjsService\r\n  ) {\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await this.mapComponent();\r\n    if (this.component) {\r\n      const factory = this.resolver.resolveComponentFactory(this.component);\r\n      this.componentRef = this.container.createComponent(factory);\r\n      this.componentRef.instance.field = this.field;\r\n      this.componentRef.instance.group = this.group;\r\n      this.componentRef.instance.schemaModel = this.schemaModel;\r\n      if (this.field.type === 'templateRef') {\r\n        this.componentRef.instance.ofFieldTempates = this.ofFieldTempates;\r\n      }\r\n      if (this.schemaModel.isSearchBox && this.field.type === 'text') {\r\n        this.componentRef.instance.searchEvent.pipe(takeUntil(this.destroy$)).subscribe(d => {\r\n          this.searchEvent.emit(d);\r\n        });\r\n      }\r\n\r\n    }\r\n    this.init$();\r\n  }\r\n\r\n  async mapComponent() {\r\n    const type = this.field.type;\r\n    switch (type) {\r\n      case 'checkBox':\r\n        const { OfCheckBoxComponent } = await import('../components/of-check-box/of-check-box.component');\r\n        this.component = OfCheckBoxComponent;\r\n        break;\r\n      case 'textArea':\r\n        const { OfTextAreaComponent } = await import('../components/of-text-area/of-text-area.component');\r\n        this.component = OfTextAreaComponent;\r\n        break;\r\n      case 'text':\r\n        const { OfTextComponent } = await import('../components/of-text/of-text.component');\r\n        this.component = OfTextComponent;\r\n        break;\r\n      case 'select':\r\n        const { OfSelectComponent } = await import('../components/of-select/of-select.component');\r\n        this.component = OfSelectComponent;\r\n        break;\r\n      case 'selectAsync':\r\n        const { OfSelectAsyncComponent } = await import('../components/of-select-async/of-select-async.component');\r\n        this.component = OfSelectAsyncComponent;\r\n        break;\r\n      case 'selectApi':\r\n        const { OfSelectApiComponent } = await import('../components/of-select-api/of-select-api.component');\r\n        this.component = OfSelectApiComponent;\r\n        break;\r\n      case 'selectApiCascade':\r\n        const { OfSelectCascadeComponent } = await import('../components/of-select-cascade/of-select-cascade.component');\r\n        this.component = OfSelectCascadeComponent;\r\n        break;\r\n      case 'selectSearchServer':\r\n        const { OfSelectSearchServerComponent } = await import('../components/of-select-search-server/of-select-search-server.component');\r\n        this.component = OfSelectSearchServerComponent;\r\n        break;\r\n      case 'currencyInput':\r\n        const { OfCurrencyComponent } = await import('../components/of-currency/of-currency.component');\r\n        this.component = OfCurrencyComponent;\r\n        break;\r\n      case 'datePicker':\r\n        const { OfDatePickerComponent } = await import('../components/of-date-picker/of-date-picker.component');\r\n        this.component = OfDatePickerComponent;\r\n        break;\r\n      case 'contentHtml':\r\n        const { OfContentHtmlComponent } = await import('../components/of-content-html/of-content-html.component');\r\n        this.component = OfContentHtmlComponent;\r\n        break;\r\n      case 'numberInput':\r\n        const { OfNumberInputComponent } = await import('../components/of-number-input/of-number-input.component');\r\n        this.component = OfNumberInputComponent;\r\n        break;\r\n      case 'passWordInput':\r\n        const { OfPasswordComponent } = await import('../components/of-password/of-password.component');\r\n        this.component = OfPasswordComponent;\r\n        break;\r\n      case 'radio':\r\n        const { OfRadioComponent } = await import('../components/of-radio/of-radio.component');\r\n        this.component = OfRadioComponent;\r\n        break;\r\n      case 'switch':\r\n        const { OfSwitchComponent } = await import('../components/of-switch/of-switch.component');\r\n        this.component = OfSwitchComponent;\r\n        break;\r\n      case 'componentRef':\r\n        const field = this.field as OfComponentRefModel<any>;\r\n        this.component = field.componentRef;\r\n        break;\r\n      case 'templateRef':\r\n        const { OfTemplateRefComponent } = await import('../components/of-template-ref/of-template-ref.component');\r\n        this.component = OfTemplateRefComponent;\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  get f() {\r\n    return this.group.get(this.field.dataField) || null;\r\n  }\r\n\r\n  private init$() {\r\n    if (this.field.hiddenAsync) {\r\n      this.field.hiddenAsync.pipe(takeUntil(this.destroy$))\r\n        .pipe(debounceTime(300))\r\n        .subscribe(d => {\r\n          this.field.hidden = d;\r\n        });\r\n    }\r\n    if (this.field.disabledAsync) {\r\n      this.field.disabledAsync.pipe(takeUntil(this.destroy$))\r\n        .subscribe(d => {\r\n          this.field.disabled = d;\r\n          if (this.f) {\r\n            if (d) {\r\n              this.f.disable({ onlySelf: true });\r\n            } else {\r\n              this.f.enable({ onlySelf: true });\r\n            }\r\n          }\r\n          this.disableExtendControl(d);\r\n        });\r\n    }\r\n  }\r\n\r\n  private disableExtendControl(d) {\r\n    if (!AppUtilityService.isNotAnyItem(this.field.controls)) {\r\n      this.field.controls.forEach(ctrl => {\r\n        ctrl.disabled = d;\r\n        const fControl = this.group.get(ctrl.dataField);\r\n        if (fControl) {\r\n          if (d) {\r\n            fControl.disable({ onlySelf: true });\r\n          } else {\r\n            fControl.enable({ onlySelf: true });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DestroyRxjsService } from '../../services/destroy-rxjs.service';\r\nimport { OfSchemaModel } from '../../models';\r\nimport { OfTextModel } from './of-text.model';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'of-text',\r\n  template: `\r\n      <nz-spin [nzSpinning]=\"nzSpinning\">\r\n          <form [formGroup]=\"group\" (keyup.enter)=\"onKeyEnterControl()\">\r\n              <input [formControlName]=\"field.dataField\" nz-input [disabled]=\"true\" [placeholder]=\"field.placeholder\"\r\n                     maxlength=\"{{ field?.maxLength }}\"/>\r\n          </form>\r\n      </nz-spin>\r\n\r\n  `,\r\n  providers: [DestroyRxjsService]\r\n})\r\nexport class OfTextComponent implements OnInit {\r\n  @Output() searchEvent = new EventEmitter<any>();\r\n  schemaModel: OfSchemaModel;\r\n  field: OfTextModel;\r\n  group: FormGroup;\r\n  keyEnter$ = new Subject();\r\n  nzSpinning = false;\r\n\r\n  constructor(private destroy$: DestroyRxjsService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.keyEnter$.pipe(takeUntil(this.destroy$), debounceTime(500), distinctUntilChanged())\r\n      .subscribe(d => {\r\n        if (this.schemaModel.isSearchBox) {\r\n          this.schemaModel.searchBtnBusy = true;\r\n          this.schemaModel.searchEvent$.next(d);\r\n          this.searchEvent.emit(d);\r\n          this.nzSpinning = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  onKeyEnterControl() {\r\n    if (this.schemaModel.isSearchBox) {\r\n      this.nzSpinning = true;\r\n      this.keyEnter$.next(this.group.getRawValue());\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OfCurrencyModel } from './of-currency.model';\r\n\r\n@Component({\r\n  selector: 'of-currency',\r\n  template: `\r\n      <form [formGroup]=\"group\">\r\n          <input\r\n                  currencyMask\r\n                  nz-input\r\n                  [formControlName]=\"field.dataField\"\r\n                  class=\"ord-dynamic-input\"\r\n                  [disabled]=\"field.disabled\"\r\n                  [placeholder]=\"field.placeholder\"\r\n                  [options]=\"field\"\r\n          />\r\n      </form>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [`\r\n      input::placeholder {\r\n          text-align: left;\r\n      }\r\n  `]\r\n})\r\nexport class OfCurrencyComponent implements OnInit {\r\n  field: OfCurrencyModel;\r\n  group: FormGroup;\r\n  options: any = {};\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.options = {\r\n      prefix: this.field.prefix,\r\n      suffix: this.field.suffix,\r\n      thousands: '.',\r\n      decimal: ',',\r\n      precision: this.field.precision\r\n    };\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Provider,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { BehaviorSubject, fromEvent, Subject } from 'rxjs';\r\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged, map, takeUntil, tap } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\r\nimport { AppUtilityService } from '../../services/app-utility-service';\r\n\r\nconst VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => OfDataPickerControlComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'of-date-picker-ctrl',\r\n  template: `\r\n      <div class=\"main-ora-date\" (mouseenter)=\"mouseEnterMain()\" (mouseleave)=\"mouseLeaveMain()\">\r\n          <nz-date-picker class=\"ora-date\" #refDate style=\"width:100%\" [nzPlaceHolder]=\"placeHolder\"\r\n                          [nzDisabled]=\"disabled\"\r\n                          [nzDisabledDate]=\"disabledDate\"\r\n                          tabindex=\"-1\"\r\n                          [formControl]=\"control\"\r\n                          nzFormat=\"dd/MM/yyyy\"></nz-date-picker>\r\n          <input #refInput class=\"ora-input-date\" nz-input (focusout)=\"onFocusOutInputMask()\"\r\n                 [placeholder]=\"placeHolder\"\r\n                 [formControl]=\"inputValue\"\r\n                 [textMask]=\"{mask: mask}\"/>\r\n          <i class=\"ora-calendar\" (click)=\"onClickIcon()\" nz-icon\r\n             [nzType]=\"nzIcon$ | async\"\r\n             nzTheme=\"outline\"></i>\r\n      </div>\r\n  `,\r\n  styles: [`.main-ora-date {\r\n      position: relative;\r\n  }\r\n\r\n  .ora-date {\r\n      border: 0;\r\n  }\r\n\r\n  .ora-input-date {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0\r\n  }\r\n\r\n  .ora-close {\r\n      position: absolute;\r\n      top: 7px;\r\n      right: 5px;\r\n  }\r\n\r\n  .ora-calendar {\r\n      position: absolute;\r\n      top: 7px;\r\n      right: 5px;\r\n  }`],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [VALUE_ACCESSOR]\r\n})\r\nexport class OfDataPickerControlComponent implements OnInit, ControlValueAccessor, AfterViewInit, OnDestroy {\r\n  @ViewChild('refDate') refDate: NzDatePickerComponent;\r\n  @ViewChild('refInput') refInput: ElementRef;\r\n  @Input() disabledDate?: (d: Date) => boolean;\r\n  @Input() placeHolder = 'Ngày/Tháng/Năm';\r\n  mask = [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\r\n  $destroy: Subject<boolean> = new Subject<boolean>();\r\n  isWriteValue = false;\r\n  mouseEvent$ = new Subject<string>();\r\n  nzIcon = 'calendar';\r\n  nzIcon$ = new BehaviorSubject<string>('calendar');\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  isShowIconCalendar = true;\r\n\r\n  get value() {\r\n    return this.control.value;\r\n  }\r\n\r\n  set value(v: any) {\r\n    this.control.setValue(v);\r\n  }\r\n\r\n  isDisabled = false;\r\n\r\n  @Input()\r\n  get disabled() {\r\n    return this.isDisabled;\r\n  }\r\n\r\n  set disabled(v: boolean) {\r\n    this.isDisabled = v;\r\n    if (v === true) {\r\n      this.inputValue.disable();\r\n    } else {\r\n      this.inputValue.enable();\r\n    }\r\n  }\r\n\r\n  @Input() control = new FormControl({ value: null, disabled: true });\r\n  inputValue: FormControl = new FormControl({ value: '', disabled: false });\r\n\r\n\r\n  private onChange(v: any) {\r\n  }\r\n\r\n  private onTouched() {\r\n  }\r\n\r\n  onChangeValue(event: any): void {\r\n    this.onChange(event);\r\n  }\r\n\r\n  onFocus(event: any): void {\r\n    this.onTouched();\r\n  }\r\n\r\n  mouseLeaveMain() {\r\n    this.mouseEvent$.next('mouseLeave');\r\n  }\r\n\r\n  mouseEnterMain() {\r\n    this.mouseEvent$.next('mouseEnter');\r\n  }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    fromEvent<any>(this.refInput.nativeElement, 'click')\r\n      .pipe(\r\n        debounceTime(222),\r\n        takeUntil(this.$destroy)\r\n      ).subscribe(() => {\r\n      this.refDate.picker.showOverlay();\r\n      setTimeout(() => { // this will make the execution after the above boolean has changed\r\n        this.refInput.nativeElement.focus();\r\n      });\r\n    });\r\n    this.refDate.nzOnOpenChange\r\n      .pipe(\r\n        takeUntil(this.$destroy)\r\n      )\r\n      .subscribe(o => {\r\n        if (!o) {\r\n          setTimeout(() => { // this will make the execution after the above boolean has changed\r\n            this.refInput.nativeElement.focus();\r\n          });\r\n        }\r\n      });\r\n    this.mouseEvent$.pipe(takeUntil(this.$destroy))\r\n      .pipe(debounceTime(222))\r\n      .pipe(map(d => {\r\n        if (d === 'mouseLeave') {\r\n          return 'calendar';\r\n        }\r\n        if (this.disabled) {\r\n          return 'calendar';\r\n        }\r\n        if (AppUtilityService.isNullOrEmpty(this.control.value)) {\r\n          return 'calendar';\r\n        }\r\n        return 'close-circle';\r\n      })).pipe(tap((icon) => {\r\n      this.nzIcon$.next(icon);\r\n      this.nzIcon = icon;\r\n    })).subscribe();\r\n    this.nzIcon$.next('calendar');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.$destroy.next(true);\r\n    this.$destroy.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.control.valueChanges.pipe(takeUntil(this.$destroy), distinctUntilChanged()).subscribe((result: Date) => {\r\n      if (this.isWriteValue) {\r\n        if (result) {\r\n          const valueText = moment(result).format('DD/MM/YYYY');\r\n          this.inputValue.setValue(valueText);\r\n        }\r\n\r\n        this.onChangeValue(result);\r\n      }\r\n\r\n    });\r\n    this.inputValue.valueChanges.pipe(takeUntil(this.$destroy), distinctUntilChanged(), debounceTime(100)).subscribe(result => {\r\n      try {\r\n        const arrStr = result.split('/');\r\n        if (!isNaN(arrStr[0]) && !isNaN(arrStr[1]) && !isNaN(arrStr[2])) {\r\n          const date = moment(result, 'DD/MM/YYYY');\r\n          if (date.isValid()) {\r\n            if (typeof this.disabledDate === 'function') {\r\n              if (this.disabledDate(date.toDate())) {\r\n                this.inputValue.setValue(null);\r\n              } else {\r\n                this.control.setValue(date.toDate());\r\n                this.refDate.picker.hideOverlay();\r\n              }\r\n            } else {\r\n              this.control.setValue(date.toDate());\r\n              this.refDate.picker.hideOverlay();\r\n            }\r\n          } else {\r\n            this.control.setValue(null);\r\n          }\r\n\r\n        } else {\r\n          this.control.setValue(null);\r\n        }\r\n\r\n      } catch (e) {\r\n        this.control.setValue(null);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  //#region base ControlValueAccessor\r\n  writeValue(obj: any): void {\r\n    if (obj) {\r\n      const valueText = moment(obj).format('DD/MM/YYYY');\r\n      this.inputValue.setValue(valueText);\r\n      this.value = moment(obj).toDate();\r\n    } else {\r\n      this.inputValue.setValue('');\r\n      this.value = null;\r\n    }\r\n    this.isWriteValue = true;\r\n\r\n  }\r\n\r\n  registerOnChange(fn: () => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.isDisabled = isDisabled;\r\n  }\r\n\r\n  //#endregion\r\n\r\n  onFocusOutInputMask() {\r\n    if (AppUtilityService.isNullOrEmpty(this.control.value)) {\r\n      this.inputValue.setValue(null);\r\n    }\r\n  }\r\n\r\n  onClickIcon() {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    if (this.nzIcon === 'calendar') {\r\n      this.refDate.picker.showOverlay();\r\n      return;\r\n    }\r\n    this.nzIcon$.next('calendar');\r\n    this.inputValue.setValue(null);\r\n    this.control.setValue(null);\r\n  }\r\n}\r\n","import {\r\n  AfterContentChecked,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { FormGroup } from '@angular/forms';\r\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\r\nimport * as moment from 'moment';\r\nimport { DestroyRxjsService } from '../../services/destroy-rxjs.service';\r\nimport { OfSchemaModel } from '../../models';\r\nimport { OfDateModel } from './of-date.model';\r\nimport { OfDataPickerControlComponent } from './of-data-picker-control.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { AppUtilityService } from '../../services/app-utility-service';\r\n\r\n@Component({\r\n  selector: 'of-date-picker',\r\n  template: `\r\n      <form [formGroup]=\"group\">\r\n          <of-date-picker-ctrl #vcDatePicker [formControlName]=\"field.dataField\"\r\n                               [disabled]=\"field.disabled\"\r\n                               [disabledDate]=\"disabledDate\"></of-date-picker-ctrl>\r\n      </form>\r\n  `,\r\n  providers: [DestroyRxjsService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OfDatePickerComponent implements OnInit, AfterContentChecked {\r\n  schemaModel: OfSchemaModel;\r\n  field: OfDateModel;\r\n  group: FormGroup;\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  @ViewChild('vcDatePicker') vcDatePicker: OfDataPickerControlComponent;\r\n\r\n  constructor(private destroy$: DestroyRxjsService,\r\n              public cdr: ChangeDetectorRef) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.minDate = this.field.minDate;\r\n    this.maxDate = this.field.maxDate;\r\n    if (this.field.minDateAsync) {\r\n      this.field.minDateAsync.pipe(takeUntil(this.destroy$))\r\n        .subscribe(min => {\r\n          this.setMinDate(min);\r\n        });\r\n    }\r\n    if (this.field.maxDateAsync) {\r\n      this.field.maxDateAsync.pipe(takeUntil(this.destroy$)).subscribe(max => {\r\n        this.setMaxDate(max);\r\n      });\r\n    }\r\n    this.schemaModel.subRender(this.cdr, this.destroy$);\r\n  }\r\n\r\n  setMinDate(min: Date | moment.Moment) {\r\n    const d = this.convertDate(min);\r\n    if (AppUtilityService.isNullOrEmpty(this.field.minDate)) {\r\n      this.minDate = d;\r\n    } else if (AppUtilityService.isNotNull(d) && differenceInCalendarDays(d, this.field.minDate) > 0) {\r\n      this.minDate = d;\r\n    } else {\r\n      this.minDate = this.field.minDate;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  setMaxDate(max: Date | moment.Moment) {\r\n    const d = this.convertDate(max);\r\n    if (AppUtilityService.isNullOrEmpty(this.field.maxDate)) {\r\n      this.maxDate = d;\r\n    } else if (AppUtilityService.isNotNull(d) && differenceInCalendarDays(d, this.field.maxDate) < 0) {\r\n      this.maxDate = d;\r\n    } else {\r\n      this.maxDate = this.field.maxDate;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  convertDate(date: Date | moment.Moment) {\r\n    if (moment.isMoment(date)) {\r\n      return date.toDate();\r\n    } else {\r\n      return date;\r\n    }\r\n  }\r\n\r\n  get f() {\r\n    return this.group.get(this.field.dataField);\r\n  }\r\n\r\n  disabledDate = (current: Date): boolean => {\r\n    if (this.field?.dateNotGreaterThanCurrent && !this.maxDate) {\r\n      this.maxDate = new Date();\r\n    }\r\n    let check = false;\r\n    if (this.minDate) {\r\n      check = check || differenceInCalendarDays(current, this.minDate) < 0;\r\n    }\r\n    if (this.maxDate) {\r\n      check = check || differenceInCalendarDays(current, this.maxDate) > 0;\r\n    }\r\n    return check;\r\n  };\r\n\r\n\r\n  handlerTuNgayChange() {\r\n    if (AppUtilityService.isNotNull(this.field.tuNgayDataField) && this.group.get(this.field.tuNgayDataField)) {\r\n      this.group.get(this.field.tuNgayDataField).valueChanges\r\n        .pipe(takeUntil(this.destroy$)).subscribe(min => {\r\n        this.setMinDate(min);\r\n      });\r\n    }\r\n  }\r\n\r\n  handlerDenNgayChange() {\r\n    if (AppUtilityService.isNotNull(this.field.denNgayDataField) && this.group.get(this.field.denNgayDataField)) {\r\n      this.group.get(this.field.denNgayDataField).valueChanges\r\n        .pipe(takeUntil(this.destroy$)).subscribe(max => {\r\n        this.setMaxDate(max);\r\n      });\r\n    }\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.handlerDenNgayChange();\r\n    this.handlerTuNgayChange();\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'input[numbersOnlyInput]'\r\n})\r\nexport class NumbersOnlyDirective {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  constructor(private _el: ElementRef) {\r\n  }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if (initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OfNumberModel } from './of-number.model';\r\n\r\n@Component({\r\n  selector: 'of-number-input',\r\n  template: `\r\n      <form [formGroup]=\"group\">\r\n          <input nz-input *ngIf=\"field.onlyKeyNumber;else tplNumberInput\"\r\n                 numbersOnlyInput [formControlName]=\"field.dataField\"\r\n                 [placeholder]=\"field.placeholder\"\r\n                 maxlength=\"{{ field.maxlength }}\"\r\n          />\r\n          <ng-template #tplNumberInput>\r\n              <nz-input-number [formControlName]=\"field.dataField\"\r\n                               [nzPlaceHolder]=\"field.placeholder\"\r\n                               style=\"width: 100%\"\r\n                               [nzMin]=\"field.min\"\r\n                               [nzMax]=\"field.max\"\r\n                               [nzStep]=\"field.step\">\r\n              </nz-input-number>\r\n          </ng-template>\r\n      </form>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OfNumberInputComponent implements OnInit {\r\n  field: OfNumberModel;\r\n  group: FormGroup;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OfSchemaModel } from '../../models';\r\nimport { OfTextAreaModel } from './of-text-area.model';\r\n\r\n@Component({\r\n  selector: 'of-text-area',\r\n  template: `\r\n      <form [formGroup]=\"group\">\r\n          <textarea nz-input\r\n                    [formControlName]=\"field.dataField\"\r\n                    [placeholder]=\"field.placeholder\"\r\n                    [rows]=\"field.rows\"\r\n                    maxlength=\"{{field.maxLength}}\"></textarea>\r\n      </form>\r\n  `\r\n})\r\nexport class OfTextAreaComponent {\r\n  schemaModel: OfSchemaModel;\r\n  field: OfTextAreaModel;\r\n  group: FormGroup;\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { OfContentHtmlModel } from './of-content-html.model';\r\n\r\n\r\n@Component({\r\n  selector: 'of-content-html',\r\n  template: `\r\n      <div [innerHTML]=\"field.content\"></div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OfContentHtmlComponent implements OnInit {\r\n  field: OfContentHtmlModel;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OfSchemaModel } from '../../models';\r\nimport { OfPwdModel } from './of-pwd.model';\r\n\r\n@Component({\r\n  selector: 'of-password',\r\n  template: `\r\n      <form [formGroup]=\"group\">\r\n          <nz-input-group nzPrefixIcon=\"lock\" [nzSuffix]=\"suffixTemplate\">\r\n              <input [type]=\"passwordVisible ? 'text' : 'password'\" nz-input placeholder=\"{{field.placeholder}}\"\r\n                     [formControlName]=\"field.dataField\"/>\r\n          </nz-input-group>\r\n          <ng-template #suffixTemplate>\r\n              <i nz-icon [nzType]=\"passwordVisible ? 'eye-invisible' : 'eye'\"\r\n                 (click)=\"passwordVisible = !passwordVisible\"></i>\r\n          </ng-template>\r\n      </form>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OfPasswordComponent implements OnInit {\r\n  schemaModel: OfSchemaModel;\r\n  field: OfPwdModel;\r\n  group: FormGroup;\r\n\r\n  passwordVisible = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.field.placeholder = this.field.placeholder || 'Nhập mật khẩu';\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OfSchemaModel } from '../../models';\r\nimport { OfRadioModel } from './of-radio.model';\r\n\r\n@Component({\r\n  selector: 'of-radio',\r\n  template: `\r\n      <form [formGroup]=\"group\">\r\n          <nz-radio-group [formControlName]=\"field.dataField\"\r\n                          [nzDisabled]=\"field.disabled\"\r\n                          style=\"width: 100%\">\r\n              <label *ngFor=\"let op of field.items\" nz-radio [nzValue]=\"op.value\">{{ op.label }}</label>\r\n          </nz-radio-group>\r\n      </form>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OfRadioComponent implements OnInit {\r\n  schemaModel: OfSchemaModel;\r\n  field: OfRadioModel;\r\n  group: FormGroup;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OfSwitchModel } from './of-switch.model';\r\n\r\n@Component({\r\n  selector: 'of-switch',\r\n  template: `\r\n      <form [formGroup]=\"group\">\r\n          <nz-switch [formControlName]=\"field.dataField\"\r\n                     [nzCheckedChildren]=\"field.yesText ? field.yesText : checkedTemplate\"\r\n                     [nzUnCheckedChildren]=\"field.noText ? field.noText : unCheckedTemplate\"\r\n                     [nzDisabled]=\"field.disabled\"\r\n          >\r\n              <ng-template #checkedTemplate><i nz-icon nzType=\"check\"></i></ng-template>\r\n              <ng-template #unCheckedTemplate><i nz-icon nzType=\"close\"></i></ng-template>\r\n          </nz-switch>\r\n      </form>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OfSwitchComponent implements OnInit {\r\n  field: OfSwitchModel;\r\n  group: FormGroup;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { OfSelectBaseModel } from '../models/of-select-base.model';\r\nimport { IOfSelectOptionDto } from '../models';\r\n\r\n@Pipe({\r\n  name: 'ofSelectRenderOption'\r\n})\r\nexport class OfSelectRenderOptionPipe implements PipeTransform {\r\n\r\n  transform(displayText: string, field: OfSelectBaseModel, option: IOfSelectOptionDto): string {\r\n    return typeof (field.renderOptionFunc) === 'function' ? field?.renderOptionFunc(option) : displayText;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { OfSelectBaseModel } from '../models/of-select-base.model';\r\nimport { AppUtilityService } from '../services/app-utility-service';\r\n\r\n@Pipe({\r\n  name: 'ofOptionSelected',\r\n  pure: false\r\n})\r\nexport class OfOptionSelectedPipe implements PipeTransform {\r\n\r\n  transform(value: any, label: string, field: OfSelectBaseModel): string {\r\n    if (AppUtilityService.isNotNull(value)) {\r\n      if (typeof field.renderSelectedFunc === 'function') {\r\n        if (field?.itemSelected) {\r\n          return field.renderSelectedFunc(field?.itemSelected);\r\n        }\r\n        return '';\r\n      } else {\r\n        return label;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"group\">\r\n  <nz-select [formControlName]=\"field.dataField\" style=\" width: 100%;\"\r\n             (nzOpenChange)=\"nzOpenChange($event)\"\r\n             (nzScrollToBottom)=\"loadMore()\"\r\n             [nzCustomTemplate]=\"tplSelectedView\"\r\n             [nzOptionHeightPx]=\"26\"\r\n             [nzPlaceHolder]=\"field.placeholder\"\r\n             [nzMode]=\"field.nzMode\" [nzAllowClear]=\"field.nzAllowClear\"\r\n             nzShowSearch nzServerSearch (nzOnSearch)=\"search($event)\"\r\n             [nzMaxMultipleCount]=\"field?.nzMaxMultipleCount\" [nzMaxTagCount]=\"field?.nzMaxTagCount\"\r\n             [nzDropdownRender]=\"renderTemplate\">\r\n    <nz-option [nzCustomContent]=\"true\" *ngFor=\"let option of optionDebound$ | async;trackBy:trackBySelect\"\r\n               [nzLabel]=\"option.displayText\"\r\n               [nzValue]=\"option.value\"\r\n    >\r\n      <span [innerHTML]=\"option.displayText | ofSelectRenderOption: field: option\">\r\n      </span>\r\n    </nz-option>\r\n  </nz-select>\r\n</form>\r\n<ng-template #tplSelectedView let-selected>\r\n  <span [innerHTML]=\"selected.nzValue | ofOptionSelected:selected.nzLabel:field\"></span>\r\n</ng-template>\r\n<ng-template #renderTemplate>\r\n\r\n  <div class=\"select-pagination\" *ngIf=\"field.showPagination\">\r\n    <nz-pagination nzSize=\"small\" [nzPageSize]=\"maxResultCount\" [(nzPageIndex)]=\"nzPageIndex\"\r\n                   (nzPageIndexChange)=\"nzPageIndexChange()\"\r\n                   [nzTotal]=\"totalItems\"></nz-pagination>\r\n  </div>\r\n  <nz-spin *ngIf=\"isLoading\"></nz-spin>\r\n</ng-template>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnInit,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { FormGroup } from '@angular/forms';\r\nimport * as _ from 'lodash';\r\nimport { DestroyRxjsService } from '../../services/destroy-rxjs.service';\r\nimport { IOfSelectOptionDto, OfSchemaModel } from '../../models';\r\nimport { ISelectSearchServerDto, OfSelectSearchServerModel } from './of-select-search-server.model';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { debounceTime, filter, finalize, takeUntil, tap } from 'rxjs/operators';\r\nimport { AppUtilityService } from '../../services/app-utility-service';\r\n\r\n@Component({\r\n  selector: 'of-select-search-server',\r\n  templateUrl: './of-select-search-server.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [DestroyRxjsService],\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./of-select-search-server.component.scss']\r\n})\r\nexport class OfSelectSearchServerComponent implements OnInit, AfterViewInit {\r\n  schemaModel: OfSchemaModel;\r\n  field: OfSelectSearchServerModel;\r\n  group: FormGroup;\r\n  options: IOfSelectOptionDto[] = [];\r\n  option$ = new BehaviorSubject<IOfSelectOptionDto[]>([]);\r\n  backUpItems: IOfSelectOptionDto[] = [];\r\n  optionDebound$ = this.option$.pipe(debounceTime(222)).pipe(tap(() => {\r\n    this.triggerDetectChanges();\r\n  }));\r\n  txtSearch = '';\r\n  txtSearch$ = new Subject<string>();\r\n  skipCount = 0;\r\n  totalItems = 0;\r\n  nzPageIndex = 1;\r\n  firstOptions: IOfSelectOptionDto[] = [];\r\n  firstTotal = 0;\r\n  isLoading = false;\r\n  maxResultCount = 12;\r\n\r\n  constructor(private destroy$: DestroyRxjsService,\r\n              private cdr: ChangeDetectorRef) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.handlerSearch();\r\n  }\r\n\r\n  handlerSearch() {\r\n    this.txtSearch$.pipe(takeUntil(this.destroy$))\r\n      .pipe(debounceTime(1000))\r\n      .subscribe(txt => {\r\n        this.txtSearch = txt;\r\n        if (AppUtilityService.isNullOrEmpty(txt)) {\r\n          this.loadFirstOption();\r\n        } else {\r\n          this.skipCount = 0;\r\n          this.nzPageIndex = 1;\r\n          this.getOptionsFromBE(txt);\r\n        }\r\n      });\r\n  }\r\n\r\n  search(txt: string) {\r\n    this.txtSearch$.next(txt);\r\n  }\r\n\r\n  nzOpenChange(open: boolean) {\r\n    if (open) {\r\n      this.loadFirstOption();\r\n    }\r\n  }\r\n\r\n  trackBySelect(index: number, item: IOfSelectOptionDto) {\r\n    return item.value;\r\n  }\r\n\r\n  loadFirstOption() {\r\n    if (this.firstTotal > 0) {\r\n      this.totalItems = this.firstTotal;\r\n      this.nzPageIndex = 1;\r\n      let opt = this.firstOptions;\r\n      if (this.field?.itemSelected) {\r\n        // tslint:disable-next-line:triple-equals\r\n        const f = opt.find(s => s.value == this.field.itemSelected.value);\r\n        if (AppUtilityService.isNullOrEmpty(f)) {\r\n          opt = [this.field.itemSelected, ...this.firstOptions];\r\n        }\r\n      }\r\n      this.setOptions(opt);\r\n    } else {\r\n      this.getOptionsFromBE('', null, true);\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:no-shadowed-variable\r\n  getOptionsFromBE(filter?: string, value?: string | null, isFirst = false) {\r\n    const getOneId = AppUtilityService.isNotNull(value);\r\n    if (getOneId) {\r\n      filter = '';\r\n      // tslint:disable-next-line:triple-equals\r\n      const f = _.find(this.backUpItems, s => s.value == value);\r\n      if (f) {\r\n        this.setOptions([f]);\r\n        return;\r\n      }\r\n    }\r\n    this.isLoading = true;\r\n    let skipCount = this.skipCount;\r\n    const maxResultCount = (!this.field.showPagination && isFirst) ? 50 : this.maxResultCount;\r\n    if (this.field.showPagination) {\r\n      skipCount = (this.nzPageIndex - 1) * this.maxResultCount;\r\n    }\r\n    const reqBody: ISelectSearchServerDto = {\r\n      filter,\r\n      value,\r\n      maxResultCount,\r\n      skipCount\r\n    };\r\n    this.field.functionService(reqBody)\r\n      .pipe(finalize(() => {\r\n        this.isLoading = false;\r\n      }))\r\n      .subscribe(d => {\r\n        let options = d?.items || [];\r\n        this.backUpItems = [...this.backUpItems, ...options];\r\n        if (isFirst) {\r\n          this.firstOptions = options;\r\n          this.firstTotal = d.totalCount;\r\n        }\r\n        if (getOneId) {\r\n          this.field.itemSelected = d?.items[0] || null;\r\n        }\r\n        if (AppUtilityService.isNullOrEmpty(value)) {\r\n          this.totalItems = d?.totalCount || 0;\r\n        }\r\n        if (skipCount > 0 && !this.field.showPagination) {\r\n          options = [...this.options, ...options];\r\n        }\r\n        this.setOptions(options);\r\n        this.skipCount = reqBody.skipCount + reqBody.maxResultCount;\r\n      });\r\n  }\r\n\r\n  setOptions(options) {\r\n    this.options = options;\r\n    this.option$.next(options);\r\n    this.triggerDetectChanges();\r\n  }\r\n\r\n  getItemSelected() {\r\n    const value$ = this.group.get(this.field.dataField).valueChanges.pipe(takeUntil(this.destroy$))\r\n      .pipe(tap((v) => {\r\n        if (AppUtilityService.isNullOrEmpty(v)) {\r\n          this.field.itemSelected = null;\r\n        }\r\n        this.triggerDetectChanges();\r\n      })).pipe(filter(s => !AppUtilityService.isNullOrEmpty(s)));\r\n    value$.subscribe(value => {\r\n      // tslint:disable-next-line:triple-equals\r\n      const f = this.backUpItems?.find(s => s.value == value);\r\n      if (AppUtilityService.isNotNull(f)) {\r\n        this.field.itemSelected = f;\r\n        this.setOptions([f]);\r\n        return;\r\n      } else {\r\n        this.getOptionsFromBE(null, value);\r\n      }\r\n      this.triggerDetectChanges();\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.group.get(this.field.dataField);\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.getItemSelected();\r\n    this.triggerDetectChanges();\r\n    this.schemaModel.subRender(this.cdr, this.destroy$);\r\n  }\r\n\r\n  triggerDetectChanges() {\r\n    setTimeout(() => {\r\n      this.cdr.detectChanges();\r\n    }, 200);\r\n  }\r\n\r\n  loadMore() {\r\n    if (this.field.showPagination) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.skipCount > this.totalItems) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n    this.getOptionsFromBE(this.txtSearch, null);\r\n  }\r\n\r\n  nzPageIndexChange() {\r\n    this.getOptionsFromBE(this.txtSearch);\r\n  }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OfFieldComponent } from './of-field.component';\nimport { OfTemplateRefModel } from './of-template-ref.model';\nimport { OfCreateControlFormService } from '../../services/of-create-control-form-service';\n\n@Component({\n  selector: 'of-template-ref',\n  template: `\n      <ng-container [ngTemplateOutlet]=\"templateRef\"\n                    [ngTemplateOutletContext]=\"{ $implicit: { value: id }, group: group,field: field }\"></ng-container>\n      <span *ngIf=\"!templateRef\" class=\"text-danger\">Chưa có tempate</span>\n  `\n})\nexport class OfTemplateRefComponent implements OnInit {\n  ofFieldTempates: OfFieldComponent[] = [];\n  field: OfTemplateRefModel;\n  group: FormGroup;\n  id = Number(new Date());\n  templateRef: TemplateRef<any>;\n\n  constructor(private formService: OfCreateControlFormService) {\n\n  }\n\n\n  ngOnInit(): void {\n    this.formService.createExtendControl(this.group, this.field.controls);\n    this.templateRef = this.ofFieldTempates.find(x => x.id === this.field.dataField)?.controlTemplate;\n\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { OrdValidator } from '../models';\r\n\r\n@Pipe({\r\n  name: 'showValidationError'\r\n})\r\nexport class ShowValidationErrorPipe implements PipeTransform {\r\n\r\n  transform(errors: any, validations: OrdValidator[], submitted: boolean): string {\r\n    if (!submitted) {\r\n      return '';\r\n    }\r\n    let err = '';\r\n    if (errors && validations?.length > 0) {\r\n      _.forEach(validations, valid => {\r\n        if (errors[valid.name]) {\r\n          err = valid.message;\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n    return err;\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"group\">\n  <nz-select [formControlName]=\"field.dataField\" style=\"width: 100%\"\n             [nzCustomTemplate]=\"tplSelectedView\"\n             [nzPlaceHolder]=\"field.placeholder\"\n             [nzMode]=\"field.nzMode\" [nzAllowClear]=\"field.nzAllowClear\"\n             nzShowSearch nzServerSearch (nzOnSearch)=\"search($event)\"\n             [nzMaxMultipleCount]=\"field?.nzMaxMultipleCount\" [nzMaxTagCount]=\"field?.nzMaxTagCount\"\n             [nzDropdownRender]=\"nzDropdownRenderTpl\">\n    <nz-option [nzCustomContent]=\"true\" *ngFor=\"let option of options;trackBy:trackBySelect\"\n               [nzLabel]=\"option.displayText\"\n               [nzValue]=\"option.value\"\n    >\n      <span [innerHTML]=\"option.displayText | ofSelectRenderOption: field: option\">\n      </span>\n    </nz-option>\n  </nz-select>\n</form>\n<ng-template #tplSelectedView let-selected>\n  <span [innerHTML]=\"selected.nzValue | ofOptionSelected:selected.nzLabel:field\"></span>\n</ng-template>\n\n<ng-template #nzDropdownRenderTpl>\n  <div *ngIf=\"field.nzMode === 'multiple' && field.options?.length > 3\">\n    <nz-divider></nz-divider>\n    <div class=\"margin-top-10 margin-left-10 margin-bottom-5\">\n      <button nz-button nzType=\"primary\" (click)=\"selectAll()\" nzSize=\"small\"><i nz-icon nzType=\"plus\"></i> Chọn tất cả\n      </button>\n      <button nz-button nzType=\"default\" (click)=\"unSelectAll()\" nzSize=\"small\"><i nz-icon nzType=\"minus\"></i> Bỏ chọn\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { IOfSelectOptionDto, OfSchemaModel } from '../../models';\nimport { OfSelectModel } from './of-select-model';\nimport { AppUtilityService } from '../../services/app-utility-service';\nimport * as _ from 'lodash';\nimport { DestroyRxjsService } from '../../services/destroy-rxjs.service';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'of-select',\n  templateUrl: './of-select.component.html',\n  providers: [DestroyRxjsService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OfSelectComponent implements OnInit, AfterViewInit {\n  @Input() schemaModel: OfSchemaModel;\n  @Input() field: OfSelectModel;\n  @Input() group: FormGroup;\n  options: IOfSelectOptionDto[] = [];\n\n  constructor(private cdr: ChangeDetectorRef,\n              private destroy$: DestroyRxjsService) {\n  }\n\n\n  ngOnInit(): void {\n    this.setOptionsView(this.field.options);\n  }\n\n  trackBySelect(index: number, item: IOfSelectOptionDto) {\n    return item.value;\n  }\n\n  search(value: string): void {\n    if (AppUtilityService.isWhitespace(value)) {\n      this.setOptionsView(this.field.options);\n      return;\n    }\n    const searchTxt = AppUtilityService.getFullTextSearch(value);\n    const options = _.filter(this.field.options, (s) => {\n      const ftsVietTat = AppUtilityService.searchVietTat(s.displayText);\n      const checkVietTat = ftsVietTat.indexOf(searchTxt) > -1;\n      if (AppUtilityService.isNullOrEmpty(s.fts)) {\n        s.fts = AppUtilityService.getFullTextSearch(s.displayText);\n      }\n      return s.fts.indexOf(searchTxt) > -1 || checkVietTat;\n    });\n    this.setOptionsView(options);\n  }\n\n  setOptionsView(options) {\n    _.forEach(options, opt => {\n      opt.fts = AppUtilityService.getFullTextSearch(opt.displayText);\n    });\n    this.options = options;\n    this.getItemSelected();\n    this.cdr.detectChanges();\n  }\n\n  selectAll() {\n    const values = _.map(this.field.options, opt => {\n      return opt.value;\n    });\n    this.group.get(this.field.dataField).patchValue(values);\n    this.cdr.detectChanges();\n  }\n\n  unSelectAll() {\n    this.group.get(this.field.dataField).patchValue(null);\n    this.cdr.detectChanges();\n  }\n\n  private handlerValueDataFieldChange() {\n    const f = this.group.get(this.field.dataField);\n    if (f) {\n      this.group.get(this.field.dataField)?.valueChanges\n        .pipe(debounceTime(111))\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(v => {\n          if (typeof v === 'number') {\n            f.patchValue('' + v);\n          }\n          this.getItemSelected();\n        });\n    }\n  }\n\n  private getItemSelected() {\n    const v = this.group.get(this.field.dataField).value;\n    if (AppUtilityService.isNullOrEmpty(v)) {\n      this.field.itemSelected = null;\n      this.cdr.detectChanges();\n      return;\n    }\n    // tslint:disable-next-line:triple-equals\n    this.field.itemSelected = _.find(this.options, x => x.value == v);\n    this.cdr.detectChanges();\n  }\n\n  ngAfterViewInit(): void {\n    this.schemaModel.subRender(this.cdr, this.destroy$);\n    this.handlerValueDataFieldChange();\n  }\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { OfSchemaModel } from '../../models';\nimport { FormGroup } from '@angular/forms';\nimport { OfSelectAsyncModel } from './of-select-async-model';\nimport { DestroyRxjsService } from '../../services/destroy-rxjs.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { OfSelectComponent } from '../of-select/of-select.component';\n\n@Component({\n  selector: 'select-async',\n  template: `\n      <of-select #vcSelect [schemaModel]=\"schemaModel\" [group]=\"group\" [field]=\"field\"></of-select>`,\n  providers: [DestroyRxjsService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OfSelectAsyncComponent implements AfterViewInit {\n  @ViewChild('vcSelect') vcSelect: OfSelectComponent;\n  schemaModel: OfSchemaModel;\n  field: OfSelectAsyncModel;\n  group: FormGroup;\n\n  constructor(private destroy$: DestroyRxjsService) {\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.field.optionsAsync.pipe(takeUntil(this.destroy$)).subscribe(opt => {\n        this.field.options = opt;\n        if (this.vcSelect) {\n          this.vcSelect.setOptionsView(opt);\n        }\n      });\n    });\n  }\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { OfSelectComponent } from '../of-select/of-select.component';\nimport { IOfSelectOptionDto, OfSchemaModel } from '../../models';\nimport { FormGroup } from '@angular/forms';\nimport { DestroyRxjsService } from '../../services/destroy-rxjs.service';\nimport { OfSelectApiModel } from './of-select-api-model';\nimport { Observable, of } from 'rxjs';\nimport { AppUtilityService } from '../../services/app-utility-service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'lib-of-select-api',\n  template: `\n      <of-select #vcSelect [schemaModel]=\"schemaModel\" [group]=\"group\" [field]=\"field\"></of-select>`,\n  providers: [DestroyRxjsService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OfSelectApiComponent implements AfterViewInit {\n  @ViewChild('vcSelect') vcSelect: OfSelectComponent;\n  schemaModel: OfSchemaModel;\n  field: OfSelectApiModel;\n  group: FormGroup;\n\n  constructor(private destroy$: DestroyRxjsService) {\n  }\n\n  get hasCacheOption() {\n    return !AppUtilityService.isNullOrEmpty(this.field.keyCache);\n  }\n\n  get key() {\n    return 'selectOpt_' + this.field.keyCache;\n  }\n\n  getOptionsFromApi(): Observable<IOfSelectOptionDto[]> {\n    if (this.hasCacheOption) {\n      const cache = sessionStorage.getItem(this.key);\n      if (cache) {\n        return of(JSON.parse(cache));\n      }\n    }\n    return this.field.functionService;\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.getOptionsFromApi().pipe(takeUntil(this.destroy$))\n        .subscribe(opt => {\n          if (this.hasCacheOption && !AppUtilityService.isNotAnyItem(opt)) {\n            sessionStorage.setItem(this.key, JSON.stringify(opt));\n          }\n          this.field.options = opt;\n          if (this.vcSelect) {\n            this.vcSelect.setOptionsView(opt);\n          }\n        });\n    });\n  }\n\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { DestroyRxjsService } from '../../services/destroy-rxjs.service';\nimport { OfSelectComponent } from '../of-select/of-select.component';\nimport { IOfSelectOptionDto, OfSchemaModel } from '../../models';\nimport { FormGroup } from '@angular/forms';\nimport { OfSelectCascadeModel } from './of-select-cascade-model';\nimport { Observable, of } from 'rxjs';\nimport { AppUtilityService } from '../../services/app-utility-service';\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'of-select-cascade',\n  template: `\n      <of-select #vcSelect [schemaModel]=\"schemaModel\" [group]=\"group\" [field]=\"field\"></of-select>`,\n  providers: [DestroyRxjsService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OfSelectCascadeComponent implements AfterViewInit {\n  @ViewChild('vcSelect') vcSelect: OfSelectComponent;\n  schemaModel: OfSchemaModel;\n  field: OfSelectCascadeModel;\n  group: FormGroup;\n\n  constructor(private destroy$: DestroyRxjsService) {\n  }\n\n  getOptionsFromApi(cascade: string): Observable<IOfSelectOptionDto[]> {\n    if (this.hasCacheOption) {\n      const cache = sessionStorage.getItem(this.key(cascade));\n      if (cache) {\n        return of(JSON.parse(cache));\n      }\n    }\n    return this.field.functionService(cascade);\n  }\n\n  get ctrl() {\n    return this.group.get(this.field.dataField);\n  }\n\n  get hasCacheOption() {\n    return !AppUtilityService.isNullOrEmpty(this.field.keyCache);\n  }\n\n  key(cascade: string) {\n    return 'selectOpt_' + this.field.keyCache + cascade;\n  }\n\n  disableIfCascadeEmpty(cascade: string) {\n    const ctrl = this.group.get(this.field.dataField);\n    if (AppUtilityService.isNullOrEmpty(cascade)) {\n      ctrl.disable({ onlySelf: true });\n    } else {\n      if (!this.field.disabled) {\n        ctrl.enable({ onlySelf: true });\n      }\n    }\n  }\n\n  setOptionsForView(options) {\n    if (this.vcSelect) {\n      this.vcSelect.setOptionsView(options);\n    }\n    this.field.options = options;\n  }\n\n  checkCurrentValue(options: IOfSelectOptionDto[]) {\n    if (AppUtilityService.isNotNull(this.ctrl.value)) {\n      // tslint:disable-next-line:triple-equals\n      const f = options.find(x => x.value == this.ctrl.value);\n      if (AppUtilityService.isNullOrEmpty(f)) {\n        this.ctrl.patchValue(null);\n      }\n    }\n  }\n\n  handlerCascadeChange() {\n    const cascadeField = this.group.get(this.field?.cascadeField);\n    if (cascadeField) {\n      cascadeField.valueChanges\n        .pipe(debounceTime(111), takeUntil(this.destroy$), distinctUntilChanged())\n        .subscribe(cascade => {\n          this.disableIfCascadeEmpty(cascade);\n          const ctrl = this.group.get(this.field.dataField);\n          if (AppUtilityService.isNullOrEmpty(cascade)) {\n            ctrl.patchValue(null);\n            this.setOptionsForView([]);\n          } else {\n            this.getOptionsFromApi(cascade).pipe(takeUntil(this.destroy$))\n              .subscribe(opt => {\n                if (AppUtilityService.isNotAnyItem(opt)) {\n                  ctrl.patchValue(null);\n                  this.setOptionsForView([]);\n                } else {\n                  if (this.hasCacheOption) {\n                    sessionStorage.setItem(this.key(cascade), JSON.stringify(opt));\n                  }\n                  this.setOptionsForView(opt);\n                  this.checkCurrentValue(opt);\n                }\n              });\n          }\n        });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.ctrl.disable({ onlySelf: true });\n      this.handlerCascadeChange();\n    }, 300);\n  }\n\n}\n","import { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { OfComponent } from './components/of.component';\r\nimport { OfRoutingModule } from './of-routing.module';\r\nimport { AntDesignModule } from '../ant-design.module';\r\nimport { OfFieldComponent } from './components/of-template-ref/of-field.component';\r\nimport { OfDynamicComponent } from './components/of-dynamic/of-dynamic.component';\r\nimport { OfCheckBoxComponent } from './components/of-check-box/of-check-box.component';\r\nimport { DynamicFieldDirective } from './directives/dynamic-field.directive';\r\nimport { OfTextComponent } from './components/of-text/of-text.component';\r\nimport { OfCurrencyComponent } from './components/of-currency/of-currency.component';\r\nimport { OfDatePickerComponent } from './components/of-date-picker/of-date-picker.component';\r\nimport { OfNumberInputComponent } from './components/of-number-input/of-number-input.component';\r\nimport { OfTextAreaComponent } from './components/of-text-area/of-text-area.component';\r\nimport { OfDataPickerControlComponent } from './components/of-date-picker/of-data-picker-control.component';\r\nimport { OfContentHtmlComponent } from './components/of-content-html/of-content-html.component';\r\nimport { NumbersOnlyDirective } from './directives/numbers-only.directive';\r\nimport { OfPasswordComponent } from './components/of-password/of-password.component';\r\nimport { OfRadioComponent } from './components/of-radio/of-radio.component';\r\nimport { OfSwitchComponent } from './components/of-switch/of-switch.component';\r\nimport { OfSelectSearchServerComponent } from './components/of-select-search-server/of-select-search-server.component';\r\nimport { OfTemplateRefComponent } from './components/of-template-ref/of-template-ref.component';\r\nimport { ShowValidationErrorPipe } from './pipes/show-validation-error.pipe';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { OfOptionSelectedPipe } from './pipes/of-option-selected.pipe';\r\nimport { OfSelectRenderOptionPipe } from './pipes/of-select-render-option.pipe';\r\nimport { OfSelectComponent } from './components/of-select/of-select.component';\r\nimport { OfSelectAsyncComponent } from './components/of-select-async/of-select-async.component';\r\nimport { OfSelectApiComponent } from './components/of-select-api/of-select-api.component';\r\nimport { OfSelectCascadeComponent } from './components/of-select-cascade/of-select-cascade.component';\r\n\r\nconst Of = [\r\n  OfDynamicComponent,\r\n  DynamicFieldDirective,\r\n  OfTextComponent,\r\n  ShowValidationErrorPipe,\r\n  OfCheckBoxComponent,\r\n  OfCurrencyComponent,\r\n  OfDatePickerComponent,\r\n  OfDataPickerControlComponent,\r\n  OfTextAreaComponent,\r\n  OfContentHtmlComponent,\r\n  OfNumberInputComponent,\r\n  NumbersOnlyDirective,\r\n  OfPasswordComponent,\r\n  OfRadioComponent,\r\n  OfSwitchComponent,\r\n  OfOptionSelectedPipe,\r\n  OfSelectRenderOptionPipe,\r\n  OfSelectSearchServerComponent,\r\n  OfTemplateRefComponent,\r\n  OfFieldComponent,\r\n  OfSelectComponent,\r\n  OfSelectAsyncComponent,\r\n  OfSelectApiComponent,\r\n  OfSelectCascadeComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: [OfComponent, Of],\r\n  imports: [CoreModule,\r\n    ThemeSharedModule,\r\n    OfRoutingModule,\r\n    AntDesignModule,\r\n    CurrencyMaskModule,\r\n    TextMaskModule],\r\n  exports: [\r\n    OfComponent,\r\n    OfDynamicComponent,\r\n    OfFieldComponent\r\n  ]\r\n})\r\nexport class OfModule {\r\n  static forChild(): ModuleWithProviders<OfModule> {\r\n    return {\r\n      ngModule: OfModule,\r\n      providers: []\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<OfModule> {\r\n    return new LazyModuleFactory(OfModule.forChild());\r\n  }\r\n}\r\n"]}