(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('lodash'), require('rxjs'), require('rxjs/operators'), require('@angular/common/http'), require('moment'), require('@angular/forms'), require('jquery'), require('ng-zorro-antd/input'), require('ng-zorro-antd/select'), require('@angular/common'), require('@abp/ng.core'), require('@abp/ng.theme.shared'), require('@angular/router'), require('ng-zorro-antd/affix'), require('ng-zorro-antd/alert'), require('ng-zorro-antd/anchor'), require('ng-zorro-antd/auto-complete'), require('ng-zorro-antd/avatar'), require('ng-zorro-antd/back-top'), require('ng-zorro-antd/badge'), require('ng-zorro-antd/breadcrumb'), require('ng-zorro-antd/button'), require('ng-zorro-antd/calendar'), require('ng-zorro-antd/card'), require('ng-zorro-antd/carousel'), require('ng-zorro-antd/cascader'), require('ng-zorro-antd/checkbox'), require('ng-zorro-antd/collapse'), require('ng-zorro-antd/comment'), require('ng-zorro-antd/core/no-animation'), require('ng-zorro-antd/core/trans-button'), require('ng-zorro-antd/core/wave'), require('ng-zorro-antd/date-picker'), require('ng-zorro-antd/descriptions'), require('ng-zorro-antd/divider'), require('ng-zorro-antd/drawer'), require('ng-zorro-antd/dropdown'), require('ng-zorro-antd/empty'), require('ng-zorro-antd/form'), require('ng-zorro-antd/grid'), require('ng-zorro-antd/i18n'), require('ng-zorro-antd/icon'), require('ng-zorro-antd/input-number'), require('ng-zorro-antd/layout'), require('ng-zorro-antd/list'), require('ng-zorro-antd/mention'), require('ng-zorro-antd/menu'), require('ng-zorro-antd/message'), require('ng-zorro-antd/modal'), require('ng-zorro-antd/notification'), require('ng-zorro-antd/page-header'), require('ng-zorro-antd/pagination'), require('ng-zorro-antd/popconfirm'), require('ng-zorro-antd/popover'), require('ng-zorro-antd/progress'), require('ng-zorro-antd/radio'), require('ng-zorro-antd/rate'), require('ng-zorro-antd/result'), require('ng-zorro-antd/skeleton'), require('ng-zorro-antd/slider'), require('ng-zorro-antd/spin'), require('ng-zorro-antd/statistic'), require('ng-zorro-antd/steps'), require('ng-zorro-antd/switch'), require('ng-zorro-antd/table'), require('ng-zorro-antd/tabs'), require('ng-zorro-antd/tag'), require('ng-zorro-antd/time-picker'), require('ng-zorro-antd/timeline'), require('ng-zorro-antd/tooltip'), require('ng-zorro-antd/transfer'), require('ng-zorro-antd/tree'), require('ng-zorro-antd/tree-select'), require('ng-zorro-antd/typography'), require('ng-zorro-antd/upload'), require('ng-zorro-antd/resizable'), require('date-fns/locale'), require('@angular/common/locales/vi'), require('@ant-design/icons-angular/icons'), require('ng-zorro-antd/space'), require('ng2-currency-mask'), require('date-fns/differenceInCalendarDays'), require('angular2-text-mask'), require('ng-zorro-antd/core/transition-patch')) :
    typeof define === 'function' && define.amd ? define('@of', ['exports', '@angular/core', 'lodash', 'rxjs', 'rxjs/operators', '@angular/common/http', 'moment', '@angular/forms', 'jquery', 'ng-zorro-antd/input', 'ng-zorro-antd/select', '@angular/common', '@abp/ng.core', '@abp/ng.theme.shared', '@angular/router', 'ng-zorro-antd/affix', 'ng-zorro-antd/alert', 'ng-zorro-antd/anchor', 'ng-zorro-antd/auto-complete', 'ng-zorro-antd/avatar', 'ng-zorro-antd/back-top', 'ng-zorro-antd/badge', 'ng-zorro-antd/breadcrumb', 'ng-zorro-antd/button', 'ng-zorro-antd/calendar', 'ng-zorro-antd/card', 'ng-zorro-antd/carousel', 'ng-zorro-antd/cascader', 'ng-zorro-antd/checkbox', 'ng-zorro-antd/collapse', 'ng-zorro-antd/comment', 'ng-zorro-antd/core/no-animation', 'ng-zorro-antd/core/trans-button', 'ng-zorro-antd/core/wave', 'ng-zorro-antd/date-picker', 'ng-zorro-antd/descriptions', 'ng-zorro-antd/divider', 'ng-zorro-antd/drawer', 'ng-zorro-antd/dropdown', 'ng-zorro-antd/empty', 'ng-zorro-antd/form', 'ng-zorro-antd/grid', 'ng-zorro-antd/i18n', 'ng-zorro-antd/icon', 'ng-zorro-antd/input-number', 'ng-zorro-antd/layout', 'ng-zorro-antd/list', 'ng-zorro-antd/mention', 'ng-zorro-antd/menu', 'ng-zorro-antd/message', 'ng-zorro-antd/modal', 'ng-zorro-antd/notification', 'ng-zorro-antd/page-header', 'ng-zorro-antd/pagination', 'ng-zorro-antd/popconfirm', 'ng-zorro-antd/popover', 'ng-zorro-antd/progress', 'ng-zorro-antd/radio', 'ng-zorro-antd/rate', 'ng-zorro-antd/result', 'ng-zorro-antd/skeleton', 'ng-zorro-antd/slider', 'ng-zorro-antd/spin', 'ng-zorro-antd/statistic', 'ng-zorro-antd/steps', 'ng-zorro-antd/switch', 'ng-zorro-antd/table', 'ng-zorro-antd/tabs', 'ng-zorro-antd/tag', 'ng-zorro-antd/time-picker', 'ng-zorro-antd/timeline', 'ng-zorro-antd/tooltip', 'ng-zorro-antd/transfer', 'ng-zorro-antd/tree', 'ng-zorro-antd/tree-select', 'ng-zorro-antd/typography', 'ng-zorro-antd/upload', 'ng-zorro-antd/resizable', 'date-fns/locale', '@angular/common/locales/vi', '@ant-design/icons-angular/icons', 'ng-zorro-antd/space', 'ng2-currency-mask', 'date-fns/differenceInCalendarDays', 'angular2-text-mask', 'ng-zorro-antd/core/transition-patch'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.of = {}, global.ng.core, global._, global.rxjs, global.rxjs.operators, global.ng.common.http, global.moment, global.ng.forms, global.$, global.i2, global.i3, global.ng.common, global.i1$2, global.ng_theme_shared, global.ng.router, global.affix, global.alert, global.anchor, global.autoComplete, global.avatar, global.backTop, global.badge, global.breadcrumb, global.i6, global.calendar, global.card, global.carousel, global.cascader, global.i2$1, global.collapse, global.comment, global.noAnimation, global.transButton, global.i7, global.i1$4, global.descriptions, global.i5, global.drawer, global.dropdown, global.empty, global.i4$1, global.i2$2, global.i18n, global.i4$2, global.i5$1, global.layout, global.list, global.mention, global.menu, global.message, global.modal, global.notification, global.pageHeader, global.i5$2, global.popconfirm, global.popover, global.progress, global.i2$3, global.rate, global.result, global.skeleton, global.slider, global.i2$4, global.statistic, global.steps, global.i2$5, global.table, global.tabs, global.tag, global.timePicker, global.timeline, global.tooltip, global.transfer, global.tree, global.treeSelect, global.typography, global.upload, global.resizable, global.locale, global.ng.common.locales.vi, global.AllIcons, global.space, global.i3$1, global.differenceInCalendarDays, global.i4$3, global.i3$2));
}(this, (function (exports, i0, _, rxjs, operators, i1, moment, i1$1, $, i2, i3, i4, i1$2, ng_theme_shared, i1$3, affix, alert, anchor, autoComplete, avatar, backTop, badge, breadcrumb, i6, calendar, card, carousel, cascader, i2$1, collapse, comment, noAnimation, transButton, i7, i1$4, descriptions, i5, drawer, dropdown, empty, i4$1, i2$2, i18n, i4$2, i5$1, layout, list, mention, menu, message, modal, notification, pageHeader, i5$2, popconfirm, popover, progress, i2$3, rate, result, skeleton, slider, i2$4, statistic, steps, i2$5, table, tabs, tag, timePicker, timeline, tooltip, transfer, tree, treeSelect, typography, upload, resizable, locale, vi, AllIcons, space, i3$1, differenceInCalendarDays, i4$3, i3$2) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var ___namespace = /*#__PURE__*/_interopNamespace(_);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var moment__namespace = /*#__PURE__*/_interopNamespace(moment);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var $__namespace = /*#__PURE__*/_interopNamespace($);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i1__namespace$4 = /*#__PURE__*/_interopNamespace(i1$4);
    var i5__namespace$2 = /*#__PURE__*/_interopNamespace(i5);
    var i4__namespace$3 = /*#__PURE__*/_interopNamespace(i4$1);
    var i2__namespace$5 = /*#__PURE__*/_interopNamespace(i2$2);
    var i4__namespace$2 = /*#__PURE__*/_interopNamespace(i4$2);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5$1);
    var i5__namespace$1 = /*#__PURE__*/_interopNamespace(i5$2);
    var i2__namespace$3 = /*#__PURE__*/_interopNamespace(i2$3);
    var i2__namespace$2 = /*#__PURE__*/_interopNamespace(i2$4);
    var i2__namespace$4 = /*#__PURE__*/_interopNamespace(i2$5);
    var vi__default = /*#__PURE__*/_interopDefaultLegacy(vi);
    var AllIcons__namespace = /*#__PURE__*/_interopNamespace(AllIcons);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var differenceInCalendarDays__default = /*#__PURE__*/_interopDefaultLegacy(differenceInCalendarDays);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$3);
    var i3__namespace$2 = /*#__PURE__*/_interopNamespace(i3$2);

    var OfControlModel = /** @class */ (function () {
        function OfControlModel(config) {
            this.type = 'text';
            this.dataField = '';
            this.label = '';
            this.hiddenLabel = false;
            this.width = 6;
            this.css = '';
            this.required = false;
            this.errorEmpty = 'Không để trống trường này!';
            this.placeholder = '';
            this.disabled = false;
            this.hidden = false;
            this.validations = [];
            this.controls = [];
            this.dataField = config.dataField;
            this.label = config.label || this.label;
            this.hiddenLabel = (config === null || config === void 0 ? void 0 : config.hiddenLabel) || false;
            this.width = config.width || this.width;
            this.css = "ord-dynamic-input gutter-row ord-form-control field-" + this.dataField + " " + (config.css || '') + " ";
            this.required = config.required || this.required;
            this.errorEmpty = config.errorEmpty || this.errorEmpty;
            this.placeholder = config.placeholder || this.placeholder;
            this.disabled = config.disabled || this.disabled;
            this.disabledAsync = config.disabledAsync || null;
            this.hidden = config.hidden || this.hidden;
            this.hiddenAsync = config.hiddenAsync || null;
            this.validations = config.validations || [];
            this.value = (config === null || config === void 0 ? void 0 : config.value) || null;
            this.bottomHtml = (config === null || config === void 0 ? void 0 : config.bottomHtml) || null;
        }
        return OfControlModel;
    }());

    // cấu hình control trong template
    var OfExtendControlModel = /** @class */ (function () {
        function OfExtendControlModel(config) {
            this.disabled = false;
            this.errorEmpty = '';
            this.label = config.label || '';
            this.dataField = config.dataField;
            this.validations = config.validations || [];
            this.value = config.value;
            this.required = config.required;
            this.errorEmpty = config.errorEmpty || 'Không để trống trường này';
            this.disabled = config === null || config === void 0 ? void 0 : config.disabled;
        }
        return OfExtendControlModel;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from) {
        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
            to[j] = from[i];
        return to;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var OfSchemaModel = /** @class */ (function () {
        function OfSchemaModel(config) {
            this.layout = 'vertical';
            this.focusFisrtInit = true;
            this.errorNotValid = 'Vui lòng điền đầy đủ thông tin!';
            this.backUpDisables = {};
            this.render$ = new rxjs.Subject();
            this.isSearchBox = false;
            this.searchBtnBusy = false;
            this.searchEvent$ = new rxjs.Subject();
            this.rebuilder$ = new rxjs.Subject();
            this.submitted = false;
            this.fields = config.fields;
            this.id = Number(new Date());
            this.focusFisrtInit = (config === null || config === void 0 ? void 0 : config.focusFisrtInit) || true;
            this.errorNotValid = (config === null || config === void 0 ? void 0 : config.errorNotValid) || 'Vui lòng điền đầy đủ thông tin!';
            this.isSearchBox = (config === null || config === void 0 ? void 0 : config.isSearchBox) || false;
        }
        Object.defineProperty(OfSchemaModel.prototype, "value", {
            get: function () {
                var _a;
                return ((_a = this.form) === null || _a === void 0 ? void 0 : _a.getRawValue()) || null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OfSchemaModel.prototype, "valueValid", {
            get: function () {
                var _a;
                if ((_a = this.form) === null || _a === void 0 ? void 0 : _a.valid) {
                    return this.value;
                }
                return null;
            },
            enumerable: false,
            configurable: true
        });
        OfSchemaModel.prototype.getField = function (name) {
            var _a;
            return ((_a = this.fields) === null || _a === void 0 ? void 0 : _a.find(function (x) { return x.dataField === name; })) || null;
        };
        OfSchemaModel.prototype.getFormControl = function (name) {
            return this.form.get(name);
        };
        OfSchemaModel.prototype.disableField = function (name, f) {
            var _this = this;
            if (f === void 0) { f = true; }
            setTimeout(function () {
                var ctr = _this.getFormControl(name);
                if (ctr) {
                    if (f) {
                        ctr.disable({ onlySelf: true });
                    }
                    else {
                        ctr.enable({ onlySelf: true });
                    }
                }
                // tslint:disable-next-line:no-shadowed-variable
                var field = _this.fields.find(function (f) { return f.dataField === name; });
                if (field) {
                    field.disabled = f;
                }
            });
        };
        OfSchemaModel.prototype.disableAll = function (f) {
            var _this = this;
            if (f === void 0) { f = true; }
            if (f) {
                this.backUpDisables = {};
                ___namespace.forEach(this.fields, function (field) {
                    if (field.disabled) {
                        _this.backUpDisables[field.dataField] = true;
                    }
                    field.disabled = true;
                    var ctr = _this.getFormControl(field.dataField);
                    if (ctr) {
                        ctr.disable({ onlySelf: true });
                    }
                });
                this.triggerRender();
                return;
            }
            ___namespace.forEach(this.fields, function (field) {
                var ctr = _this.getFormControl(field.dataField);
                if (ctr) {
                    var backUp = _this.backUpDisables[field.dataField];
                    if (backUp) {
                        ctr.disable({ onlySelf: true });
                        field.disabled = true;
                    }
                    else {
                        ctr.enable({ onlySelf: true });
                        field.disabled = false;
                    }
                }
            });
            this.triggerRender();
        };
        OfSchemaModel.prototype.hiddenFields = function (fields) {
            var _this = this;
            ___namespace.forEach(fields, function (field) {
                _this.getField(field).hidden = true;
            });
        };
        OfSchemaModel.prototype.showFields = function (fields) {
            var _this = this;
            ___namespace.forEach(fields, function (field) {
                _this.getField(field).hidden = false;
            });
        };
        OfSchemaModel.prototype.setHidden = function (fields, hiddens) {
            var _this = this;
            ___namespace.forEach(fields, function (field, idx) {
                _this.getField(field).hidden = hiddens[idx];
            });
        };
        OfSchemaModel.prototype.setShow = function (fields, shows) {
            var _this = this;
            ___namespace.forEach(fields, function (field, idx) {
                _this.getField(field).hidden = !shows[idx];
            });
        };
        OfSchemaModel.prototype.fieldValueChanges = function (name, time) {
            if (time === void 0) { time = 100; }
            var _a;
            return (_a = this.form) === null || _a === void 0 ? void 0 : _a.get(name).valueChanges.pipe(operators.debounceTime(time));
        };
        OfSchemaModel.prototype.valueChanges = function (time) {
            if (time === void 0) { time = 100; }
            var _a;
            return (_a = this.form) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(operators.debounceTime(time));
        };
        OfSchemaModel.prototype.patchValue = function (value) {
            var _this = this;
            Object.keys(value).forEach(function (name) {
                var f = _this.form.get(name);
                if (f) {
                    f.patchValue(value[name]);
                }
            });
            this.triggerRender();
        };
        OfSchemaModel.prototype.triggerRender = function () {
            var _this = this;
            setTimeout(function () {
                _this.render$.next(Number(new Date()));
            }, 500);
        };
        OfSchemaModel.prototype.subRender = function (cdr, destroy$) {
            this.render$.pipe(operators.filter(function (s) { return s > 0; })).pipe(operators.debounceTime(111))
                .pipe(operators.takeUntil(destroy$))
                .subscribe(function (d) {
                cdr.detectChanges();
            });
        };
        OfSchemaModel.prototype.addControls = function (controls, indexBegin) {
            if (indexBegin === void 0) { indexBegin = null; }
            if (indexBegin === null) {
                this.fields = ___namespace.concat(this.fields, controls);
            }
            else {
                this.fields = ___namespace.flatMap(this.fields, function (value, index) {
                    if (index === indexBegin) {
                        return __spread(controls, [value]);
                    }
                    return value;
                });
            }
            this.rebuilder();
        };
        OfSchemaModel.prototype.rebuilder = function () {
            var _this = this;
            setTimeout(function () {
                _this.rebuilder$.next(Number(new Date()));
            });
        };
        OfSchemaModel.prototype.search = function () {
            if (this.searchEvent$) {
                this.searchEvent$.next(this.value);
            }
        };
        return OfSchemaModel;
    }());

    var OfCheckBoxModel = /** @class */ (function (_super) {
        __extends(OfCheckBoxModel, _super);
        function OfCheckBoxModel(config) {
            var _this = _super.call(this, config) || this;
            _this.checkBoxLabel = '';
            _this.type = 'checkBox';
            _this.checkBoxLabel = config.checkBoxLabel;
            _this.value = _this.value || false;
            return _this;
        }
        return OfCheckBoxModel;
    }(OfControlModel));

    var OfComponentRefModel = /** @class */ (function (_super) {
        __extends(OfComponentRefModel, _super);
        function OfComponentRefModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'componentRef';
            _this.componentRef = config.componentRef;
            return _this;
        }
        return OfComponentRefModel;
    }(OfControlModel));

    var OfContentHtmlModel = /** @class */ (function (_super) {
        __extends(OfContentHtmlModel, _super);
        function OfContentHtmlModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'contentHtml';
            _this.content = config.content || '';
            if (config.isBlank) {
                _this.content = '';
            }
            return _this;
        }
        return OfContentHtmlModel;
    }(OfControlModel));

    var OfCurrencyModel = /** @class */ (function (_super) {
        __extends(OfCurrencyModel, _super);
        function OfCurrencyModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'currencyInput';
            _this.prefix = config.prefix || ' ';
            _this.suffix = config.suffix || ' VNĐ';
            _this.precision = config.precision || 0;
            return _this;
        }
        return OfCurrencyModel;
    }(OfControlModel));

    var OfDateModel = /** @class */ (function (_super) {
        __extends(OfDateModel, _super);
        function OfDateModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'datePicker';
            _this.minDateAsync = config.minDateAsync || null;
            _this.maxDateAsync = config.maxDateAsync || null;
            _this.dateNotGreaterThanCurrent = config.notGreaterThanCurrent || false;
            _this.minDate = config.minDate;
            _this.maxDate = config.maxDate;
            _this.tuNgayDataField = config.tuNgayDataField;
            _this.denNgayDataField = config.denNgayDataField;
            return _this;
        }
        return OfDateModel;
    }(OfControlModel));

    var OfNumberModel = /** @class */ (function (_super) {
        __extends(OfNumberModel, _super);
        function OfNumberModel(config) {
            var _this = _super.call(this, config) || this;
            _this.step = 1;
            _this.onlyKeyNumber = false;
            _this.type = 'numberInput';
            _this.min = config.min || null;
            _this.max = config.max || null;
            _this.step = config.step || 1;
            _this.onlyKeyNumber = config.onlyKeyNumber || false;
            _this.maxlength = config.maxlength || null;
            return _this;
        }
        return OfNumberModel;
    }(OfControlModel));

    var OfPwdModel = /** @class */ (function (_super) {
        __extends(OfPwdModel, _super);
        function OfPwdModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'passWordInput';
            _this.placeholder = _this.placeholder || 'Nhập mật khẩu';
            return _this;
        }
        return OfPwdModel;
    }(OfControlModel));

    var OfRadioModel = /** @class */ (function (_super) {
        __extends(OfRadioModel, _super);
        function OfRadioModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'radio';
            _this.items = config.items;
            return _this;
        }
        return OfRadioModel;
    }(OfControlModel));

    var AppUtilityService = /** @class */ (function () {
        function AppUtilityService() {
        }
        AppUtilityService.isNullOrEmpty = function (input) {
            return typeof input === 'undefined' || input === null || input === '';
            // return !(typeof input !== 'undefined' && input && input !== '' && input !== null);
        };
        AppUtilityService.isNotNull = function (input) {
            return !this.isNullOrEmpty(input);
        };
        AppUtilityService.getFullTextSearch = function (str) {
            if (this.isNullOrEmpty(str)) {
                return str;
            }
            str += '';
            str = this.removeDau(str);
            str = str.replace(/\s\s+/g, ' ');
            return str;
        };
        AppUtilityService.removeDau = function (str) {
            if (this.isNullOrEmpty(str)) {
                return str;
            }
            str = str.toLowerCase();
            str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');
            str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');
            str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');
            str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');
            str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');
            str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');
            str = str.replace(/đ/g, 'd');
            str = str.replace(/!|@|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|\$|_|`|-|{|}|\||\\/g, ' ');
            str = str.replace(/ + /g, ' ');
            str = str.trim();
            return str;
        };
        AppUtilityService.isNotAnyItem = function (input) {
            return this.isNullOrEmpty(input) || input.length === 0;
        };
        AppUtilityService.isWhitespace = function (value) {
            return (value || '').trim().length === 0;
        };
        AppUtilityService.searchVietTat = function (str) {
            if (this.isNullOrEmpty(str)) {
                return str;
            }
            var ret = '';
            var spl = str.split(' ');
            if (this.isNotAnyItem(spl) === false) {
                spl.forEach(function (s) {
                    if (s.length > 0) {
                        ret = ret + s[0];
                    }
                });
            }
            return this.getFullTextSearch(___namespace.cloneDeep(ret));
        };
        return AppUtilityService;
    }());
    AppUtilityService.ɵfac = function AppUtilityService_Factory(t) { return new (t || AppUtilityService)(); };
    AppUtilityService.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: AppUtilityService, factory: AppUtilityService.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(AppUtilityService, [{
                type: i0.Injectable
            }], function () { return []; }, null);
    })();

    var OfSelectBaseModel = /** @class */ (function (_super) {
        __extends(OfSelectBaseModel, _super);
        function OfSelectBaseModel(config) {
            var _this = _super.call(this, config) || this;
            _this.nzAllowClear = true;
            _this.nzMode = 'default';
            _this.options = [];
            _this.itemSelected = null;
            _this.nzMode = (config === null || config === void 0 ? void 0 : config.nzMode) || 'default';
            if (AppUtilityService.isNotNull(config.nzAllowClear)) {
                _this.nzAllowClear = config.nzAllowClear;
            }
            if (_this.nzMode === 'multiple') {
                _this.nzMaxMultipleCount = (config === null || config === void 0 ? void 0 : config.nzMaxMultipleCount) || Number.MAX_VALUE;
            }
            _this.nzMaxTagCount = (config === null || config === void 0 ? void 0 : config.nzMaxTagCount) || 3;
            _this.placeholder = _this.placeholder || '-Chọn-';
            _this.renderOptionFunc = config.renderOptionFunc || null;
            _this.renderSelectedFunc = config.renderSelectedFunc || null;
            if (_this.value) {
                _this.value = '' + _this.value;
            }
            return _this;
        }
        return OfSelectBaseModel;
    }(OfControlModel));

    var OfSelectModel = /** @class */ (function (_super) {
        __extends(OfSelectModel, _super);
        function OfSelectModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'select';
            _this.options = config.options;
            return _this;
        }
        return OfSelectModel;
    }(OfSelectBaseModel));

    var OfSelectApiModel = /** @class */ (function (_super) {
        __extends(OfSelectApiModel, _super);
        function OfSelectApiModel(config) {
            var _this = _super.call(this, config) || this;
            _this.dataExtend = {};
            _this.type = 'selectApi';
            _this.functionService = config.functionService;
            return _this;
        }
        return OfSelectApiModel;
    }(OfSelectBaseModel));

    var OfSelectAsyncModel = /** @class */ (function (_super) {
        __extends(OfSelectAsyncModel, _super);
        function OfSelectAsyncModel(config) {
            var _this = _super.call(this, config) || this;
            _this.keyCache = '';
            _this.type = 'selectAsync';
            _this.optionsAsync = config.optionsAsync;
            _this.keyCache = config.keyCache;
            return _this;
        }
        return OfSelectAsyncModel;
    }(OfSelectBaseModel));

    var OfSelectCascadeModel = /** @class */ (function (_super) {
        __extends(OfSelectCascadeModel, _super);
        function OfSelectCascadeModel(config) {
            var _this = _super.call(this, config) || this;
            _this.keyCache = '';
            _this.cascadeField = '';
            _this.type = 'selectApiCascade';
            _this.functionService = config.functionService;
            _this.keyCache = config.keyCache;
            _this.cascadeField = config.cascadeField;
            return _this;
        }
        return OfSelectCascadeModel;
    }(OfSelectBaseModel));

    var OfSelectSearchServerModel = /** @class */ (function (_super) {
        __extends(OfSelectSearchServerModel, _super);
        function OfSelectSearchServerModel(config) {
            var _this = _super.call(this, config) || this;
            _this.showPagination = false;
            _this.type = 'selectSearchServer';
            _this.showPagination = config.showPagination || false;
            _this.functionService = config.functionService;
            return _this;
        }
        return OfSelectSearchServerModel;
    }(OfSelectBaseModel));

    var OfSwitchModel = /** @class */ (function (_super) {
        __extends(OfSwitchModel, _super);
        function OfSwitchModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'switch';
            _this.yesText = config.yesText || null;
            _this.noText = config.noText || null;
            return _this;
        }
        return OfSwitchModel;
    }(OfControlModel));

    var OfTemplateRefModel = /** @class */ (function (_super) {
        __extends(OfTemplateRefModel, _super);
        function OfTemplateRefModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'templateRef';
            _this.controls = config.controls;
            return _this;
        }
        return OfTemplateRefModel;
    }(OfControlModel));

    var OfTextModel = /** @class */ (function (_super) {
        __extends(OfTextModel, _super);
        function OfTextModel(config) {
            var _this = _super.call(this, config) || this;
            _this.type = 'text';
            _this.maxLength = (config === null || config === void 0 ? void 0 : config.maxLength) || null;
            _this.minLength = (config === null || config === void 0 ? void 0 : config.minLength) || null;
            return _this;
        }
        return OfTextModel;
    }(OfControlModel));

    var OfTextAreaModel = /** @class */ (function (_super) {
        __extends(OfTextAreaModel, _super);
        function OfTextAreaModel(config) {
            var _this = _super.call(this, config) || this;
            _this.maxLength = 2000;
            _this.rows = 1;
            _this.type = 'textArea';
            if ((config === null || config === void 0 ? void 0 : config.maxLength) > 0) {
                _this.maxLength = config === null || config === void 0 ? void 0 : config.maxLength;
            }
            _this.rows = config.rows || 1;
            return _this;
        }
        return OfTextAreaModel;
    }(OfControlModel));

    var API_BASE_URL = 'http://ytcs-api-v2.orenda.vn';
    var AbpServiceProxy = /** @class */ (function () {
        function AbpServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = 'http://ytcs-api-v2.orenda.vn';
        }
        /**
         * @param includeTypes (optional)
         * @return Success
         */
        AbpServiceProxy.prototype.apiDefinition = function (includeTypes) {
            var _this = this;
            var url_ = this.baseUrl + '/api/abp/api-definition?';
            if (includeTypes === null)
                throw new Error('The parameter \'includeTypes\' cannot be null.');
            else if (includeTypes !== undefined)
                url_ += 'IncludeTypes=' + encodeURIComponent('' + includeTypes) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processApiDefinition(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processApiDefinition(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        AbpServiceProxy.prototype.processApiDefinition = function (response) {
            var e_1, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ApplicationApiDescriptionModel.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status === 403) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result403 = null;
                    var resultData403 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result403 = RemoteServiceErrorResponse.fromJS(resultData403);
                    return throwException('Forbidden', status, _responseText, _headers, result403);
                }));
            }
            else if (status === 401) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result401 = null;
                    var resultData401 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result401 = RemoteServiceErrorResponse.fromJS(resultData401);
                    return throwException('Unauthorized', status, _responseText, _headers, result401);
                }));
            }
            else if (status === 400) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result400 = null;
                    var resultData400 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result400 = RemoteServiceErrorResponse.fromJS(resultData400);
                    return throwException('Bad Request', status, _responseText, _headers, result400);
                }));
            }
            else if (status === 404) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result404 = null;
                    var resultData404 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result404 = RemoteServiceErrorResponse.fromJS(resultData404);
                    return throwException('Not Found', status, _responseText, _headers, result404);
                }));
            }
            else if (status === 501) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result501 = null;
                    var resultData501 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result501 = RemoteServiceErrorResponse.fromJS(resultData501);
                    return throwException('Server Error', status, _responseText, _headers, result501);
                }));
            }
            else if (status === 500) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result500 = null;
                    var resultData500 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result500 = RemoteServiceErrorResponse.fromJS(resultData500);
                    return throwException('Server Error', status, _responseText, _headers, result500);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        AbpServiceProxy.prototype.applicationConfiguration = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/abp/application-configuration';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processApplicationConfiguration(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processApplicationConfiguration(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        AbpServiceProxy.prototype.processApplicationConfiguration = function (response) {
            var e_2, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ApplicationConfigurationDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status === 403) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result403 = null;
                    var resultData403 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result403 = RemoteServiceErrorResponse.fromJS(resultData403);
                    return throwException('Forbidden', status, _responseText, _headers, result403);
                }));
            }
            else if (status === 401) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result401 = null;
                    var resultData401 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result401 = RemoteServiceErrorResponse.fromJS(resultData401);
                    return throwException('Unauthorized', status, _responseText, _headers, result401);
                }));
            }
            else if (status === 400) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result400 = null;
                    var resultData400 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result400 = RemoteServiceErrorResponse.fromJS(resultData400);
                    return throwException('Bad Request', status, _responseText, _headers, result400);
                }));
            }
            else if (status === 404) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result404 = null;
                    var resultData404 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result404 = RemoteServiceErrorResponse.fromJS(resultData404);
                    return throwException('Not Found', status, _responseText, _headers, result404);
                }));
            }
            else if (status === 501) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result501 = null;
                    var resultData501 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result501 = RemoteServiceErrorResponse.fromJS(resultData501);
                    return throwException('Server Error', status, _responseText, _headers, result501);
                }));
            }
            else if (status === 500) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result500 = null;
                    var resultData500 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result500 = RemoteServiceErrorResponse.fromJS(resultData500);
                    return throwException('Server Error', status, _responseText, _headers, result500);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return AbpServiceProxy;
    }());
    AbpServiceProxy.ɵfac = function AbpServiceProxy_Factory(t) { return new (t || AbpServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    AbpServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: AbpServiceProxy, factory: AbpServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(AbpServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var TenantsServiceProxy = /** @class */ (function () {
        function TenantsServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        TenantsServiceProxy.prototype.byName = function (name) {
            var _this = this;
            var url_ = this.baseUrl + '/api/abp/multi-tenancy/tenants/by-name/{name}';
            if (name === undefined || name === null)
                throw new Error('The parameter \'name\' must be defined.');
            url_ = url_.replace('{name}', encodeURIComponent('' + name));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processByName(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processByName(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TenantsServiceProxy.prototype.processByName = function (response) {
            var e_3, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FindTenantResultDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status === 403) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result403 = null;
                    var resultData403 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result403 = RemoteServiceErrorResponse.fromJS(resultData403);
                    return throwException('Forbidden', status, _responseText, _headers, result403);
                }));
            }
            else if (status === 401) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result401 = null;
                    var resultData401 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result401 = RemoteServiceErrorResponse.fromJS(resultData401);
                    return throwException('Unauthorized', status, _responseText, _headers, result401);
                }));
            }
            else if (status === 400) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result400 = null;
                    var resultData400 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result400 = RemoteServiceErrorResponse.fromJS(resultData400);
                    return throwException('Bad Request', status, _responseText, _headers, result400);
                }));
            }
            else if (status === 404) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result404 = null;
                    var resultData404 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result404 = RemoteServiceErrorResponse.fromJS(resultData404);
                    return throwException('Not Found', status, _responseText, _headers, result404);
                }));
            }
            else if (status === 501) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result501 = null;
                    var resultData501 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result501 = RemoteServiceErrorResponse.fromJS(resultData501);
                    return throwException('Server Error', status, _responseText, _headers, result501);
                }));
            }
            else if (status === 500) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result500 = null;
                    var resultData500 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result500 = RemoteServiceErrorResponse.fromJS(resultData500);
                    return throwException('Server Error', status, _responseText, _headers, result500);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TenantsServiceProxy.prototype.byId = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/abp/multi-tenancy/tenants/by-id/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processById(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processById(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TenantsServiceProxy.prototype.processById = function (response) {
            var e_4, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_4) throw e_4.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FindTenantResultDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status === 403) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result403 = null;
                    var resultData403 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result403 = RemoteServiceErrorResponse.fromJS(resultData403);
                    return throwException('Forbidden', status, _responseText, _headers, result403);
                }));
            }
            else if (status === 401) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result401 = null;
                    var resultData401 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result401 = RemoteServiceErrorResponse.fromJS(resultData401);
                    return throwException('Unauthorized', status, _responseText, _headers, result401);
                }));
            }
            else if (status === 400) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result400 = null;
                    var resultData400 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result400 = RemoteServiceErrorResponse.fromJS(resultData400);
                    return throwException('Bad Request', status, _responseText, _headers, result400);
                }));
            }
            else if (status === 404) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result404 = null;
                    var resultData404 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result404 = RemoteServiceErrorResponse.fromJS(resultData404);
                    return throwException('Not Found', status, _responseText, _headers, result404);
                }));
            }
            else if (status === 501) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result501 = null;
                    var resultData501 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result501 = RemoteServiceErrorResponse.fromJS(resultData501);
                    return throwException('Server Error', status, _responseText, _headers, result501);
                }));
            }
            else if (status === 500) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result500 = null;
                    var resultData500 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result500 = RemoteServiceErrorResponse.fromJS(resultData500);
                    return throwException('Server Error', status, _responseText, _headers, result500);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return TenantsServiceProxy;
    }());
    TenantsServiceProxy.ɵfac = function TenantsServiceProxy_Factory(t) { return new (t || TenantsServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    TenantsServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: TenantsServiceProxy, factory: TenantsServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(TenantsServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var BenhvienServiceProxy = /** @class */ (function () {
        function BenhvienServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        BenhvienServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processGetlist = function (response) {
            var e_5, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_5_1) { e_5 = { error: e_5_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_5) throw e_5.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfBenhVienDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        BenhvienServiceProxy.prototype.cosoyteautocompletedatasource = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/cosoyteautocompletedatasource';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCosoyteautocompletedatasource(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCosoyteautocompletedatasource(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processCosoyteautocompletedatasource = function (response) {
            var e_6, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_6_1) { e_6 = { error: e_6_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_6) throw e_6.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCoSoYTeAutoDataSourceDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        BenhvienServiceProxy.prototype.cosoytedacodailyautocompletedatasource = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/cosoytedacodailyautocompletedatasource';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCosoytedacodailyautocompletedatasource(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCosoytedacodailyautocompletedatasource(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processCosoytedacodailyautocompletedatasource = function (response) {
            var e_7, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_7_1) { e_7 = { error: e_7_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_7) throw e_7.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCoSoYTeAutoDataSourceDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param ma (optional)
         * @return Success
         */
        BenhvienServiceProxy.prototype.searchbenhvienidbyma = function (ma) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/searchbenhvienidbyma?';
            if (ma !== undefined)
                url_ += 'ma=' + encodeURIComponent('' + ma) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSearchbenhvienidbyma(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSearchbenhvienidbyma(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processSearchbenhvienidbyma = function (response) {
            var e_8, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_8_1) { e_8 = { error: e_8_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_8) throw e_8.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        BenhvienServiceProxy.prototype.getdanhsachbenhvien = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/getdanhsachbenhvien';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetdanhsachbenhvien(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetdanhsachbenhvien(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processGetdanhsachbenhvien = function (response) {
            var e_9, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_9_1) { e_9 = { error: e_9_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_9) throw e_9.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_10, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_1 = __values(resultData200), resultData200_1_1 = resultData200_1.next(); !resultData200_1_1.done; resultData200_1_1 = resultData200_1.next()) {
                                var item = resultData200_1_1.value;
                                result200.push(BenhVienDto.fromJS(item));
                            }
                        }
                        catch (e_10_1) { e_10 = { error: e_10_1 }; }
                        finally {
                            try {
                                if (resultData200_1_1 && !resultData200_1_1.done && (_a = resultData200_1.return)) _a.call(resultData200_1);
                            }
                            finally { if (e_10) throw e_10.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param benhVienId (optional)
         * @return Success
         */
        BenhvienServiceProxy.prototype.comboboxbenhvienordichvu = function (benhVienId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/comboboxbenhvienordichvu?';
            if (benhVienId !== undefined)
                url_ += 'BenhVienId=' + encodeURIComponent('' + benhVienId) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processComboboxbenhvienordichvu(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processComboboxbenhvienordichvu(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processComboboxbenhvienordichvu = function (response) {
            var e_11, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_11_1) { e_11 = { error: e_11_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_11) throw e_11.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_12, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_2 = __values(resultData200), resultData200_2_1 = resultData200_2.next(); !resultData200_2_1.done; resultData200_2_1 = resultData200_2.next()) {
                                var item = resultData200_2_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_12_1) { e_12 = { error: e_12_1 }; }
                        finally {
                            try {
                                if (resultData200_2_1 && !resultData200_2_1.done && (_a = resultData200_2.return)) _a.call(resultData200_2);
                            }
                            finally { if (e_12) throw e_12.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        BenhvienServiceProxy.prototype.loaibenhvienbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/{id}/loaibenhvienbyid';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processLoaibenhvienbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processLoaibenhvienbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processLoaibenhvienbyid = function (response) {
            var e_13, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_13_1) { e_13 = { error: e_13_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_13) throw e_13.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        BenhvienServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processGetbyid = function (response) {
            var e_14, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_14_1) { e_14 = { error: e_14_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_14) throw e_14.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = BenhVienDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        BenhvienServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processCreate = function (response) {
            var e_15, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_15_1) { e_15 = { error: e_15_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_15) throw e_15.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = BenhVienDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        BenhvienServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processUpdate = function (response) {
            var e_16, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_16_1) { e_16 = { error: e_16_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_16) throw e_16.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = BenhVienDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        BenhvienServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/benhvien/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        BenhvienServiceProxy.prototype.processRemovebyid = function (response) {
            var e_17, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_17_1) { e_17 = { error: e_17_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_17) throw e_17.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return BenhvienServiceProxy;
    }());
    BenhvienServiceProxy.ɵfac = function BenhvienServiceProxy_Factory(t) { return new (t || BenhvienServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    BenhvienServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: BenhvienServiceProxy, factory: BenhvienServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(BenhvienServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhdichvusokhamServiceProxy = /** @class */ (function () {
        function CauhinhdichvusokhamServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhdichvusokhamServiceProxy.prototype.createordelete = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/createordelete';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreateordelete(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreateordelete(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhdichvusokhamServiceProxy.prototype.processCreateordelete = function (response) {
            var e_18, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_18_1) { e_18 = { error: e_18_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_18) throw e_18.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhdichvusokhamServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhdichvusokhamServiceProxy.prototype.processGetlist = function (response) {
            var e_19, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_19_1) { e_19 = { error: e_19_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_19) throw e_19.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDichVuSoKhamOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhdichvusokhamServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhdichvusokhamServiceProxy.prototype.processGetbyid = function (response) {
            var e_20, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_20_1) { e_20 = { error: e_20_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_20) throw e_20.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuSoKhamOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhdichvusokhamServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhdichvusokhamServiceProxy.prototype.processCreate = function (response) {
            var e_21, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_21_1) { e_21 = { error: e_21_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_21) throw e_21.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuSoKhamOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhdichvusokhamServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhdichvusokhamServiceProxy.prototype.processUpdate = function (response) {
            var e_22, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_22_1) { e_22 = { error: e_22_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_22) throw e_22.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuSoKhamOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhdichvusokhamServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhdichvusokham/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhdichvusokhamServiceProxy.prototype.processRemovebyid = function (response) {
            var e_23, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_23_1) { e_23 = { error: e_23_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_23) throw e_23.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhdichvusokhamServiceProxy;
    }());
    CauhinhdichvusokhamServiceProxy.ɵfac = function CauhinhdichvusokhamServiceProxy_Factory(t) { return new (t || CauhinhdichvusokhamServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhdichvusokhamServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhdichvusokhamServiceProxy, factory: CauhinhdichvusokhamServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhdichvusokhamServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhdoituongkhoduocServiceProxy = /** @class */ (function () {
        function CauhinhdoituongkhoduocServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param khoId (optional)
         * @return Success
         */
        CauhinhdoituongkhoduocServiceProxy.prototype.getkhodoituong = function (khoId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhdoituongkhoduoc/getkhodoituong?';
            if (khoId === null)
                throw new Error('The parameter \'khoId\' cannot be null.');
            else if (khoId !== undefined)
                url_ += 'khoId=' + encodeURIComponent('' + khoId) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetkhodoituong(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetkhodoituong(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhdoituongkhoduocServiceProxy.prototype.processGetkhodoituong = function (response) {
            var e_24, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_24_1) { e_24 = { error: e_24_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_24) throw e_24.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = KhoDoiTuongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhdoituongkhoduocServiceProxy.prototype.luucauhinh = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhdoituongkhoduoc/luucauhinh';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processLuucauhinh(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processLuucauhinh(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhdoituongkhoduocServiceProxy.prototype.processLuucauhinh = function (response) {
            var e_25, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_25_1) { e_25 = { error: e_25_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_25) throw e_25.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhdoituongkhoduocServiceProxy;
    }());
    CauhinhdoituongkhoduocServiceProxy.ɵfac = function CauhinhdoituongkhoduocServiceProxy_Factory(t) { return new (t || CauhinhdoituongkhoduocServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhdoituongkhoduocServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhdoituongkhoduocServiceProxy, factory: CauhinhdoituongkhoduocServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhdoituongkhoduocServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhgiadichvuServiceProxy = /** @class */ (function () {
        function CauhinhgiadichvuServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processGetlist = function (response) {
            var e_26, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_26_1) { e_26 = { error: e_26_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_26) throw e_26.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.gettreeview = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/gettreeview';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGettreeview(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGettreeview(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processGettreeview = function (response) {
            var e_27, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_27_1) { e_27 = { error: e_27_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_27) throw e_27.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.updateserviceprices = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/updateserviceprices';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdateserviceprices(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdateserviceprices(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processUpdateserviceprices = function (response) {
            var e_28, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_28_1) { e_28 = { error: e_28_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_28) throw e_28.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.releaseserviceprices = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/releaseserviceprices';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processReleaseserviceprices(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processReleaseserviceprices(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processReleaseserviceprices = function (response) {
            var e_29, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_29_1) { e_29 = { error: e_29_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_29) throw e_29.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ItemExistsPagedResultDtoOfDichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.releaseservicepricestoall = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/releaseservicepricestoall';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processReleaseservicepricestoall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processReleaseservicepricestoall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processReleaseservicepricestoall = function (response) {
            var e_30, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_30_1) { e_30 = { error: e_30_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_30) throw e_30.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ItemExistsPagedResultDtoOfDichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.pricelistexpires = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/pricelistexpires';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processPricelistexpires(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processPricelistexpires(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processPricelistexpires = function (response) {
            var e_31, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_31_1) { e_31 = { error: e_31_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_31) throw e_31.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.updateeffectivedate = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/updateeffectivedate';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdateeffectivedate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdateeffectivedate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processUpdateeffectivedate = function (response) {
            var e_32, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_32_1) { e_32 = { error: e_32_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_32) throw e_32.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.updateeffectivedatetoall = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/updateeffectivedatetoall';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdateeffectivedatetoall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdateeffectivedatetoall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processUpdateeffectivedatetoall = function (response) {
            var e_33, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_33_1) { e_33 = { error: e_33_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_33) throw e_33.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.importservice = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/importservice';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processImportservice(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processImportservice(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processImportservice = function (response) {
            var e_34, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_34_1) { e_34 = { error: e_34_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_34) throw e_34.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.validateexistsimportservice = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/validateexistsimportservice';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processValidateexistsimportservice(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processValidateexistsimportservice(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processValidateexistsimportservice = function (response) {
            var e_35, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_35_1) { e_35 = { error: e_35_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_35) throw e_35.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_36, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_3 = __values(resultData200), resultData200_3_1 = resultData200_3.next(); !resultData200_3_1.done; resultData200_3_1 = resultData200_3.next()) {
                                var item = resultData200_3_1.value;
                                result200.push(ImportDichVuResultDto.fromJS(item));
                            }
                        }
                        catch (e_36_1) { e_36 = { error: e_36_1 }; }
                        finally {
                            try {
                                if (resultData200_3_1 && !resultData200_3_1.done && (_a = resultData200_3.return)) _a.call(resultData200_3);
                            }
                            finally { if (e_36) throw e_36.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.exportexceldichvudangsoanthao = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/exportexceldichvudangsoanthao';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processExportexceldichvudangsoanthao(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processExportexceldichvudangsoanthao(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processExportexceldichvudangsoanthao = function (response) {
            var e_37, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_37_1) { e_37 = { error: e_37_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_37) throw e_37.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FileDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.exportexceldichvudangsoanthaosample = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/exportexceldichvudangsoanthaosample';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processExportexceldichvudangsoanthaosample(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processExportexceldichvudangsoanthaosample(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processExportexceldichvudangsoanthaosample = function (response) {
            var e_38, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_38_1) { e_38 = { error: e_38_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_38) throw e_38.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FileDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processGetbyid = function (response) {
            var e_39, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_39_1) { e_39 = { error: e_39_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_39) throw e_39.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processCreate = function (response) {
            var e_40, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_40_1) { e_40 = { error: e_40_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_40) throw e_40.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processUpdate = function (response) {
            var e_41, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_41_1) { e_41 = { error: e_41_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_41) throw e_41.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhgiadichvuServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhgiadichvu/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhgiadichvuServiceProxy.prototype.processRemovebyid = function (response) {
            var e_42, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_42_1) { e_42 = { error: e_42_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_42) throw e_42.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhgiadichvuServiceProxy;
    }());
    CauhinhgiadichvuServiceProxy.ɵfac = function CauhinhgiadichvuServiceProxy_Factory(t) { return new (t || CauhinhgiadichvuServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhgiadichvuServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhgiadichvuServiceProxy, factory: CauhinhgiadichvuServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhgiadichvuServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhmautinnhanServiceProxy = /** @class */ (function () {
        function CauhinhmautinnhanServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        CauhinhmautinnhanServiceProxy.prototype.getall = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/getall';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhmautinnhanServiceProxy.prototype.processGetall = function (response) {
            var e_43, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_43_1) { e_43 = { error: e_43_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_43) throw e_43.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_44, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_4 = __values(resultData200), resultData200_4_1 = resultData200_4.next(); !resultData200_4_1.done; resultData200_4_1 = resultData200_4.next()) {
                                var item = resultData200_4_1.value;
                                result200.push(CauHinhHeThongDto.fromJS(item));
                            }
                        }
                        catch (e_44_1) { e_44 = { error: e_44_1 }; }
                        finally {
                            try {
                                if (resultData200_4_1 && !resultData200_4_1.done && (_a = resultData200_4.return)) _a.call(resultData200_4);
                            }
                            finally { if (e_44) throw e_44.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhmautinnhanServiceProxy.prototype.saveurl = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/saveurl';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSaveurl(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSaveurl(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhmautinnhanServiceProxy.prototype.processSaveurl = function (response) {
            var e_45, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_45_1) { e_45 = { error: e_45_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_45) throw e_45.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhmautinnhanServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhmautinnhanServiceProxy.prototype.processGetlist = function (response) {
            var e_46, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_46_1) { e_46 = { error: e_46_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_46) throw e_46.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhmautinnhanServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhmautinnhanServiceProxy.prototype.processGetbyid = function (response) {
            var e_47, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_47_1) { e_47 = { error: e_47_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_47) throw e_47.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhmautinnhanServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhmautinnhanServiceProxy.prototype.processCreate = function (response) {
            var e_48, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_48_1) { e_48 = { error: e_48_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_48) throw e_48.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhmautinnhanServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhmautinnhanServiceProxy.prototype.processUpdate = function (response) {
            var e_49, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_49_1) { e_49 = { error: e_49_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_49) throw e_49.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhmautinnhanServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhmautinnhan/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhmautinnhanServiceProxy.prototype.processRemovebyid = function (response) {
            var e_50, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_50_1) { e_50 = { error: e_50_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_50) throw e_50.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhmautinnhanServiceProxy;
    }());
    CauhinhmautinnhanServiceProxy.ɵfac = function CauhinhmautinnhanServiceProxy_Factory(t) { return new (t || CauhinhmautinnhanServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhmautinnhanServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhmautinnhanServiceProxy, factory: CauhinhmautinnhanServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhmautinnhanServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhphongbandichvuServiceProxy = /** @class */ (function () {
        function CauhinhphongbandichvuServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhphongbandichvuServiceProxy.prototype.createordelete = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/createordelete';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreateordelete(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreateordelete(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhphongbandichvuServiceProxy.prototype.processCreateordelete = function (response) {
            var e_51, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_51_1) { e_51 = { error: e_51_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_51) throw e_51.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhphongbandichvuServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhphongbandichvuServiceProxy.prototype.processGetlist = function (response) {
            var e_52, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_52_1) { e_52 = { error: e_52_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_52) throw e_52.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfPhongBanDichVuOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhphongbandichvuServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhphongbandichvuServiceProxy.prototype.processGetbyid = function (response) {
            var e_53, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_53_1) { e_53 = { error: e_53_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_53) throw e_53.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhongBanDichVuOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhphongbandichvuServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhphongbandichvuServiceProxy.prototype.processCreate = function (response) {
            var e_54, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_54_1) { e_54 = { error: e_54_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_54) throw e_54.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhongBanDichVuOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhphongbandichvuServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhphongbandichvuServiceProxy.prototype.processUpdate = function (response) {
            var e_55, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_55_1) { e_55 = { error: e_55_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_55) throw e_55.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhongBanDichVuOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhphongbandichvuServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhphongbandichvu/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhphongbandichvuServiceProxy.prototype.processRemovebyid = function (response) {
            var e_56, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_56_1) { e_56 = { error: e_56_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_56) throw e_56.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhphongbandichvuServiceProxy;
    }());
    CauhinhphongbandichvuServiceProxy.ɵfac = function CauhinhphongbandichvuServiceProxy_Factory(t) { return new (t || CauhinhphongbandichvuServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhphongbandichvuServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhphongbandichvuServiceProxy, factory: CauhinhphongbandichvuServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhphongbandichvuServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhquanlyhosobccsServiceProxy = /** @class */ (function () {
        function CauhinhquanlyhosobccsServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        CauhinhquanlyhosobccsServiceProxy.prototype.getall = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/getall';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhquanlyhosobccsServiceProxy.prototype.processGetall = function (response) {
            var e_57, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_57_1) { e_57 = { error: e_57_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_57) throw e_57.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_58, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_5 = __values(resultData200), resultData200_5_1 = resultData200_5.next(); !resultData200_5_1.done; resultData200_5_1 = resultData200_5.next()) {
                                var item = resultData200_5_1.value;
                                result200.push(CauHinhHeThongDto.fromJS(item));
                            }
                        }
                        catch (e_58_1) { e_58 = { error: e_58_1 }; }
                        finally {
                            try {
                                if (resultData200_5_1 && !resultData200_5_1.done && (_a = resultData200_5.return)) _a.call(resultData200_5);
                            }
                            finally { if (e_58) throw e_58.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhquanlyhosobccsServiceProxy.prototype.saveurl = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/saveurl';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSaveurl(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSaveurl(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhquanlyhosobccsServiceProxy.prototype.processSaveurl = function (response) {
            var e_59, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_59_1) { e_59 = { error: e_59_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_59) throw e_59.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhquanlyhosobccsServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhquanlyhosobccsServiceProxy.prototype.processGetlist = function (response) {
            var e_60, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_60_1) { e_60 = { error: e_60_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_60) throw e_60.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhquanlyhosobccsServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhquanlyhosobccsServiceProxy.prototype.processGetbyid = function (response) {
            var e_61, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_61_1) { e_61 = { error: e_61_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_61) throw e_61.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhquanlyhosobccsServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhquanlyhosobccsServiceProxy.prototype.processCreate = function (response) {
            var e_62, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_62_1) { e_62 = { error: e_62_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_62) throw e_62.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhquanlyhosobccsServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhquanlyhosobccsServiceProxy.prototype.processUpdate = function (response) {
            var e_63, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_63_1) { e_63 = { error: e_63_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_63) throw e_63.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhquanlyhosobccsServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhquanlyhosobccs/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhquanlyhosobccsServiceProxy.prototype.processRemovebyid = function (response) {
            var e_64, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_64_1) { e_64 = { error: e_64_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_64) throw e_64.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhquanlyhosobccsServiceProxy;
    }());
    CauhinhquanlyhosobccsServiceProxy.ɵfac = function CauhinhquanlyhosobccsServiceProxy_Factory(t) { return new (t || CauhinhquanlyhosobccsServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhquanlyhosobccsServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhquanlyhosobccsServiceProxy, factory: CauhinhquanlyhosobccsServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhquanlyhosobccsServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhtaikhoanbulksmsServiceProxy = /** @class */ (function () {
        function CauhinhtaikhoanbulksmsServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        CauhinhtaikhoanbulksmsServiceProxy.prototype.getall = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/getall';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanbulksmsServiceProxy.prototype.processGetall = function (response) {
            var e_65, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_65_1) { e_65 = { error: e_65_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_65) throw e_65.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_66, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_6 = __values(resultData200), resultData200_6_1 = resultData200_6.next(); !resultData200_6_1.done; resultData200_6_1 = resultData200_6.next()) {
                                var item = resultData200_6_1.value;
                                result200.push(CauHinhHeThongDto.fromJS(item));
                            }
                        }
                        catch (e_66_1) { e_66 = { error: e_66_1 }; }
                        finally {
                            try {
                                if (resultData200_6_1 && !resultData200_6_1.done && (_a = resultData200_6.return)) _a.call(resultData200_6);
                            }
                            finally { if (e_66) throw e_66.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanbulksmsServiceProxy.prototype.saveurl = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/saveurl';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSaveurl(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSaveurl(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanbulksmsServiceProxy.prototype.processSaveurl = function (response) {
            var e_67, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_67_1) { e_67 = { error: e_67_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_67) throw e_67.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanbulksmsServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanbulksmsServiceProxy.prototype.processGetlist = function (response) {
            var e_68, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_68_1) { e_68 = { error: e_68_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_68) throw e_68.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoanbulksmsServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanbulksmsServiceProxy.prototype.processGetbyid = function (response) {
            var e_69, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_69_1) { e_69 = { error: e_69_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_69) throw e_69.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanbulksmsServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanbulksmsServiceProxy.prototype.processCreate = function (response) {
            var e_70, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_70_1) { e_70 = { error: e_70_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_70) throw e_70.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanbulksmsServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanbulksmsServiceProxy.prototype.processUpdate = function (response) {
            var e_71, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_71_1) { e_71 = { error: e_71_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_71) throw e_71.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoanbulksmsServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanbulksms/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanbulksmsServiceProxy.prototype.processRemovebyid = function (response) {
            var e_72, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_72_1) { e_72 = { error: e_72_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_72) throw e_72.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhtaikhoanbulksmsServiceProxy;
    }());
    CauhinhtaikhoanbulksmsServiceProxy.ɵfac = function CauhinhtaikhoanbulksmsServiceProxy_Factory(t) { return new (t || CauhinhtaikhoanbulksmsServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhtaikhoanbulksmsServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhtaikhoanbulksmsServiceProxy, factory: CauhinhtaikhoanbulksmsServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhtaikhoanbulksmsServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhtaikhoandichvuthecaoServiceProxy = /** @class */ (function () {
        function CauhinhtaikhoandichvuthecaoServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.getall = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/getall';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.processGetall = function (response) {
            var e_73, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_73_1) { e_73 = { error: e_73_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_73) throw e_73.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_74, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_7 = __values(resultData200), resultData200_7_1 = resultData200_7.next(); !resultData200_7_1.done; resultData200_7_1 = resultData200_7.next()) {
                                var item = resultData200_7_1.value;
                                result200.push(CauHinhHeThongDto.fromJS(item));
                            }
                        }
                        catch (e_74_1) { e_74 = { error: e_74_1 }; }
                        finally {
                            try {
                                if (resultData200_7_1 && !resultData200_7_1.done && (_a = resultData200_7.return)) _a.call(resultData200_7);
                            }
                            finally { if (e_74) throw e_74.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.saveurl = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/saveurl';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSaveurl(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSaveurl(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.processSaveurl = function (response) {
            var e_75, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_75_1) { e_75 = { error: e_75_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_75) throw e_75.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.processGetlist = function (response) {
            var e_76, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_76_1) { e_76 = { error: e_76_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_76) throw e_76.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.processGetbyid = function (response) {
            var e_77, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_77_1) { e_77 = { error: e_77_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_77) throw e_77.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.processCreate = function (response) {
            var e_78, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_78_1) { e_78 = { error: e_78_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_78) throw e_78.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.processUpdate = function (response) {
            var e_79, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_79_1) { e_79 = { error: e_79_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_79) throw e_79.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoandichvuthecao/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoandichvuthecaoServiceProxy.prototype.processRemovebyid = function (response) {
            var e_80, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_80_1) { e_80 = { error: e_80_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_80) throw e_80.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhtaikhoandichvuthecaoServiceProxy;
    }());
    CauhinhtaikhoandichvuthecaoServiceProxy.ɵfac = function CauhinhtaikhoandichvuthecaoServiceProxy_Factory(t) { return new (t || CauhinhtaikhoandichvuthecaoServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhtaikhoandichvuthecaoServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhtaikhoandichvuthecaoServiceProxy, factory: CauhinhtaikhoandichvuthecaoServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhtaikhoandichvuthecaoServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhtaikhoanlienthongServiceProxy = /** @class */ (function () {
        function CauhinhtaikhoanlienthongServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processGetbyid = function (response) {
            var e_81, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_81_1) { e_81 = { error: e_81_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_81) throw e_81.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhTaiKhoanLienThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.getall = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/getall';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processGetall = function (response) {
            var e_82, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_82_1) { e_82 = { error: e_82_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_82) throw e_82.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_83, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_8 = __values(resultData200), resultData200_8_1 = resultData200_8.next(); !resultData200_8_1.done; resultData200_8_1 = resultData200_8.next()) {
                                var item = resultData200_8_1.value;
                                result200.push(CauHinhTaiKhoanLienThongDto.fromJS(item));
                            }
                        }
                        catch (e_83_1) { e_83 = { error: e_83_1 }; }
                        finally {
                            try {
                                if (resultData200_8_1 && !resultData200_8_1.done && (_a = resultData200_8.return)) _a.call(resultData200_8);
                            }
                            finally { if (e_83) throw e_83.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.getbyloaitaikhoan = function (loaiTaiKhoan) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/getbyloaitaikhoan/{loaiTaiKhoan}';
            if (loaiTaiKhoan === undefined || loaiTaiKhoan === null)
                throw new Error('The parameter \'loaiTaiKhoan\' must be defined.');
            url_ = url_.replace('{loaiTaiKhoan}', encodeURIComponent('' + loaiTaiKhoan));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyloaitaikhoan(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyloaitaikhoan(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processGetbyloaitaikhoan = function (response) {
            var e_84, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_84_1) { e_84 = { error: e_84_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_84) throw e_84.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhTaiKhoanLienThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processCreate = function (response) {
            var e_85, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_85_1) { e_85 = { error: e_85_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_85) throw e_85.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhTaiKhoanLienThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.test = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/test';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processTest(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processTest(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processTest = function (response) {
            var e_86, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_86_1) { e_86 = { error: e_86_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_86) throw e_86.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.saveurl = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/saveurl';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSaveurl(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSaveurl(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processSaveurl = function (response) {
            var e_87, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_87_1) { e_87 = { error: e_87_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_87) throw e_87.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processGetlist = function (response) {
            var e_88, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_88_1) { e_88 = { error: e_88_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_88) throw e_88.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCauHinhTaiKhoanLienThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processUpdate = function (response) {
            var e_89, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_89_1) { e_89 = { error: e_89_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_89) throw e_89.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhTaiKhoanLienThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoanlienthongServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanlienthong/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanlienthongServiceProxy.prototype.processRemovebyid = function (response) {
            var e_90, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_90_1) { e_90 = { error: e_90_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_90) throw e_90.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhtaikhoanlienthongServiceProxy;
    }());
    CauhinhtaikhoanlienthongServiceProxy.ɵfac = function CauhinhtaikhoanlienthongServiceProxy_Factory(t) { return new (t || CauhinhtaikhoanlienthongServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhtaikhoanlienthongServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhtaikhoanlienthongServiceProxy, factory: CauhinhtaikhoanlienthongServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhtaikhoanlienthongServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhtaikhoanviettelpayServiceProxy = /** @class */ (function () {
        function CauhinhtaikhoanviettelpayServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        CauhinhtaikhoanviettelpayServiceProxy.prototype.getall = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/getall';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanviettelpayServiceProxy.prototype.processGetall = function (response) {
            var e_91, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_91_1) { e_91 = { error: e_91_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_91) throw e_91.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_92, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_9 = __values(resultData200), resultData200_9_1 = resultData200_9.next(); !resultData200_9_1.done; resultData200_9_1 = resultData200_9.next()) {
                                var item = resultData200_9_1.value;
                                result200.push(CauHinhHeThongDto.fromJS(item));
                            }
                        }
                        catch (e_92_1) { e_92 = { error: e_92_1 }; }
                        finally {
                            try {
                                if (resultData200_9_1 && !resultData200_9_1.done && (_a = resultData200_9.return)) _a.call(resultData200_9);
                            }
                            finally { if (e_92) throw e_92.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanviettelpayServiceProxy.prototype.saveurl = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/saveurl';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSaveurl(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSaveurl(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanviettelpayServiceProxy.prototype.processSaveurl = function (response) {
            var e_93, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_93_1) { e_93 = { error: e_93_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_93) throw e_93.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanviettelpayServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanviettelpayServiceProxy.prototype.processGetlist = function (response) {
            var e_94, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_94_1) { e_94 = { error: e_94_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_94) throw e_94.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoanviettelpayServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanviettelpayServiceProxy.prototype.processGetbyid = function (response) {
            var e_95, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_95_1) { e_95 = { error: e_95_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_95) throw e_95.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanviettelpayServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanviettelpayServiceProxy.prototype.processCreate = function (response) {
            var e_96, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_96_1) { e_96 = { error: e_96_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_96) throw e_96.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtaikhoanviettelpayServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanviettelpayServiceProxy.prototype.processUpdate = function (response) {
            var e_97, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_97_1) { e_97 = { error: e_97_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_97) throw e_97.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtaikhoanviettelpayServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtaikhoanviettelpay/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtaikhoanviettelpayServiceProxy.prototype.processRemovebyid = function (response) {
            var e_98, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_98_1) { e_98 = { error: e_98_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_98) throw e_98.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhtaikhoanviettelpayServiceProxy;
    }());
    CauhinhtaikhoanviettelpayServiceProxy.ɵfac = function CauhinhtaikhoanviettelpayServiceProxy_Factory(t) { return new (t || CauhinhtaikhoanviettelpayServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhtaikhoanviettelpayServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhtaikhoanviettelpayServiceProxy, factory: CauhinhtaikhoanviettelpayServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhtaikhoanviettelpayServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CauhinhtinnhandichvuServiceProxy = /** @class */ (function () {
        function CauhinhtinnhandichvuServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        CauhinhtinnhandichvuServiceProxy.prototype.getall = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/getall';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetall(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetall(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtinnhandichvuServiceProxy.prototype.processGetall = function (response) {
            var e_99, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_99_1) { e_99 = { error: e_99_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_99) throw e_99.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_100, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_10 = __values(resultData200), resultData200_10_1 = resultData200_10.next(); !resultData200_10_1.done; resultData200_10_1 = resultData200_10.next()) {
                                var item = resultData200_10_1.value;
                                result200.push(CauHinhHeThongDto.fromJS(item));
                            }
                        }
                        catch (e_100_1) { e_100 = { error: e_100_1 }; }
                        finally {
                            try {
                                if (resultData200_10_1 && !resultData200_10_1.done && (_a = resultData200_10.return)) _a.call(resultData200_10);
                            }
                            finally { if (e_100) throw e_100.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtinnhandichvuServiceProxy.prototype.saveurl = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/saveurl';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSaveurl(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSaveurl(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtinnhandichvuServiceProxy.prototype.processSaveurl = function (response) {
            var e_101, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_101_1) { e_101 = { error: e_101_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_101) throw e_101.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtinnhandichvuServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtinnhandichvuServiceProxy.prototype.processGetlist = function (response) {
            var e_102, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_102_1) { e_102 = { error: e_102_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_102) throw e_102.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfCauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtinnhandichvuServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtinnhandichvuServiceProxy.prototype.processGetbyid = function (response) {
            var e_103, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_103_1) { e_103 = { error: e_103_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_103) throw e_103.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtinnhandichvuServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtinnhandichvuServiceProxy.prototype.processCreate = function (response) {
            var e_104, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_104_1) { e_104 = { error: e_104_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_104) throw e_104.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CauhinhtinnhandichvuServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtinnhandichvuServiceProxy.prototype.processUpdate = function (response) {
            var e_105, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_105_1) { e_105 = { error: e_105_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_105) throw e_105.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CauHinhHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        CauhinhtinnhandichvuServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/cauhinhtinnhandichvu/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CauhinhtinnhandichvuServiceProxy.prototype.processRemovebyid = function (response) {
            var e_106, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_106_1) { e_106 = { error: e_106_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_106) throw e_106.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CauhinhtinnhandichvuServiceProxy;
    }());
    CauhinhtinnhandichvuServiceProxy.ɵfac = function CauhinhtinnhandichvuServiceProxy_Factory(t) { return new (t || CauhinhtinnhandichvuServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CauhinhtinnhandichvuServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CauhinhtinnhandichvuServiceProxy, factory: CauhinhtinnhandichvuServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CauhinhtinnhandichvuServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var ChuongtrinhServiceProxy = /** @class */ (function () {
        function ChuongtrinhServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        ChuongtrinhServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ChuongtrinhServiceProxy.prototype.processGetlist = function (response) {
            var e_107, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_107_1) { e_107 = { error: e_107_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_107) throw e_107.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfChuongTrinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ChuongtrinhServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ChuongtrinhServiceProxy.prototype.processGetbyid = function (response) {
            var e_108, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_108_1) { e_108 = { error: e_108_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_108) throw e_108.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ChuongTrinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ChuongtrinhServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ChuongtrinhServiceProxy.prototype.processCreate = function (response) {
            var e_109, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_109_1) { e_109 = { error: e_109_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_109) throw e_109.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ChuongTrinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ChuongtrinhServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ChuongtrinhServiceProxy.prototype.processUpdate = function (response) {
            var e_110, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_110_1) { e_110 = { error: e_110_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_110) throw e_110.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ChuongTrinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ChuongtrinhServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/chuongtrinh/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ChuongtrinhServiceProxy.prototype.processRemovebyid = function (response) {
            var e_111, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_111_1) { e_111 = { error: e_111_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_111) throw e_111.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return ChuongtrinhServiceProxy;
    }());
    ChuongtrinhServiceProxy.ɵfac = function ChuongtrinhServiceProxy_Factory(t) { return new (t || ChuongtrinhServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    ChuongtrinhServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: ChuongtrinhServiceProxy, factory: ChuongtrinhServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(ChuongtrinhServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var CombodataServiceProxy = /** @class */ (function () {
        function CombodataServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        CombodataServiceProxy.prototype.getfromdatabase = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/combodata/getfromdatabase';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetfromdatabase(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetfromdatabase(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CombodataServiceProxy.prototype.processGetfromdatabase = function (response) {
            var e_112, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_112_1) { e_112 = { error: e_112_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_112) throw e_112.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_113, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_11 = __values(resultData200), resultData200_11_1 = resultData200_11.next(); !resultData200_11_1.done; resultData200_11_1 = resultData200_11.next()) {
                                var item = resultData200_11_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_113_1) { e_113 = { error: e_113_1 }; }
                        finally {
                            try {
                                if (resultData200_11_1 && !resultData200_11_1.done && (_a = resultData200_11.return)) _a.call(resultData200_11);
                            }
                            finally { if (e_113) throw e_113.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        CombodataServiceProxy.prototype.getfromdatabasetreeview = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/combodata/getfromdatabasetreeview';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetfromdatabasetreeview(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetfromdatabasetreeview(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CombodataServiceProxy.prototype.processGetfromdatabasetreeview = function (response) {
            var e_114, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_114_1) { e_114 = { error: e_114_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_114) throw e_114.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param type (optional)
         * @return Success
         */
        CombodataServiceProxy.prototype.appenum = function (type) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/combodata/appenum?';
            if (type !== undefined)
                url_ += 'type=' + encodeURIComponent('' + type) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processAppenum(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processAppenum(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        CombodataServiceProxy.prototype.processAppenum = function (response) {
            var e_115, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_115_1) { e_115 = { error: e_115_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_115) throw e_115.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_116, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_12 = __values(resultData200), resultData200_12_1 = resultData200_12.next(); !resultData200_12_1.done; resultData200_12_1 = resultData200_12.next()) {
                                var item = resultData200_12_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_116_1) { e_116 = { error: e_116_1 }; }
                        finally {
                            try {
                                if (resultData200_12_1 && !resultData200_12_1.done && (_a = resultData200_12.return)) _a.call(resultData200_12);
                            }
                            finally { if (e_116) throw e_116.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return CombodataServiceProxy;
    }());
    CombodataServiceProxy.ɵfac = function CombodataServiceProxy_Factory(t) { return new (t || CombodataServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    CombodataServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: CombodataServiceProxy, factory: CombodataServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(CombodataServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var DichvukhamchuabenhServiceProxy = /** @class */ (function () {
        function DichvukhamchuabenhServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        DichvukhamchuabenhServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DichvukhamchuabenhServiceProxy.prototype.processGetlist = function (response) {
            var e_117, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_117_1) { e_117 = { error: e_117_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_117) throw e_117.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DichvukhamchuabenhServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DichvukhamchuabenhServiceProxy.prototype.processGetbyid = function (response) {
            var e_118, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_118_1) { e_118 = { error: e_118_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_118) throw e_118.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DichvukhamchuabenhServiceProxy.prototype.gettreeview = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/gettreeview';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGettreeview(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGettreeview(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DichvukhamchuabenhServiceProxy.prototype.processGettreeview = function (response) {
            var e_119, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_119_1) { e_119 = { error: e_119_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_119) throw e_119.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DichvukhamchuabenhServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DichvukhamchuabenhServiceProxy.prototype.processCreate = function (response) {
            var e_120, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_120_1) { e_120 = { error: e_120_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_120) throw e_120.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DichvukhamchuabenhServiceProxy.prototype.createbatch = function (ids) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/createbatch/{ids}';
            if (ids === undefined || ids === null)
                throw new Error('The parameter \'ids\' must be defined.');
            url_ = url_.replace('{ids}', encodeURIComponent('' + ids));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreatebatch(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreatebatch(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DichvukhamchuabenhServiceProxy.prototype.processCreatebatch = function (response) {
            var e_121, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_121_1) { e_121 = { error: e_121_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_121) throw e_121.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DichvukhamchuabenhServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DichvukhamchuabenhServiceProxy.prototype.processUpdate = function (response) {
            var e_122, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_122_1) { e_122 = { error: e_122_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_122) throw e_122.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DichVuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DichvukhamchuabenhServiceProxy.prototype.export = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/export';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processExport(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processExport(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DichvukhamchuabenhServiceProxy.prototype.processExport = function (response) {
            var e_123, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_123_1) { e_123 = { error: e_123_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_123) throw e_123.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FileDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DichvukhamchuabenhServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/dichvukhamchuabenh/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DichvukhamchuabenhServiceProxy.prototype.processRemovebyid = function (response) {
            var e_124, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_124_1) { e_124 = { error: e_124_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_124) throw e_124.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return DichvukhamchuabenhServiceProxy;
    }());
    DichvukhamchuabenhServiceProxy.ɵfac = function DichvukhamchuabenhServiceProxy_Factory(t) { return new (t || DichvukhamchuabenhServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    DichvukhamchuabenhServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DichvukhamchuabenhServiceProxy, factory: DichvukhamchuabenhServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DichvukhamchuabenhServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var DoituongServiceProxy = /** @class */ (function () {
        function DoituongServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        DoituongServiceProxy.prototype.treedatadoituong = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituong/treedatadoituong';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processTreedatadoituong(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processTreedatadoituong(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongServiceProxy.prototype.processTreedatadoituong = function (response) {
            var e_125, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_125_1) { e_125 = { error: e_125_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_125) throw e_125.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_126, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_13 = __values(resultData200), resultData200_13_1 = resultData200_13.next(); !resultData200_13_1.done; resultData200_13_1 = resultData200_13.next()) {
                                var item = resultData200_13_1.value;
                                result200.push(DoiTuongTreeDto.fromJS(item));
                            }
                        }
                        catch (e_126_1) { e_126 = { error: e_126_1 }; }
                        finally {
                            try {
                                if (resultData200_13_1 && !resultData200_13_1.done && (_a = resultData200_13.return)) _a.call(resultData200_13);
                            }
                            finally { if (e_126) throw e_126.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituong/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongServiceProxy.prototype.processCreate = function (response) {
            var e_127, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_127_1) { e_127 = { error: e_127_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_127) throw e_127.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituong/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongServiceProxy.prototype.processUpdate = function (response) {
            var e_128, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_128_1) { e_128 = { error: e_128_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_128) throw e_128.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituong/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongServiceProxy.prototype.processGetlist = function (response) {
            var e_129, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_129_1) { e_129 = { error: e_129_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_129) throw e_129.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDoiTuongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DoituongServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituong/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongServiceProxy.prototype.processGetbyid = function (response) {
            var e_130, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_130_1) { e_130 = { error: e_130_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_130) throw e_130.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DoituongServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituong/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongServiceProxy.prototype.processRemovebyid = function (response) {
            var e_131, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_131_1) { e_131 = { error: e_131_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_131) throw e_131.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return DoituongServiceProxy;
    }());
    DoituongServiceProxy.ɵfac = function DoituongServiceProxy_Factory(t) { return new (t || DoituongServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    DoituongServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DoituongServiceProxy, factory: DoituongServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DoituongServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var DoituongkhoduocnoitruServiceProxy = /** @class */ (function () {
        function DoituongkhoduocnoitruServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongkhoduocnoitruServiceProxy.prototype.gettreedatadoituongkhoduocnoitru = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/gettreedatadoituongkhoduocnoitru';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGettreedatadoituongkhoduocnoitru(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGettreedatadoituongkhoduocnoitru(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongkhoduocnoitruServiceProxy.prototype.processGettreedatadoituongkhoduocnoitru = function (response) {
            var e_132, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_132_1) { e_132 = { error: e_132_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_132) throw e_132.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_133, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_14 = __values(resultData200), resultData200_14_1 = resultData200_14.next(); !resultData200_14_1.done; resultData200_14_1 = resultData200_14.next()) {
                                var item = resultData200_14_1.value;
                                result200.push(KhoDuocTreeDto.fromJS(item));
                            }
                        }
                        catch (e_133_1) { e_133 = { error: e_133_1 }; }
                        finally {
                            try {
                                if (resultData200_14_1 && !resultData200_14_1.done && (_a = resultData200_14.return)) _a.call(resultData200_14);
                            }
                            finally { if (e_133) throw e_133.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongkhoduocnoitruServiceProxy.prototype.createorupdatedoituongnoitru = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/createorupdatedoituongnoitru';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreateorupdatedoituongnoitru(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreateorupdatedoituongnoitru(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongkhoduocnoitruServiceProxy.prototype.processCreateorupdatedoituongnoitru = function (response) {
            var e_134, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_134_1) { e_134 = { error: e_134_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_134) throw e_134.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongkhoduocnoitruServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongkhoduocnoitruServiceProxy.prototype.processGetlist = function (response) {
            var e_135, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_135_1) { e_135 = { error: e_135_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_135) throw e_135.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDoiTuongKhoDuocNoiTruDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DoituongkhoduocnoitruServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongkhoduocnoitruServiceProxy.prototype.processGetbyid = function (response) {
            var e_136, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_136_1) { e_136 = { error: e_136_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_136) throw e_136.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongKhoDuocNoiTruDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongkhoduocnoitruServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongkhoduocnoitruServiceProxy.prototype.processCreate = function (response) {
            var e_137, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_137_1) { e_137 = { error: e_137_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_137) throw e_137.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongKhoDuocNoiTruDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongkhoduocnoitruServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongkhoduocnoitruServiceProxy.prototype.processUpdate = function (response) {
            var e_138, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_138_1) { e_138 = { error: e_138_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_138) throw e_138.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongKhoDuocNoiTruDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DoituongkhoduocnoitruServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongkhoduocnoitru/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongkhoduocnoitruServiceProxy.prototype.processRemovebyid = function (response) {
            var e_139, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_139_1) { e_139 = { error: e_139_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_139) throw e_139.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return DoituongkhoduocnoitruServiceProxy;
    }());
    DoituongkhoduocnoitruServiceProxy.ɵfac = function DoituongkhoduocnoitruServiceProxy_Factory(t) { return new (t || DoituongkhoduocnoitruServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    DoituongkhoduocnoitruServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DoituongkhoduocnoitruServiceProxy, factory: DoituongkhoduocnoitruServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DoituongkhoduocnoitruServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var DoituongloaigiaServiceProxy = /** @class */ (function () {
        function DoituongloaigiaServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongloaigiaServiceProxy.prototype.gettreedatadoituongloaigia = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/gettreedatadoituongloaigia';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGettreedatadoituongloaigia(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGettreedatadoituongloaigia(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongloaigiaServiceProxy.prototype.processGettreedatadoituongloaigia = function (response) {
            var e_140, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_140_1) { e_140 = { error: e_140_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_140) throw e_140.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_141, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_15 = __values(resultData200), resultData200_15_1 = resultData200_15.next(); !resultData200_15_1.done; resultData200_15_1 = resultData200_15.next()) {
                                var item = resultData200_15_1.value;
                                result200.push(LoaiGiaTreeDto.fromJS(item));
                            }
                        }
                        catch (e_141_1) { e_141 = { error: e_141_1 }; }
                        finally {
                            try {
                                if (resultData200_15_1 && !resultData200_15_1.done && (_a = resultData200_15.return)) _a.call(resultData200_15);
                            }
                            finally { if (e_141) throw e_141.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongloaigiaServiceProxy.prototype.createorupdate = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/createorupdate';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreateorupdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreateorupdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongloaigiaServiceProxy.prototype.processCreateorupdate = function (response) {
            var e_142, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_142_1) { e_142 = { error: e_142_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_142) throw e_142.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongloaigiaServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongloaigiaServiceProxy.prototype.processGetlist = function (response) {
            var e_143, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_143_1) { e_143 = { error: e_143_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_143) throw e_143.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDoiTuongLoaiGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DoituongloaigiaServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongloaigiaServiceProxy.prototype.processGetbyid = function (response) {
            var e_144, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_144_1) { e_144 = { error: e_144_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_144) throw e_144.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongLoaiGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongloaigiaServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongloaigiaServiceProxy.prototype.processCreate = function (response) {
            var e_145, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_145_1) { e_145 = { error: e_145_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_145) throw e_145.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongLoaiGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DoituongloaigiaServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongloaigiaServiceProxy.prototype.processUpdate = function (response) {
            var e_146, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_146_1) { e_146 = { error: e_146_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_146) throw e_146.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DoiTuongLoaiGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DoituongloaigiaServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/doituongloaigia/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DoituongloaigiaServiceProxy.prototype.processRemovebyid = function (response) {
            var e_147, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_147_1) { e_147 = { error: e_147_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_147) throw e_147.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return DoituongloaigiaServiceProxy;
    }());
    DoituongloaigiaServiceProxy.ɵfac = function DoituongloaigiaServiceProxy_Factory(t) { return new (t || DoituongloaigiaServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    DoituongloaigiaServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DoituongloaigiaServiceProxy, factory: DoituongloaigiaServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DoituongloaigiaServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var DonvihanhchinhServiceProxy = /** @class */ (function () {
        function DonvihanhchinhServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        DonvihanhchinhServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvihanhchinhServiceProxy.prototype.processGetbyid = function (response) {
            var e_148, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_148_1) { e_148 = { error: e_148_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_148) throw e_148.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DonViHanhChinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DonvihanhchinhServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvihanhchinhServiceProxy.prototype.processCreate = function (response) {
            var e_149, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_149_1) { e_149 = { error: e_149_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_149) throw e_149.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DonViHanhChinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DonvihanhchinhServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvihanhchinhServiceProxy.prototype.processUpdate = function (response) {
            var e_150, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_150_1) { e_150 = { error: e_150_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_150) throw e_150.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DonViHanhChinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DonvihanhchinhServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvihanhchinhServiceProxy.prototype.processGetlist = function (response) {
            var e_151, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_151_1) { e_151 = { error: e_151_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_151) throw e_151.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDonViHanhChinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DonvihanhchinhServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvihanhchinh/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvihanhchinhServiceProxy.prototype.processRemovebyid = function (response) {
            var e_152, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_152_1) { e_152 = { error: e_152_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_152) throw e_152.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return DonvihanhchinhServiceProxy;
    }());
    DonvihanhchinhServiceProxy.ɵfac = function DonvihanhchinhServiceProxy_Factory(t) { return new (t || DonvihanhchinhServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    DonvihanhchinhServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DonvihanhchinhServiceProxy, factory: DonvihanhchinhServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DonvihanhchinhServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var DonvitinhduocphamServiceProxy = /** @class */ (function () {
        function DonvitinhduocphamServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        DonvitinhduocphamServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvitinhduocphamServiceProxy.prototype.processGetlist = function (response) {
            var e_153, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_153_1) { e_153 = { error: e_153_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_153) throw e_153.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDonViTinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DonvitinhduocphamServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvitinhduocphamServiceProxy.prototype.processGetbyid = function (response) {
            var e_154, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_154_1) { e_154 = { error: e_154_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_154) throw e_154.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DonViTinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DonvitinhduocphamServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvitinhduocphamServiceProxy.prototype.processCreate = function (response) {
            var e_155, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_155_1) { e_155 = { error: e_155_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_155) throw e_155.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DonViTinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DonvitinhduocphamServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvitinhduocphamServiceProxy.prototype.processUpdate = function (response) {
            var e_156, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_156_1) { e_156 = { error: e_156_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_156) throw e_156.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DonViTinhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DonvitinhduocphamServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/donvitinhduocpham/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DonvitinhduocphamServiceProxy.prototype.processRemovebyid = function (response) {
            var e_157, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_157_1) { e_157 = { error: e_157_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_157) throw e_157.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return DonvitinhduocphamServiceProxy;
    }());
    DonvitinhduocphamServiceProxy.ɵfac = function DonvitinhduocphamServiceProxy_Factory(t) { return new (t || DonvitinhduocphamServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    DonvitinhduocphamServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DonvitinhduocphamServiceProxy, factory: DonvitinhduocphamServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DonvitinhduocphamServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var DuocbenhvienServiceProxy = /** @class */ (function () {
        function DuocbenhvienServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.bulkthongtinthaubyduocid = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/bulkthongtinthaubyduocid';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processBulkthongtinthaubyduocid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processBulkthongtinthaubyduocid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processBulkthongtinthaubyduocid = function (response) {
            var e_158, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_158_1) { e_158 = { error: e_158_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_158) throw e_158.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.thongtinthaubyduocid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/{id}/thongtinthaubyduocid';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processThongtinthaubyduocid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processThongtinthaubyduocid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processThongtinthaubyduocid = function (response) {
            var e_159, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_159_1) { e_159 = { error: e_159_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_159) throw e_159.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_160, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_16 = __values(resultData200), resultData200_16_1 = resultData200_16.next(); !resultData200_16_1.done; resultData200_16_1 = resultData200_16.next()) {
                                var item = resultData200_16_1.value;
                                result200.push(DuocThongTinThauDto.fromJS(item));
                            }
                        }
                        catch (e_160_1) { e_160 = { error: e_160_1 }; }
                        finally {
                            try {
                                if (resultData200_16_1 && !resultData200_16_1.done && (_a = resultData200_16.return)) _a.call(resultData200_16);
                            }
                            finally { if (e_160) throw e_160.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.getpagedlistduocdungchung = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/getpagedlistduocdungchung';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetpagedlistduocdungchung(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetpagedlistduocdungchung(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processGetpagedlistduocdungchung = function (response) {
            var e_161, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_161_1) { e_161 = { error: e_161_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_161) throw e_161.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDuocDungChungDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.themthuoctudanhmucchung = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/themthuoctudanhmucchung';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processThemthuoctudanhmucchung(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processThemthuoctudanhmucchung(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processThemthuoctudanhmucchung = function (response) {
            var e_162, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_162_1) { e_162 = { error: e_162_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_162) throw e_162.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.exportexcelmaumacdinh = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/exportexcelmaumacdinh';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processExportexcelmaumacdinh(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processExportexcelmaumacdinh(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processExportexcelmaumacdinh = function (response) {
            var e_163, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_163_1) { e_163 = { error: e_163_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_163) throw e_163.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FileDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.exportexcelmau917 = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/exportexcelmau917';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processExportexcelmau917(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processExportexcelmau917(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processExportexcelmau917 = function (response) {
            var e_164, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_164_1) { e_164 = { error: e_164_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_164) throw e_164.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FileDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processCreate = function (response) {
            var e_165, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_165_1) { e_165 = { error: e_165_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_165) throw e_165.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processUpdate = function (response) {
            var e_166, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_166_1) { e_166 = { error: e_166_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_166) throw e_166.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processGetbyid = function (response) {
            var e_167, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_167_1) { e_167 = { error: e_167_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_167) throw e_167.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param idUpdate (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.checktrungvacxin = function (vacxinId, idUpdate) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/checktrungvacxin/{VacxinId}?';
            if (vacxinId === undefined || vacxinId === null)
                throw new Error('The parameter \'vacxinId\' must be defined.');
            url_ = url_.replace('{VacxinId}', encodeURIComponent('' + vacxinId));
            if (idUpdate !== undefined)
                url_ += 'idUpdate=' + encodeURIComponent('' + idUpdate) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processChecktrungvacxin(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processChecktrungvacxin(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processChecktrungvacxin = function (response) {
            var e_168, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_168_1) { e_168 = { error: e_168_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_168) throw e_168.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processGetlist = function (response) {
            var e_169, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_169_1) { e_169 = { error: e_169_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_169) throw e_169.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DuocbenhvienServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocbenhvien/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocbenhvienServiceProxy.prototype.processRemovebyid = function (response) {
            var e_170, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_170_1) { e_170 = { error: e_170_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_170) throw e_170.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return DuocbenhvienServiceProxy;
    }());
    DuocbenhvienServiceProxy.ɵfac = function DuocbenhvienServiceProxy_Factory(t) { return new (t || DuocbenhvienServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    DuocbenhvienServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DuocbenhvienServiceProxy, factory: DuocbenhvienServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DuocbenhvienServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var DuocthongtinthauServiceProxy = /** @class */ (function () {
        function DuocthongtinthauServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        DuocthongtinthauServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocthongtinthauServiceProxy.prototype.processGetlist = function (response) {
            var e_171, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_171_1) { e_171 = { error: e_171_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_171) throw e_171.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDuocThongTinThauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DuocthongtinthauServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocthongtinthauServiceProxy.prototype.processGetbyid = function (response) {
            var e_172, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_172_1) { e_172 = { error: e_172_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_172) throw e_172.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DuocThongTinThauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocthongtinthauServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocthongtinthauServiceProxy.prototype.processCreate = function (response) {
            var e_173, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_173_1) { e_173 = { error: e_173_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_173) throw e_173.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DuocThongTinThauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        DuocthongtinthauServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocthongtinthauServiceProxy.prototype.processUpdate = function (response) {
            var e_174, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_174_1) { e_174 = { error: e_174_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_174) throw e_174.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DuocThongTinThauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        DuocthongtinthauServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/duocthongtinthau/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        DuocthongtinthauServiceProxy.prototype.processRemovebyid = function (response) {
            var e_175, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_175_1) { e_175 = { error: e_175_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_175) throw e_175.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return DuocthongtinthauServiceProxy;
    }());
    DuocthongtinthauServiceProxy.ɵfac = function DuocthongtinthauServiceProxy_Factory(t) { return new (t || DuocthongtinthauServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    DuocthongtinthauServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DuocthongtinthauServiceProxy, factory: DuocthongtinthauServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DuocthongtinthauServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var FileServiceProxy = /** @class */ (function () {
        function FileServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        FileServiceProxy.prototype.downloadtempfile = function (token) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/file/downloadtempfile/{token}';
            if (token === undefined || token === null)
                throw new Error('The parameter \'token\' must be defined.');
            url_ = url_.replace('{token}', encodeURIComponent('' + token));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processDownloadtempfile(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processDownloadtempfile(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        FileServiceProxy.prototype.processDownloadtempfile = function (response) {
            var e_176, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_176_1) { e_176 = { error: e_176_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_176) throw e_176.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param contentType (optional)
         * @return Success
         */
        FileServiceProxy.prototype.nhanvienimg = function (id, loai, contentType) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/file/nhanvienimg/{id}/{loai}?';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            if (loai === undefined || loai === null)
                throw new Error('The parameter \'loai\' must be defined.');
            url_ = url_.replace('{loai}', encodeURIComponent('' + loai));
            if (contentType !== undefined)
                url_ += 'contentType=' + encodeURIComponent('' + contentType) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processNhanvienimg(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processNhanvienimg(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        FileServiceProxy.prototype.processNhanvienimg = function (response) {
            var e_177, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_177_1) { e_177 = { error: e_177_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_177) throw e_177.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param width (optional)
         * @param height (optional)
         * @return Success
         */
        FileServiceProxy.prototype.uploadanh = function (width, height) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/file/uploadanh?';
            if (width !== undefined)
                url_ += 'width=' + encodeURIComponent('' + width) + '&';
            if (height !== undefined)
                url_ += 'height=' + encodeURIComponent('' + height) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUploadanh(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUploadanh(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        FileServiceProxy.prototype.processUploadanh = function (response) {
            var e_178, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_178_1) { e_178 = { error: e_178_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_178) throw e_178.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FileDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        FileServiceProxy.prototype.uploaexcel = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/file/uploaexcel';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUploaexcel(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUploaexcel(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        FileServiceProxy.prototype.processUploaexcel = function (response) {
            var e_179, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_179_1) { e_179 = { error: e_179_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_179) throw e_179.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = FileDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return FileServiceProxy;
    }());
    FileServiceProxy.ɵfac = function FileServiceProxy_Factory(t) { return new (t || FileServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    FileServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: FileServiceProxy, factory: FileServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(FileServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var GetentitycommonServiceProxy = /** @class */ (function () {
        function GetentitycommonServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        GetentitycommonServiceProxy.prototype.getbyid = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/getentitycommon/getbyid';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        GetentitycommonServiceProxy.prototype.processGetbyid = function (response) {
            var e_180, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_180_1) { e_180 = { error: e_180_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_180) throw e_180.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = GetEntityByIdOutDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return GetentitycommonServiceProxy;
    }());
    GetentitycommonServiceProxy.ɵfac = function GetentitycommonServiceProxy_Factory(t) { return new (t || GetentitycommonServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    GetentitycommonServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: GetentitycommonServiceProxy, factory: GetentitycommonServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(GetentitycommonServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var GiuongbenhServiceProxy = /** @class */ (function () {
        function GiuongbenhServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        GiuongbenhServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/giuongbenh/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        GiuongbenhServiceProxy.prototype.processCreate = function (response) {
            var e_181, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_181_1) { e_181 = { error: e_181_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_181) throw e_181.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = GiuongBenhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        GiuongbenhServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/giuongbenh/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        GiuongbenhServiceProxy.prototype.processUpdate = function (response) {
            var e_182, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_182_1) { e_182 = { error: e_182_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_182) throw e_182.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = GiuongBenhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        GiuongbenhServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/giuongbenh/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        GiuongbenhServiceProxy.prototype.processGetlist = function (response) {
            var e_183, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_183_1) { e_183 = { error: e_183_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_183) throw e_183.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfGiuongBenhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        GiuongbenhServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/giuongbenh/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        GiuongbenhServiceProxy.prototype.processGetbyid = function (response) {
            var e_184, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_184_1) { e_184 = { error: e_184_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_184) throw e_184.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = GiuongBenhDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        GiuongbenhServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/giuongbenh/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        GiuongbenhServiceProxy.prototype.processRemovebyid = function (response) {
            var e_185, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_185_1) { e_185 = { error: e_185_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_185) throw e_185.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return GiuongbenhServiceProxy;
    }());
    GiuongbenhServiceProxy.ɵfac = function GiuongbenhServiceProxy_Factory(t) { return new (t || GiuongbenhServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    GiuongbenhServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: GiuongbenhServiceProxy, factory: GiuongbenhServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(GiuongbenhServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var HethongdanhmucServiceProxy = /** @class */ (function () {
        function HethongdanhmucServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        HethongdanhmucServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucServiceProxy.prototype.processCreate = function (response) {
            var e_186, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_186_1) { e_186 = { error: e_186_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_186) throw e_186.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LstDictionaryDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        HethongdanhmucServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucServiceProxy.prototype.processUpdate = function (response) {
            var e_187, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_187_1) { e_187 = { error: e_187_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_187) throw e_187.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LstDictionaryDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        HethongdanhmucServiceProxy.prototype.getListDictionaryByListTypeCode = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/get-list-dictionary-by-list-type-code';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetListDictionaryByListTypeCode(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetListDictionaryByListTypeCode(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucServiceProxy.prototype.processGetListDictionaryByListTypeCode = function (response) {
            var e_188, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_188_1) { e_188 = { error: e_188_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_188) throw e_188.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_189, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_17 = __values(resultData200), resultData200_17_1 = resultData200_17.next(); !resultData200_17_1.done; resultData200_17_1 = resultData200_17.next()) {
                                var item = resultData200_17_1.value;
                                result200.push(LstDictionaryDto.fromJS(item));
                            }
                        }
                        catch (e_189_1) { e_189 = { error: e_189_1 }; }
                        finally {
                            try {
                                if (resultData200_17_1 && !resultData200_17_1.done && (_a = resultData200_17.return)) _a.call(resultData200_17);
                            }
                            finally { if (e_189) throw e_189.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        HethongdanhmucServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucServiceProxy.prototype.processGetlist = function (response) {
            var e_190, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_190_1) { e_190 = { error: e_190_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_190) throw e_190.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfLstDictionaryDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        HethongdanhmucServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucServiceProxy.prototype.processGetbyid = function (response) {
            var e_191, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_191_1) { e_191 = { error: e_191_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_191) throw e_191.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LstDictionaryDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        HethongdanhmucServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmuc/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucServiceProxy.prototype.processRemovebyid = function (response) {
            var e_192, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_192_1) { e_192 = { error: e_192_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_192) throw e_192.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return HethongdanhmucServiceProxy;
    }());
    HethongdanhmucServiceProxy.ɵfac = function HethongdanhmucServiceProxy_Factory(t) { return new (t || HethongdanhmucServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    HethongdanhmucServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: HethongdanhmucServiceProxy, factory: HethongdanhmucServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(HethongdanhmucServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var HethongdanhmucdinhnghiaServiceProxy = /** @class */ (function () {
        function HethongdanhmucdinhnghiaServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        HethongdanhmucdinhnghiaServiceProxy.prototype.gettreeview = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/gettreeview';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGettreeview(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGettreeview(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucdinhnghiaServiceProxy.prototype.processGettreeview = function (response) {
            var e_193, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_193_1) { e_193 = { error: e_193_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_193) throw e_193.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        HethongdanhmucdinhnghiaServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucdinhnghiaServiceProxy.prototype.processCreate = function (response) {
            var e_194, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_194_1) { e_194 = { error: e_194_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_194) throw e_194.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LstDictionaryTypeDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        HethongdanhmucdinhnghiaServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucdinhnghiaServiceProxy.prototype.processUpdate = function (response) {
            var e_195, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_195_1) { e_195 = { error: e_195_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_195) throw e_195.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LstDictionaryTypeDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        HethongdanhmucdinhnghiaServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucdinhnghiaServiceProxy.prototype.processRemovebyid = function (response) {
            var e_196, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_196_1) { e_196 = { error: e_196_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_196) throw e_196.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        HethongdanhmucdinhnghiaServiceProxy.prototype.removebyids = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/removebyids/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyids(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyids(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucdinhnghiaServiceProxy.prototype.processRemovebyids = function (response) {
            var e_197, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_197_1) { e_197 = { error: e_197_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_197) throw e_197.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        HethongdanhmucdinhnghiaServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucdinhnghiaServiceProxy.prototype.processGetlist = function (response) {
            var e_198, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_198_1) { e_198 = { error: e_198_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_198) throw e_198.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfLstDictionaryTypeDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        HethongdanhmucdinhnghiaServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hethongdanhmucdinhnghia/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HethongdanhmucdinhnghiaServiceProxy.prototype.processGetbyid = function (response) {
            var e_199, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_199_1) { e_199 = { error: e_199_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_199) throw e_199.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LstDictionaryTypeDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return HethongdanhmucdinhnghiaServiceProxy;
    }());
    HethongdanhmucdinhnghiaServiceProxy.ɵfac = function HethongdanhmucdinhnghiaServiceProxy_Factory(t) { return new (t || HethongdanhmucdinhnghiaServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    HethongdanhmucdinhnghiaServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: HethongdanhmucdinhnghiaServiceProxy, factory: HethongdanhmucdinhnghiaServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(HethongdanhmucdinhnghiaServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var HoatchatServiceProxy = /** @class */ (function () {
        function HoatchatServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        HoatchatServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hoatchat/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HoatchatServiceProxy.prototype.processGetlist = function (response) {
            var e_200, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_200_1) { e_200 = { error: e_200_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_200) throw e_200.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfHoatChatDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        HoatchatServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hoatchat/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HoatchatServiceProxy.prototype.processGetbyid = function (response) {
            var e_201, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_201_1) { e_201 = { error: e_201_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_201) throw e_201.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = HoatChatDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        HoatchatServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hoatchat/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HoatchatServiceProxy.prototype.processCreate = function (response) {
            var e_202, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_202_1) { e_202 = { error: e_202_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_202) throw e_202.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = HoatChatDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        HoatchatServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hoatchat/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HoatchatServiceProxy.prototype.processUpdate = function (response) {
            var e_203, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_203_1) { e_203 = { error: e_203_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_203) throw e_203.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = HoatChatDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        HoatchatServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/hoatchat/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        HoatchatServiceProxy.prototype.processRemovebyid = function (response) {
            var e_204, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_204_1) { e_204 = { error: e_204_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_204) throw e_204.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return HoatchatServiceProxy;
    }());
    HoatchatServiceProxy.ɵfac = function HoatchatServiceProxy_Factory(t) { return new (t || HoatchatServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    HoatchatServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: HoatchatServiceProxy, factory: HoatchatServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(HoatchatServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var ImportduocphamServiceProxy = /** @class */ (function () {
        function ImportduocphamServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        ImportduocphamServiceProxy.prototype.kiemtrathuoc = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/importduocpham/kiemtrathuoc';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processKiemtrathuoc(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processKiemtrathuoc(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ImportduocphamServiceProxy.prototype.processKiemtrathuoc = function (response) {
            var e_205, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_205_1) { e_205 = { error: e_205_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_205) throw e_205.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = KiemTraExcelThuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ImportduocphamServiceProxy.prototype.insertthuochople = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/importduocpham/insertthuochople';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processInsertthuochople(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processInsertthuochople(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ImportduocphamServiceProxy.prototype.processInsertthuochople = function (response) {
            var e_206, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_206_1) { e_206 = { error: e_206_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_206) throw e_206.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfInt32.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ImportduocphamServiceProxy.prototype.updatethuochople = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/importduocpham/updatethuochople';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdatethuochople(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdatethuochople(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ImportduocphamServiceProxy.prototype.processUpdatethuochople = function (response) {
            var e_207, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_207_1) { e_207 = { error: e_207_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_207) throw e_207.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfInt32.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return ImportduocphamServiceProxy;
    }());
    ImportduocphamServiceProxy.ɵfac = function ImportduocphamServiceProxy_Factory(t) { return new (t || ImportduocphamServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    ImportduocphamServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: ImportduocphamServiceProxy, factory: ImportduocphamServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(ImportduocphamServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var KhangnguyenServiceProxy = /** @class */ (function () {
        function KhangnguyenServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        KhangnguyenServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khangnguyen/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhangnguyenServiceProxy.prototype.processCreate = function (response) {
            var e_208, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_208_1) { e_208 = { error: e_208_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_208) throw e_208.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = KhangNguyenDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        KhangnguyenServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khangnguyen/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhangnguyenServiceProxy.prototype.processUpdate = function (response) {
            var e_209, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_209_1) { e_209 = { error: e_209_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_209) throw e_209.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = KhangNguyenDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        KhangnguyenServiceProxy.prototype.comboboxdata = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khangnguyen/comboboxdata';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processComboboxdata(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processComboboxdata(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhangnguyenServiceProxy.prototype.processComboboxdata = function (response) {
            var e_210, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_210_1) { e_210 = { error: e_210_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_210) throw e_210.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_211, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_18 = __values(resultData200), resultData200_18_1 = resultData200_18.next(); !resultData200_18_1.done; resultData200_18_1 = resultData200_18.next()) {
                                var item = resultData200_18_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_211_1) { e_211 = { error: e_211_1 }; }
                        finally {
                            try {
                                if (resultData200_18_1 && !resultData200_18_1.done && (_a = resultData200_18.return)) _a.call(resultData200_18);
                            }
                            finally { if (e_211) throw e_211.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        KhangnguyenServiceProxy.prototype.checktrungid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khangnguyen/{id}/checktrungid';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processChecktrungid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processChecktrungid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhangnguyenServiceProxy.prototype.processChecktrungid = function (response) {
            var e_212, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_212_1) { e_212 = { error: e_212_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_212) throw e_212.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        KhangnguyenServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khangnguyen/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhangnguyenServiceProxy.prototype.processRemovebyid = function (response) {
            var e_213, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_213_1) { e_213 = { error: e_213_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_213) throw e_213.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        KhangnguyenServiceProxy.prototype.listkhangnguyencombo = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khangnguyen/listkhangnguyencombo';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processListkhangnguyencombo(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processListkhangnguyencombo(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhangnguyenServiceProxy.prototype.processListkhangnguyencombo = function (response) {
            var e_214, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_214_1) { e_214 = { error: e_214_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_214) throw e_214.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_215, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_19 = __values(resultData200), resultData200_19_1 = resultData200_19.next(); !resultData200_19_1.done; resultData200_19_1 = resultData200_19.next()) {
                                var item = resultData200_19_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_215_1) { e_215 = { error: e_215_1 }; }
                        finally {
                            try {
                                if (resultData200_19_1 && !resultData200_19_1.done && (_a = resultData200_19.return)) _a.call(resultData200_19);
                            }
                            finally { if (e_215) throw e_215.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        KhangnguyenServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khangnguyen/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhangnguyenServiceProxy.prototype.processGetbyid = function (response) {
            var e_216, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_216_1) { e_216 = { error: e_216_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_216) throw e_216.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = KhangNguyenDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        KhangnguyenServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khangnguyen/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhangnguyenServiceProxy.prototype.processGetlist = function (response) {
            var e_217, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_217_1) { e_217 = { error: e_217_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_217) throw e_217.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfKhangNguyenDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return KhangnguyenServiceProxy;
    }());
    KhangnguyenServiceProxy.ɵfac = function KhangnguyenServiceProxy_Factory(t) { return new (t || KhangnguyenServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    KhangnguyenServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: KhangnguyenServiceProxy, factory: KhangnguyenServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(KhangnguyenServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var KhoduocServiceProxy = /** @class */ (function () {
        function KhoduocServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        KhoduocServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khoduoc/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhoduocServiceProxy.prototype.processGetlist = function (response) {
            var e_218, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_218_1) { e_218 = { error: e_218_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_218) throw e_218.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfKhoDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        KhoduocServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khoduoc/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhoduocServiceProxy.prototype.processCreate = function (response) {
            var e_219, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_219_1) { e_219 = { error: e_219_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_219) throw e_219.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = KhoDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        KhoduocServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khoduoc/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhoduocServiceProxy.prototype.processUpdate = function (response) {
            var e_220, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_220_1) { e_220 = { error: e_220_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_220) throw e_220.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = KhoDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        KhoduocServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khoduoc/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhoduocServiceProxy.prototype.processGetbyid = function (response) {
            var e_221, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_221_1) { e_221 = { error: e_221_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_221) throw e_221.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = KhoDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        KhoduocServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/khoduoc/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        KhoduocServiceProxy.prototype.processRemovebyid = function (response) {
            var e_222, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_222_1) { e_222 = { error: e_222_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_222) throw e_222.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return KhoduocServiceProxy;
    }());
    KhoduocServiceProxy.ɵfac = function KhoduocServiceProxy_Factory(t) { return new (t || KhoduocServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    KhoduocServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: KhoduocServiceProxy, factory: KhoduocServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(KhoduocServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var LoaiduocServiceProxy = /** @class */ (function () {
        function LoaiduocServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        LoaiduocServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaiduoc/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaiduocServiceProxy.prototype.processGetlist = function (response) {
            var e_223, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_223_1) { e_223 = { error: e_223_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_223) throw e_223.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfLoaiDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        LoaiduocServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaiduoc/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaiduocServiceProxy.prototype.processGetbyid = function (response) {
            var e_224, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_224_1) { e_224 = { error: e_224_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_224) throw e_224.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        LoaiduocServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaiduoc/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaiduocServiceProxy.prototype.processCreate = function (response) {
            var e_225, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_225_1) { e_225 = { error: e_225_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_225) throw e_225.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        LoaiduocServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaiduoc/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaiduocServiceProxy.prototype.processUpdate = function (response) {
            var e_226, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_226_1) { e_226 = { error: e_226_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_226) throw e_226.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        LoaiduocServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaiduoc/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaiduocServiceProxy.prototype.processRemovebyid = function (response) {
            var e_227, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_227_1) { e_227 = { error: e_227_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_227) throw e_227.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return LoaiduocServiceProxy;
    }());
    LoaiduocServiceProxy.ɵfac = function LoaiduocServiceProxy_Factory(t) { return new (t || LoaiduocServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    LoaiduocServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: LoaiduocServiceProxy, factory: LoaiduocServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(LoaiduocServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var LoaigiaServiceProxy = /** @class */ (function () {
        function LoaigiaServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        LoaigiaServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaigia/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaigiaServiceProxy.prototype.processCreate = function (response) {
            var e_228, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_228_1) { e_228 = { error: e_228_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_228) throw e_228.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        LoaigiaServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaigia/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaigiaServiceProxy.prototype.processUpdate = function (response) {
            var e_229, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_229_1) { e_229 = { error: e_229_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_229) throw e_229.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        LoaigiaServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaigia/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaigiaServiceProxy.prototype.processGetlist = function (response) {
            var e_230, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_230_1) { e_230 = { error: e_230_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_230) throw e_230.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfLoaiGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        LoaigiaServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaigia/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaigiaServiceProxy.prototype.processGetbyid = function (response) {
            var e_231, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_231_1) { e_231 = { error: e_231_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_231) throw e_231.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        LoaigiaServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaigia/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaigiaServiceProxy.prototype.processRemovebyid = function (response) {
            var e_232, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_232_1) { e_232 = { error: e_232_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_232) throw e_232.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return LoaigiaServiceProxy;
    }());
    LoaigiaServiceProxy.ɵfac = function LoaigiaServiceProxy_Factory(t) { return new (t || LoaigiaServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    LoaigiaServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: LoaigiaServiceProxy, factory: LoaigiaServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(LoaigiaServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var LoaivattuServiceProxy = /** @class */ (function () {
        function LoaivattuServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        LoaivattuServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaivattu/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaivattuServiceProxy.prototype.processGetlist = function (response) {
            var e_233, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_233_1) { e_233 = { error: e_233_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_233) throw e_233.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfLoaiVatTuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        LoaivattuServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaivattu/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaivattuServiceProxy.prototype.processGetbyid = function (response) {
            var e_234, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_234_1) { e_234 = { error: e_234_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_234) throw e_234.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiVatTuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        LoaivattuServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaivattu/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaivattuServiceProxy.prototype.processCreate = function (response) {
            var e_235, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_235_1) { e_235 = { error: e_235_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_235) throw e_235.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiVatTuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        LoaivattuServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaivattu/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaivattuServiceProxy.prototype.processUpdate = function (response) {
            var e_236, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_236_1) { e_236 = { error: e_236_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_236) throw e_236.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = LoaiVatTuDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        LoaivattuServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/loaivattu/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        LoaivattuServiceProxy.prototype.processRemovebyid = function (response) {
            var e_237, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_237_1) { e_237 = { error: e_237_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_237) throw e_237.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return LoaivattuServiceProxy;
    }());
    LoaivattuServiceProxy.ɵfac = function LoaivattuServiceProxy_Factory(t) { return new (t || LoaivattuServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    LoaivattuServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: LoaivattuServiceProxy, factory: LoaivattuServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(LoaivattuServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var NhacungcapServiceProxy = /** @class */ (function () {
        function NhacungcapServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        NhacungcapServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhacungcap/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhacungcapServiceProxy.prototype.processCreate = function (response) {
            var e_238, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_238_1) { e_238 = { error: e_238_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_238) throw e_238.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhaCungCapDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhacungcapServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhacungcap/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhacungcapServiceProxy.prototype.processUpdate = function (response) {
            var e_239, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_239_1) { e_239 = { error: e_239_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_239) throw e_239.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhaCungCapDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhacungcapServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhacungcap/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhacungcapServiceProxy.prototype.processGetlist = function (response) {
            var e_240, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_240_1) { e_240 = { error: e_240_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_240) throw e_240.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfNhaCungCapDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhacungcapServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhacungcap/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhacungcapServiceProxy.prototype.processGetbyid = function (response) {
            var e_241, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_241_1) { e_241 = { error: e_241_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_241) throw e_241.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhaCungCapDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhacungcapServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhacungcap/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhacungcapServiceProxy.prototype.processRemovebyid = function (response) {
            var e_242, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_242_1) { e_242 = { error: e_242_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_242) throw e_242.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return NhacungcapServiceProxy;
    }());
    NhacungcapServiceProxy.ɵfac = function NhacungcapServiceProxy_Factory(t) { return new (t || NhacungcapServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    NhacungcapServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: NhacungcapServiceProxy, factory: NhacungcapServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(NhacungcapServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var NhanlucServiceProxy = /** @class */ (function () {
        function NhanlucServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param fileToken (optional)
         * @return Success
         */
        NhanlucServiceProxy.prototype.uploadanh = function (nhanLucId, loai, fileToken) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhanluc/uploadanh/{nhanLucId}?';
            if (nhanLucId === undefined || nhanLucId === null)
                throw new Error('The parameter \'nhanLucId\' must be defined.');
            url_ = url_.replace('{nhanLucId}', encodeURIComponent('' + nhanLucId));
            if (loai === undefined || loai === null)
                throw new Error('The parameter \'loai\' must be defined and cannot be null.');
            else
                url_ += 'loai=' + encodeURIComponent('' + loai) + '&';
            if (fileToken !== undefined)
                url_ += 'fileToken=' + encodeURIComponent('' + fileToken) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUploadanh(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUploadanh(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhanlucServiceProxy.prototype.processUploadanh = function (response) {
            var e_243, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_243_1) { e_243 = { error: e_243_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_243) throw e_243.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhanlucServiceProxy.prototype.nhanlucbybenhvienid = function (benhVienId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhanluc/nhanlucbybenhvienid/{BenhVienId}';
            if (benhVienId === undefined || benhVienId === null)
                throw new Error('The parameter \'benhVienId\' must be defined.');
            url_ = url_.replace('{BenhVienId}', encodeURIComponent('' + benhVienId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processNhanlucbybenhvienid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processNhanlucbybenhvienid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhanlucServiceProxy.prototype.processNhanlucbybenhvienid = function (response) {
            var e_244, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_244_1) { e_244 = { error: e_244_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_244) throw e_244.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_245, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_20 = __values(resultData200), resultData200_20_1 = resultData200_20.next(); !resultData200_20_1.done; resultData200_20_1 = resultData200_20.next()) {
                                var item = resultData200_20_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_245_1) { e_245 = { error: e_245_1 }; }
                        finally {
                            try {
                                if (resultData200_20_1 && !resultData200_20_1.done && (_a = resultData200_20.return)) _a.call(resultData200_20);
                            }
                            finally { if (e_245) throw e_245.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhanlucServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhanluc/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhanlucServiceProxy.prototype.processGetlist = function (response) {
            var e_246, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_246_1) { e_246 = { error: e_246_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_246) throw e_246.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfNhanLucDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhanlucServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhanluc/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhanlucServiceProxy.prototype.processGetbyid = function (response) {
            var e_247, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_247_1) { e_247 = { error: e_247_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_247) throw e_247.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhanLucDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhanlucServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhanluc/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhanlucServiceProxy.prototype.processCreate = function (response) {
            var e_248, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_248_1) { e_248 = { error: e_248_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_248) throw e_248.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhanLucDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhanlucServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhanluc/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhanlucServiceProxy.prototype.processUpdate = function (response) {
            var e_249, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_249_1) { e_249 = { error: e_249_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_249) throw e_249.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhanLucDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhanlucServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhanluc/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhanlucServiceProxy.prototype.processRemovebyid = function (response) {
            var e_250, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_250_1) { e_250 = { error: e_250_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_250) throw e_250.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return NhanlucServiceProxy;
    }());
    NhanlucServiceProxy.ɵfac = function NhanlucServiceProxy_Factory(t) { return new (t || NhanlucServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    NhanlucServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: NhanlucServiceProxy, factory: NhanlucServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(NhanlucServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var NhomduocServiceProxy = /** @class */ (function () {
        function NhomduocServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        NhomduocServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomduoc/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomduocServiceProxy.prototype.processGetlist = function (response) {
            var e_251, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_251_1) { e_251 = { error: e_251_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_251) throw e_251.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfNhomDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhomduocServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomduoc/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomduocServiceProxy.prototype.processGetbyid = function (response) {
            var e_252, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_252_1) { e_252 = { error: e_252_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_252) throw e_252.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhomDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhomduocServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomduoc/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomduocServiceProxy.prototype.processCreate = function (response) {
            var e_253, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_253_1) { e_253 = { error: e_253_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_253) throw e_253.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhomDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhomduocServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomduoc/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomduocServiceProxy.prototype.processUpdate = function (response) {
            var e_254, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_254_1) { e_254 = { error: e_254_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_254) throw e_254.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhomDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhomduocServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomduoc/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomduocServiceProxy.prototype.processRemovebyid = function (response) {
            var e_255, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_255_1) { e_255 = { error: e_255_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_255) throw e_255.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return NhomduocServiceProxy;
    }());
    NhomduocServiceProxy.ɵfac = function NhomduocServiceProxy_Factory(t) { return new (t || NhomduocServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    NhomduocServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: NhomduocServiceProxy, factory: NhomduocServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(NhomduocServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var NhomdvktbhytServiceProxy = /** @class */ (function () {
        function NhomdvktbhytServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        NhomdvktbhytServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomdvktbhytServiceProxy.prototype.processGetlist = function (response) {
            var e_256, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_256_1) { e_256 = { error: e_256_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_256) throw e_256.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfNhomDvktBhytDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhomdvktbhytServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomdvktbhytServiceProxy.prototype.processGetbyid = function (response) {
            var e_257, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_257_1) { e_257 = { error: e_257_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_257) throw e_257.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhomDvktBhytDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhomdvktbhytServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomdvktbhytServiceProxy.prototype.processCreate = function (response) {
            var e_258, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_258_1) { e_258 = { error: e_258_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_258) throw e_258.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhomDvktBhytDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        NhomdvktbhytServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomdvktbhytServiceProxy.prototype.processUpdate = function (response) {
            var e_259, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_259_1) { e_259 = { error: e_259_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_259) throw e_259.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = NhomDvktBhytDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        NhomdvktbhytServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/nhomdvktbhyt/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        NhomdvktbhytServiceProxy.prototype.processRemovebyid = function (response) {
            var e_260, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_260_1) { e_260 = { error: e_260_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_260) throw e_260.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return NhomdvktbhytServiceProxy;
    }());
    NhomdvktbhytServiceProxy.ɵfac = function NhomdvktbhytServiceProxy_Factory(t) { return new (t || NhomdvktbhytServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    NhomdvktbhytServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: NhomdvktbhytServiceProxy, factory: NhomdvktbhytServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(NhomdvktbhytServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var PermissionmanagementServiceProxy = /** @class */ (function () {
        function PermissionmanagementServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        PermissionmanagementServiceProxy.prototype.getbyrole = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/permissionmanagement/getbyrole';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyrole(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyrole(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PermissionmanagementServiceProxy.prototype.processGetbyrole = function (response) {
            var e_261, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_261_1) { e_261 = { error: e_261_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_261) throw e_261.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = GetPermissionListResultDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return PermissionmanagementServiceProxy;
    }());
    PermissionmanagementServiceProxy.ɵfac = function PermissionmanagementServiceProxy_Factory(t) { return new (t || PermissionmanagementServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    PermissionmanagementServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: PermissionmanagementServiceProxy, factory: PermissionmanagementServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(PermissionmanagementServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var PhacdodieutriServiceProxy = /** @class */ (function () {
        function PhacdodieutriServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        PhacdodieutriServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhacdodieutriServiceProxy.prototype.processGetlist = function (response) {
            var e_262, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_262_1) { e_262 = { error: e_262_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_262) throw e_262.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfPhacDoDieuTriDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        PhacdodieutriServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhacdodieutriServiceProxy.prototype.processGetbyid = function (response) {
            var e_263, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_263_1) { e_263 = { error: e_263_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_263) throw e_263.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhacDoDieuTriDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        PhacdodieutriServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhacdodieutriServiceProxy.prototype.processCreate = function (response) {
            var e_264, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_264_1) { e_264 = { error: e_264_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_264) throw e_264.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhacDoDieuTriDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        PhacdodieutriServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhacdodieutriServiceProxy.prototype.processUpdate = function (response) {
            var e_265, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_265_1) { e_265 = { error: e_265_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_265) throw e_265.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhacDoDieuTriDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        PhacdodieutriServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phacdodieutri/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhacdodieutriServiceProxy.prototype.processRemovebyid = function (response) {
            var e_266, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_266_1) { e_266 = { error: e_266_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_266) throw e_266.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return PhacdodieutriServiceProxy;
    }());
    PhacdodieutriServiceProxy.ɵfac = function PhacdodieutriServiceProxy_Factory(t) { return new (t || PhacdodieutriServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    PhacdodieutriServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: PhacdodieutriServiceProxy, factory: PhacdodieutriServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(PhacdodieutriServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var PhannhomduocServiceProxy = /** @class */ (function () {
        function PhannhomduocServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        PhannhomduocServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhannhomduocServiceProxy.prototype.processGetlist = function (response) {
            var e_267, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_267_1) { e_267 = { error: e_267_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_267) throw e_267.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfPhanNhomDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        PhannhomduocServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhannhomduocServiceProxy.prototype.processGetbyid = function (response) {
            var e_268, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_268_1) { e_268 = { error: e_268_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_268) throw e_268.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhanNhomDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        PhannhomduocServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhannhomduocServiceProxy.prototype.processCreate = function (response) {
            var e_269, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_269_1) { e_269 = { error: e_269_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_269) throw e_269.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhanNhomDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        PhannhomduocServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhannhomduocServiceProxy.prototype.processUpdate = function (response) {
            var e_270, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_270_1) { e_270 = { error: e_270_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_270) throw e_270.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhanNhomDuocDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        PhannhomduocServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phannhomduoc/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhannhomduocServiceProxy.prototype.processRemovebyid = function (response) {
            var e_271, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_271_1) { e_271 = { error: e_271_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_271) throw e_271.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return PhannhomduocServiceProxy;
    }());
    PhannhomduocServiceProxy.ɵfac = function PhannhomduocServiceProxy_Factory(t) { return new (t || PhannhomduocServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    PhannhomduocServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: PhannhomduocServiceProxy, factory: PhannhomduocServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(PhannhomduocServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var PhongbanServiceProxy = /** @class */ (function () {
        function PhongbanServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        PhongbanServiceProxy.prototype.treesource = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phongban/treesource';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processTreesource(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processTreesource(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhongbanServiceProxy.prototype.processTreesource = function (response) {
            var e_272, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_272_1) { e_272 = { error: e_272_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_272) throw e_272.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_273, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_21 = __values(resultData200), resultData200_21_1 = resultData200_21.next(); !resultData200_21_1.done; resultData200_21_1 = resultData200_21.next()) {
                                var item = resultData200_21_1.value;
                                result200.push(PhongBanTreeDto.fromJS(item));
                            }
                        }
                        catch (e_273_1) { e_273 = { error: e_273_1 }; }
                        finally {
                            try {
                                if (resultData200_21_1 && !resultData200_21_1.done && (_a = resultData200_21.return)) _a.call(resultData200_21);
                            }
                            finally { if (e_273) throw e_273.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        PhongbanServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phongban/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhongbanServiceProxy.prototype.processGetlist = function (response) {
            var e_274, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_274_1) { e_274 = { error: e_274_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_274) throw e_274.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfPhongBanDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        PhongbanServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phongban/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhongbanServiceProxy.prototype.processGetbyid = function (response) {
            var e_275, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_275_1) { e_275 = { error: e_275_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_275) throw e_275.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhongBanDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        PhongbanServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phongban/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhongbanServiceProxy.prototype.processCreate = function (response) {
            var e_276, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_276_1) { e_276 = { error: e_276_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_276) throw e_276.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhongBanDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        PhongbanServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phongban/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhongbanServiceProxy.prototype.processUpdate = function (response) {
            var e_277, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_277_1) { e_277 = { error: e_277_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_277) throw e_277.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PhongBanDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        PhongbanServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/phongban/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        PhongbanServiceProxy.prototype.processRemovebyid = function (response) {
            var e_278, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_278_1) { e_278 = { error: e_278_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_278) throw e_278.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return PhongbanServiceProxy;
    }());
    PhongbanServiceProxy.ɵfac = function PhongbanServiceProxy_Factory(t) { return new (t || PhongbanServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    PhongbanServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: PhongbanServiceProxy, factory: PhongbanServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(PhongbanServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var SearchservercombodataServiceProxy = /** @class */ (function () {
        function SearchservercombodataServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        SearchservercombodataServiceProxy.prototype.benhicdselect = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/searchservercombodata/benhicdselect';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processBenhicdselect(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processBenhicdselect(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SearchservercombodataServiceProxy.prototype.processBenhicdselect = function (response) {
            var e_279, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_279_1) { e_279 = { error: e_279_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_279) throw e_279.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfComboBoxDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        SearchservercombodataServiceProxy.prototype.benhicdtable = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/searchservercombodata/benhicdtable';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processBenhicdtable(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processBenhicdtable(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SearchservercombodataServiceProxy.prototype.processBenhicdtable = function (response) {
            var e_280, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_280_1) { e_280 = { error: e_280_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_280) throw e_280.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfBenhIcdSearchDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return SearchservercombodataServiceProxy;
    }());
    SearchservercombodataServiceProxy.ɵfac = function SearchservercombodataServiceProxy_Factory(t) { return new (t || SearchservercombodataServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    SearchservercombodataServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: SearchservercombodataServiceProxy, factory: SearchservercombodataServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(SearchservercombodataServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var SelectoptionServiceProxy = /** @class */ (function () {
        function SelectoptionServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = 'http://ytcs-api-v2.orenda.vn';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        SelectoptionServiceProxy.prototype.getoptions = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/selectoption/getoptions';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain',
                    'Authorization': "Bearer " + localStorage.getItem('access_token')
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetoptions(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetoptions(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SelectoptionServiceProxy.prototype.processGetoptions = function (response) {
            var e_281, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_281_1) { e_281 = { error: e_281_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_281) throw e_281.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_282, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_22 = __values(resultData200), resultData200_22_1 = resultData200_22.next(); !resultData200_22_1.done; resultData200_22_1 = resultData200_22.next()) {
                                var item = resultData200_22_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_282_1) { e_282 = { error: e_282_1 }; }
                        finally {
                            try {
                                if (resultData200_22_1 && !resultData200_22_1.done && (_a = resultData200_22.return)) _a.call(resultData200_22);
                            }
                            finally { if (e_282) throw e_282.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return SelectoptionServiceProxy;
    }());
    SelectoptionServiceProxy.ɵfac = function SelectoptionServiceProxy_Factory(t) { return new (t || SelectoptionServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    SelectoptionServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: SelectoptionServiceProxy, factory: SelectoptionServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(SelectoptionServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var SelectsearchserverServiceProxy = /** @class */ (function () {
        function SelectsearchserverServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = 'http://ytcs-api-v2.orenda.vn';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        SelectsearchserverServiceProxy.prototype.getoptions = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/selectsearchserver/getoptions';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain',
                    'Authorization': "Bearer " + localStorage.getItem('access_token')
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetoptions(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetoptions(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SelectsearchserverServiceProxy.prototype.processGetoptions = function (response) {
            var e_283, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_283_1) { e_283 = { error: e_283_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_283) throw e_283.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfComboBoxDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return SelectsearchserverServiceProxy;
    }());
    SelectsearchserverServiceProxy.ɵfac = function SelectsearchserverServiceProxy_Factory(t) { return new (t || SelectsearchserverServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    SelectsearchserverServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: SelectsearchserverServiceProxy, factory: SelectsearchserverServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(SelectsearchserverServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var SokhamServiceProxy = /** @class */ (function () {
        function SokhamServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        SokhamServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sokham/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SokhamServiceProxy.prototype.processGetlist = function (response) {
            var e_284, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_284_1) { e_284 = { error: e_284_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_284) throw e_284.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfSoKhamDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        SokhamServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sokham/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SokhamServiceProxy.prototype.processGetbyid = function (response) {
            var e_285, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_285_1) { e_285 = { error: e_285_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_285) throw e_285.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SoKhamDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        SokhamServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sokham/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SokhamServiceProxy.prototype.processCreate = function (response) {
            var e_286, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_286_1) { e_286 = { error: e_286_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_286) throw e_286.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SoKhamDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        SokhamServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sokham/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SokhamServiceProxy.prototype.processUpdate = function (response) {
            var e_287, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_287_1) { e_287 = { error: e_287_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_287) throw e_287.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SoKhamDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        SokhamServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sokham/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SokhamServiceProxy.prototype.processRemovebyid = function (response) {
            var e_288, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_288_1) { e_288 = { error: e_288_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_288) throw e_288.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return SokhamServiceProxy;
    }());
    SokhamServiceProxy.ɵfac = function SokhamServiceProxy_Factory(t) { return new (t || SokhamServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    SokhamServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: SokhamServiceProxy, factory: SokhamServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(SokhamServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var StaticroleServiceProxy = /** @class */ (function () {
        function StaticroleServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        StaticroleServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/staticrole/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        StaticroleServiceProxy.prototype.processGetlist = function (response) {
            var e_289, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_289_1) { e_289 = { error: e_289_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_289) throw e_289.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfStaticRolePagedOutputDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param id (optional)
         * @return Success
         */
        StaticroleServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/staticrole/getbyid?';
            if (id === null)
                throw new Error('The parameter \'id\' cannot be null.');
            else if (id !== undefined)
                url_ += 'id=' + encodeURIComponent('' + id) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        StaticroleServiceProxy.prototype.processGetbyid = function (response) {
            var e_290, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_290_1) { e_290 = { error: e_290_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_290) throw e_290.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SysRoleDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        StaticroleServiceProxy.prototype.upsert = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/staticrole/upsert';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpsert(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpsert(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        StaticroleServiceProxy.prototype.processUpsert = function (response) {
            var e_291, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_291_1) { e_291 = { error: e_291_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_291) throw e_291.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfSysRoleDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        StaticroleServiceProxy.prototype.setpermissionableforadminrole = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/staticrole/setpermissionableforadminrole';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSetpermissionableforadminrole(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSetpermissionableforadminrole(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        StaticroleServiceProxy.prototype.processSetpermissionableforadminrole = function (response) {
            var e_292, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_292_1) { e_292 = { error: e_292_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_292) throw e_292.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param id (optional)
         * @return Success
         */
        StaticroleServiceProxy.prototype.getpermissionableforadminrole = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/staticrole/getpermissionableforadminrole?';
            if (id === null)
                throw new Error('The parameter \'id\' cannot be null.');
            else if (id !== undefined)
                url_ += 'id=' + encodeURIComponent('' + id) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetpermissionableforadminrole(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetpermissionableforadminrole(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        StaticroleServiceProxy.prototype.processGetpermissionableforadminrole = function (response) {
            var e_293, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_293_1) { e_293 = { error: e_293_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_293) throw e_293.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_294, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_23 = __values(resultData200), resultData200_23_1 = resultData200_23.next(); !resultData200_23_1.done; resultData200_23_1 = resultData200_23.next()) {
                                var item = resultData200_23_1.value;
                                result200.push(SysPermissionAdminDto.fromJS(item));
                            }
                        }
                        catch (e_294_1) { e_294 = { error: e_294_1 }; }
                        finally {
                            try {
                                if (resultData200_23_1 && !resultData200_23_1.done && (_a = resultData200_23.return)) _a.call(resultData200_23);
                            }
                            finally { if (e_294) throw e_294.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param loaiBenhVien (optional)
         * @return Success
         */
        StaticroleServiceProxy.prototype.permissionloaibenhvien = function (loaiBenhVien) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/staticrole/permissionloaibenhvien?';
            if (loaiBenhVien === null)
                throw new Error('The parameter \'loaiBenhVien\' cannot be null.');
            else if (loaiBenhVien !== undefined)
                url_ += 'loaiBenhVien=' + encodeURIComponent('' + loaiBenhVien) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processPermissionloaibenhvien(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processPermissionloaibenhvien(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        StaticroleServiceProxy.prototype.processPermissionloaibenhvien = function (response) {
            var e_295, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_295_1) { e_295 = { error: e_295_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_295) throw e_295.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_296, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_24 = __values(resultData200), resultData200_24_1 = resultData200_24.next(); !resultData200_24_1.done; resultData200_24_1 = resultData200_24.next()) {
                                var item = resultData200_24_1.value;
                                result200.push(SysPermissionLoaiBenhVienEntity.fromJS(item));
                            }
                        }
                        catch (e_296_1) { e_296 = { error: e_296_1 }; }
                        finally {
                            try {
                                if (resultData200_24_1 && !resultData200_24_1.done && (_a = resultData200_24.return)) _a.call(resultData200_24);
                            }
                            finally { if (e_296) throw e_296.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        StaticroleServiceProxy.prototype.setpermissionloaibenhvien = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/staticrole/setpermissionloaibenhvien';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSetpermissionloaibenhvien(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSetpermissionloaibenhvien(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        StaticroleServiceProxy.prototype.processSetpermissionloaibenhvien = function (response) {
            var e_297, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_297_1) { e_297 = { error: e_297_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_297) throw e_297.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return StaticroleServiceProxy;
    }());
    StaticroleServiceProxy.ɵfac = function StaticroleServiceProxy_Factory(t) { return new (t || StaticroleServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    StaticroleServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: StaticroleServiceProxy, factory: StaticroleServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(StaticroleServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var SysroleServiceProxy = /** @class */ (function () {
        function SysroleServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        SysroleServiceProxy.prototype.setpermissionforsysrole = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sysrole/setpermissionforsysrole';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSetpermissionforsysrole(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSetpermissionforsysrole(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SysroleServiceProxy.prototype.processSetpermissionforsysrole = function (response) {
            var e_298, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_298_1) { e_298 = { error: e_298_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_298) throw e_298.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param sysRoleId (optional)
         * @return Success
         */
        SysroleServiceProxy.prototype.getpermissiongranted = function (sysRoleId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sysrole/getpermissiongranted?';
            if (sysRoleId === null)
                throw new Error('The parameter \'sysRoleId\' cannot be null.');
            else if (sysRoleId !== undefined)
                url_ += 'sysRoleId=' + encodeURIComponent('' + sysRoleId) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetpermissiongranted(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetpermissiongranted(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SysroleServiceProxy.prototype.processGetpermissiongranted = function (response) {
            var e_299, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_299_1) { e_299 = { error: e_299_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_299) throw e_299.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SysRolePermissionDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        SysroleServiceProxy.prototype.getlistrolecoso = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sysrole/getlistrolecoso';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlistrolecoso(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlistrolecoso(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SysroleServiceProxy.prototype.processGetlistrolecoso = function (response) {
            var e_300, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_300_1) { e_300 = { error: e_300_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_300) throw e_300.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfSysRoleDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        SysroleServiceProxy.prototype.upsertrolecoso = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sysrole/upsertrolecoso';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpsertrolecoso(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpsertrolecoso(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SysroleServiceProxy.prototype.processUpsertrolecoso = function (response) {
            var e_301, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_301_1) { e_301 = { error: e_301_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_301) throw e_301.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfSysRoleDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param id (optional)
         * @return Success
         */
        SysroleServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sysrole/getbyid?';
            if (id === null)
                throw new Error('The parameter \'id\' cannot be null.');
            else if (id !== undefined)
                url_ += 'id=' + encodeURIComponent('' + id) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SysroleServiceProxy.prototype.processGetbyid = function (response) {
            var e_302, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_302_1) { e_302 = { error: e_302_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_302) throw e_302.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SysRoleDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        SysroleServiceProxy.prototype.xoarolecoso = function (sysRoleId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/sysrole/xoarolecoso/{sysRoleId}';
            if (sysRoleId === undefined || sysRoleId === null)
                throw new Error('The parameter \'sysRoleId\' must be defined.');
            url_ = url_.replace('{sysRoleId}', encodeURIComponent('' + sysRoleId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processXoarolecoso(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processXoarolecoso(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        SysroleServiceProxy.prototype.processXoarolecoso = function (response) {
            var e_303, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_303_1) { e_303 = { error: e_303_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_303) throw e_303.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfInt64.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return SysroleServiceProxy;
    }());
    SysroleServiceProxy.ɵfac = function SysroleServiceProxy_Factory(t) { return new (t || SysroleServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    SysroleServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: SysroleServiceProxy, factory: SysroleServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(SysroleServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var TaikhoanadminServiceProxy = /** @class */ (function () {
        function TaikhoanadminServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoanadminServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoanadminServiceProxy.prototype.processGetlist = function (response) {
            var e_304, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_304_1) { e_304 = { error: e_304_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_304) throw e_304.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfSysUserDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoanadminServiceProxy.prototype.getsysroleadmincoso = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/getsysroleadmincoso';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetsysroleadmincoso(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetsysroleadmincoso(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoanadminServiceProxy.prototype.processGetsysroleadmincoso = function (response) {
            var e_305, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_305_1) { e_305 = { error: e_305_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_305) throw e_305.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_306, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_25 = __values(resultData200), resultData200_25_1 = resultData200_25.next(); !resultData200_25_1.done; resultData200_25_1 = resultData200_25.next()) {
                                var item = resultData200_25_1.value;
                                result200.push(SysRoleDto.fromJS(item));
                            }
                        }
                        catch (e_306_1) { e_306 = { error: e_306_1 }; }
                        finally {
                            try {
                                if (resultData200_25_1 && !resultData200_25_1.done && (_a = resultData200_25.return)) _a.call(resultData200_25);
                            }
                            finally { if (e_306) throw e_306.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoanadminServiceProxy.prototype.taotaikhoanadmincoso = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/taotaikhoanadmincoso';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processTaotaikhoanadmincoso(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processTaotaikhoanadmincoso(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoanadminServiceProxy.prototype.processTaotaikhoanadmincoso = function (response) {
            var e_307, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_307_1) { e_307 = { error: e_307_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_307) throw e_307.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfSysUserDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoanadminServiceProxy.prototype.capnhapthongtin = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/capnhapthongtin';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCapnhapthongtin(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCapnhapthongtin(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoanadminServiceProxy.prototype.processCapnhapthongtin = function (response) {
            var e_308, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_308_1) { e_308 = { error: e_308_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_308) throw e_308.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfSysUserDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoanadminServiceProxy.prototype.doimatkhau = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/doimatkhau';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processDoimatkhau(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processDoimatkhau(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoanadminServiceProxy.prototype.processDoimatkhau = function (response) {
            var e_309, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_309_1) { e_309 = { error: e_309_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_309) throw e_309.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoanadminServiceProxy.prototype.xoataikhoan = function (userId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/xoataikhoan/{userId}';
            if (userId === undefined || userId === null)
                throw new Error('The parameter \'userId\' must be defined.');
            url_ = url_.replace('{userId}', encodeURIComponent('' + userId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processXoataikhoan(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processXoataikhoan(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoanadminServiceProxy.prototype.processXoataikhoan = function (response) {
            var e_310, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_310_1) { e_310 = { error: e_310_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_310) throw e_310.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfGuid.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoanadminServiceProxy.prototype.lock = function (userId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/lock/{userId}';
            if (userId === undefined || userId === null)
                throw new Error('The parameter \'userId\' must be defined.');
            url_ = url_.replace('{userId}', encodeURIComponent('' + userId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processLock(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processLock(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoanadminServiceProxy.prototype.processLock = function (response) {
            var e_311, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_311_1) { e_311 = { error: e_311_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_311) throw e_311.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoanadminServiceProxy.prototype.unlock = function (userId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoanadmin/unlock/{userId}';
            if (userId === undefined || userId === null)
                throw new Error('The parameter \'userId\' must be defined.');
            url_ = url_.replace('{userId}', encodeURIComponent('' + userId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUnlock(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUnlock(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoanadminServiceProxy.prototype.processUnlock = function (response) {
            var e_312, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_312_1) { e_312 = { error: e_312_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_312) throw e_312.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return TaikhoanadminServiceProxy;
    }());
    TaikhoanadminServiceProxy.ɵfac = function TaikhoanadminServiceProxy_Factory(t) { return new (t || TaikhoanadminServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    TaikhoanadminServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: TaikhoanadminServiceProxy, factory: TaikhoanadminServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(TaikhoanadminServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var TaikhoancosoServiceProxy = /** @class */ (function () {
        function TaikhoancosoServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processGetlist = function (response) {
            var e_313, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_313_1) { e_313 = { error: e_313_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_313) throw e_313.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfSysUserDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.taotaikhoancoso = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/taotaikhoancoso';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processTaotaikhoancoso(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processTaotaikhoancoso(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processTaotaikhoancoso = function (response) {
            var e_314, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_314_1) { e_314 = { error: e_314_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_314) throw e_314.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfSysUserDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.capnhapthongtin = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/capnhapthongtin';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCapnhapthongtin(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCapnhapthongtin(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processCapnhapthongtin = function (response) {
            var e_315, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_315_1) { e_315 = { error: e_315_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_315) throw e_315.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfSysUserDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param id (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getbyid?';
            if (id === null)
                throw new Error('The parameter \'id\' cannot be null.');
            else if (id !== undefined)
                url_ += 'id=' + encodeURIComponent('' + id) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processGetbyid = function (response) {
            var e_316, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_316_1) { e_316 = { error: e_316_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_316) throw e_316.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SysUserDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.getdanhsachrole = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getdanhsachrole';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetdanhsachrole(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetdanhsachrole(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processGetdanhsachrole = function (response) {
            var e_317, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_317_1) { e_317 = { error: e_317_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_317) throw e_317.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_318, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_26 = __values(resultData200), resultData200_26_1 = resultData200_26.next(); !resultData200_26_1.done; resultData200_26_1 = resultData200_26.next()) {
                                var item = resultData200_26_1.value;
                                result200.push(RoleAbleDto.fromJS(item));
                            }
                        }
                        catch (e_318_1) { e_318 = { error: e_318_1 }; }
                        finally {
                            try {
                                if (resultData200_26_1 && !resultData200_26_1.done && (_a = resultData200_26.return)) _a.call(resultData200_26);
                            }
                            finally { if (e_318) throw e_318.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.setroleforuser = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/setroleforuser';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSetroleforuser(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSetroleforuser(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processSetroleforuser = function (response) {
            var e_319, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_319_1) { e_319 = { error: e_319_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_319) throw e_319.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param userId (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.getuserrole = function (userId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getuserrole?';
            if (userId === null)
                throw new Error('The parameter \'userId\' cannot be null.');
            else if (userId !== undefined)
                url_ += 'userId=' + encodeURIComponent('' + userId) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetuserrole(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetuserrole(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processGetuserrole = function (response) {
            var e_320, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_320_1) { e_320 = { error: e_320_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_320) throw e_320.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_321, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_27 = __values(resultData200), resultData200_27_1 = resultData200_27.next(); !resultData200_27_1.done; resultData200_27_1 = resultData200_27.next()) {
                                var item = resultData200_27_1.value;
                                result200.push(SysUserRoleEntity.fromJS(item));
                            }
                        }
                        catch (e_321_1) { e_321 = { error: e_321_1 }; }
                        finally {
                            try {
                                if (resultData200_27_1 && !resultData200_27_1.done && (_a = resultData200_27.return)) _a.call(resultData200_27);
                            }
                            finally { if (e_321) throw e_321.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.doimatkhau = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/doimatkhau';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processDoimatkhau(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processDoimatkhau(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processDoimatkhau = function (response) {
            var e_322, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_322_1) { e_322 = { error: e_322_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_322) throw e_322.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.getlistcauhinhsysappprivate = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getlistcauhinhsysappprivate';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlistcauhinhsysappprivate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlistcauhinhsysappprivate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processGetlistcauhinhsysappprivate = function (response) {
            var e_323, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_323_1) { e_323 = { error: e_323_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_323) throw e_323.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DanhSachCauHinhSysAppPrivateRoleDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param id (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.getlistdacauhinhsysapp = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/getlistdacauhinhsysapp?';
            if (id === null)
                throw new Error('The parameter \'id\' cannot be null.');
            else if (id !== undefined)
                url_ += 'id=' + encodeURIComponent('' + id) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlistdacauhinhsysapp(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlistdacauhinhsysapp(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processGetlistdacauhinhsysapp = function (response) {
            var e_324, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_324_1) { e_324 = { error: e_324_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_324) throw e_324.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_325, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_28 = __values(resultData200), resultData200_28_1 = resultData200_28.next(); !resultData200_28_1.done; resultData200_28_1 = resultData200_28.next()) {
                                var item = resultData200_28_1.value;
                                result200.push(SysAppPrivateRoleDto.fromJS(item));
                            }
                        }
                        catch (e_325_1) { e_325 = { error: e_325_1 }; }
                        finally {
                            try {
                                if (resultData200_28_1 && !resultData200_28_1.done && (_a = resultData200_28.return)) _a.call(resultData200_28);
                            }
                            finally { if (e_325) throw e_325.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.luusysappprivateroleuser = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/luusysappprivateroleuser';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processLuusysappprivateroleuser(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processLuusysappprivateroleuser(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processLuusysappprivateroleuser = function (response) {
            var e_326, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_326_1) { e_326 = { error: e_326_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_326) throw e_326.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.xoataikhoan = function (userId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/xoataikhoan/{userId}';
            if (userId === undefined || userId === null)
                throw new Error('The parameter \'userId\' must be defined.');
            url_ = url_.replace('{userId}', encodeURIComponent('' + userId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processXoataikhoan(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processXoataikhoan(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processXoataikhoan = function (response) {
            var e_327, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_327_1) { e_327 = { error: e_327_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_327) throw e_327.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = CommonResultDtoOfGuid.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.lock = function (userId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/lock/{userId}';
            if (userId === undefined || userId === null)
                throw new Error('The parameter \'userId\' must be defined.');
            url_ = url_.replace('{userId}', encodeURIComponent('' + userId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processLock(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processLock(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processLock = function (response) {
            var e_328, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_328_1) { e_328 = { error: e_328_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_328) throw e_328.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TaikhoancosoServiceProxy.prototype.unlock = function (userId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/taikhoancoso/unlock/{userId}';
            if (userId === undefined || userId === null)
                throw new Error('The parameter \'userId\' must be defined.');
            url_ = url_.replace('{userId}', encodeURIComponent('' + userId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUnlock(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUnlock(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TaikhoancosoServiceProxy.prototype.processUnlock = function (response) {
            var e_329, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_329_1) { e_329 = { error: e_329_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_329) throw e_329.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return TaikhoancosoServiceProxy;
    }());
    TaikhoancosoServiceProxy.ɵfac = function TaikhoancosoServiceProxy_Factory(t) { return new (t || TaikhoancosoServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    TaikhoancosoServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: TaikhoancosoServiceProxy, factory: TaikhoancosoServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(TaikhoancosoServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var ThamsobenhvienServiceProxy = /** @class */ (function () {
        function ThamsobenhvienServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.updatevalue = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/updatevalue';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdatevalue(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdatevalue(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processUpdatevalue = function (response) {
            var e_330, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_330_1) { e_330 = { error: e_330_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_330) throw e_330.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.updatechanged = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/updatechanged';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdatechanged(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdatechanged(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processUpdatechanged = function (response) {
            var e_331, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_331_1) { e_331 = { error: e_331_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_331) throw e_331.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.dongbothamsohethong = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/dongbothamsohethong';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processDongbothamsohethong(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processDongbothamsohethong(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processDongbothamsohethong = function (response) {
            var e_332, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_332_1) { e_332 = { error: e_332_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_332) throw e_332.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param id (optional)
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.cauhinhthamsohethong = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/cauhinhthamsohethong?';
            if (id === null)
                throw new Error('The parameter \'id\' cannot be null.');
            else if (id !== undefined)
                url_ += 'Id=' + encodeURIComponent('' + id) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCauhinhthamsohethong(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCauhinhthamsohethong(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processCauhinhthamsohethong = function (response) {
            var e_333, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_333_1) { e_333 = { error: e_333_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_333) throw e_333.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processGetlist = function (response) {
            var e_334, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_334_1) { e_334 = { error: e_334_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_334) throw e_334.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfSysAppSettingsDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processGetbyid = function (response) {
            var e_335, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_335_1) { e_335 = { error: e_335_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_335) throw e_335.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SysAppSettingsDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processCreate = function (response) {
            var e_336, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_336_1) { e_336 = { error: e_336_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_336) throw e_336.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SysAppSettingsDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processUpdate = function (response) {
            var e_337, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_337_1) { e_337 = { error: e_337_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_337) throw e_337.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = SysAppSettingsDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ThamsobenhvienServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsobenhvien/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsobenhvienServiceProxy.prototype.processRemovebyid = function (response) {
            var e_338, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_338_1) { e_338 = { error: e_338_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_338) throw e_338.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return ThamsobenhvienServiceProxy;
    }());
    ThamsobenhvienServiceProxy.ɵfac = function ThamsobenhvienServiceProxy_Factory(t) { return new (t || ThamsobenhvienServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    ThamsobenhvienServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: ThamsobenhvienServiceProxy, factory: ThamsobenhvienServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(ThamsobenhvienServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var ThamsohethongServiceProxy = /** @class */ (function () {
        function ThamsohethongServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        ThamsohethongServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsohethong/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsohethongServiceProxy.prototype.processGetlist = function (response) {
            var e_339, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_339_1) { e_339 = { error: e_339_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_339) throw e_339.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfThamSoHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ThamsohethongServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsohethong/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsohethongServiceProxy.prototype.processGetbyid = function (response) {
            var e_340, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_340_1) { e_340 = { error: e_340_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_340) throw e_340.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ThamSoHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ThamsohethongServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsohethong/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsohethongServiceProxy.prototype.processCreate = function (response) {
            var e_341, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_341_1) { e_341 = { error: e_341_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_341) throw e_341.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ThamSoHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ThamsohethongServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsohethong/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsohethongServiceProxy.prototype.processUpdate = function (response) {
            var e_342, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_342_1) { e_342 = { error: e_342_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_342) throw e_342.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ThamSoHeThongDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ThamsohethongServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thamsohethong/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThamsohethongServiceProxy.prototype.processRemovebyid = function (response) {
            var e_343, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_343_1) { e_343 = { error: e_343_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_343) throw e_343.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return ThamsohethongServiceProxy;
    }());
    ThamsohethongServiceProxy.ɵfac = function ThamsohethongServiceProxy_Factory(t) { return new (t || ThamsohethongServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    ThamsohethongServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: ThamsohethongServiceProxy, factory: ThamsohethongServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(ThamsohethongServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var ThietbiServiceProxy = /** @class */ (function () {
        function ThietbiServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        ThietbiServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thietbi/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThietbiServiceProxy.prototype.processGetlist = function (response) {
            var e_344, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_344_1) { e_344 = { error: e_344_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_344) throw e_344.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfThietBiDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ThietbiServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thietbi/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThietbiServiceProxy.prototype.processGetbyid = function (response) {
            var e_345, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_345_1) { e_345 = { error: e_345_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_345) throw e_345.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ThietBiDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ThietbiServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thietbi/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThietbiServiceProxy.prototype.processCreate = function (response) {
            var e_346, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_346_1) { e_346 = { error: e_346_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_346) throw e_346.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ThietBiDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ThietbiServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thietbi/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThietbiServiceProxy.prototype.processUpdate = function (response) {
            var e_347, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_347_1) { e_347 = { error: e_347_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_347) throw e_347.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ThietBiDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ThietbiServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/thietbi/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ThietbiServiceProxy.prototype.processRemovebyid = function (response) {
            var e_348, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_348_1) { e_348 = { error: e_348_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_348) throw e_348.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return ThietbiServiceProxy;
    }());
    ThietbiServiceProxy.ɵfac = function ThietbiServiceProxy_Factory(t) { return new (t || ThietbiServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    ThietbiServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: ThietbiServiceProxy, factory: ThietbiServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(ThietbiServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var TienteServiceProxy = /** @class */ (function () {
        function TienteServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        TienteServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tiente/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TienteServiceProxy.prototype.processCreate = function (response) {
            var e_349, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_349_1) { e_349 = { error: e_349_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_349) throw e_349.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = TienTeDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TienteServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tiente/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TienteServiceProxy.prototype.processUpdate = function (response) {
            var e_350, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_350_1) { e_350 = { error: e_350_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_350) throw e_350.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = TienTeDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TienteServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tiente/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TienteServiceProxy.prototype.processGetlist = function (response) {
            var e_351, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_351_1) { e_351 = { error: e_351_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_351) throw e_351.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfTienTeDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TienteServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tiente/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TienteServiceProxy.prototype.processGetbyid = function (response) {
            var e_352, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_352_1) { e_352 = { error: e_352_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_352) throw e_352.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = TienTeDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TienteServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tiente/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TienteServiceProxy.prototype.processRemovebyid = function (response) {
            var e_353, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_353_1) { e_353 = { error: e_353_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_353) throw e_353.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return TienteServiceProxy;
    }());
    TienteServiceProxy.ɵfac = function TienteServiceProxy_Factory(t) { return new (t || TienteServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    TienteServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: TienteServiceProxy, factory: TienteServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(TienteServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var TientetygiaServiceProxy = /** @class */ (function () {
        function TientetygiaServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        TientetygiaServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tientetygia/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TientetygiaServiceProxy.prototype.processGetlist = function (response) {
            var e_354, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_354_1) { e_354 = { error: e_354_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_354) throw e_354.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfTienTeTyGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TientetygiaServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tientetygia/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TientetygiaServiceProxy.prototype.processGetbyid = function (response) {
            var e_355, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_355_1) { e_355 = { error: e_355_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_355) throw e_355.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = TienTeTyGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TientetygiaServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tientetygia/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TientetygiaServiceProxy.prototype.processCreate = function (response) {
            var e_356, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_356_1) { e_356 = { error: e_356_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_356) throw e_356.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = TienTeTyGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        TientetygiaServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tientetygia/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TientetygiaServiceProxy.prototype.processUpdate = function (response) {
            var e_357, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_357_1) { e_357 = { error: e_357_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_357) throw e_357.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = TienTeTyGiaDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        TientetygiaServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/tientetygia/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        TientetygiaServiceProxy.prototype.processRemovebyid = function (response) {
            var e_358, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_358_1) { e_358 = { error: e_358_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_358) throw e_358.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return TientetygiaServiceProxy;
    }());
    TientetygiaServiceProxy.ɵfac = function TientetygiaServiceProxy_Factory(t) { return new (t || TientetygiaServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    TientetygiaServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: TientetygiaServiceProxy, factory: TientetygiaServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(TientetygiaServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var ToathuocmauServiceProxy = /** @class */ (function () {
        function ToathuocmauServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        ToathuocmauServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmau/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauServiceProxy.prototype.processGetlist = function (response) {
            var e_359, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_359_1) { e_359 = { error: e_359_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_359) throw e_359.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfDSToaThuocMauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ToathuocmauServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmau/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauServiceProxy.prototype.processGetbyid = function (response) {
            var e_360, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_360_1) { e_360 = { error: e_360_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_360) throw e_360.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DSToaThuocMauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ToathuocmauServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmau/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauServiceProxy.prototype.processCreate = function (response) {
            var e_361, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_361_1) { e_361 = { error: e_361_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_361) throw e_361.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DSToaThuocMauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ToathuocmauServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmau/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauServiceProxy.prototype.processUpdate = function (response) {
            var e_362, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_362_1) { e_362 = { error: e_362_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_362) throw e_362.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = DSToaThuocMauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ToathuocmauServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmau/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauServiceProxy.prototype.processRemovebyid = function (response) {
            var e_363, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_363_1) { e_363 = { error: e_363_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_363) throw e_363.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return ToathuocmauServiceProxy;
    }());
    ToathuocmauServiceProxy.ɵfac = function ToathuocmauServiceProxy_Factory(t) { return new (t || ToathuocmauServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    ToathuocmauServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: ToathuocmauServiceProxy, factory: ToathuocmauServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(ToathuocmauServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var ToathuocmauchitietServiceProxy = /** @class */ (function () {
        function ToathuocmauchitietServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        ToathuocmauchitietServiceProxy.prototype.removebycode = function (ma) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/removebycode/{ma}';
            if (ma === undefined || ma === null)
                throw new Error('The parameter \'ma\' must be defined.');
            url_ = url_.replace('{ma}', encodeURIComponent('' + ma));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebycode(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebycode(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauchitietServiceProxy.prototype.processRemovebycode = function (response) {
            var e_364, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_364_1) { e_364 = { error: e_364_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_364) throw e_364.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ToathuocmauchitietServiceProxy.prototype.checkcode = function (ma) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/checkcode/{ma}';
            if (ma === undefined || ma === null)
                throw new Error('The parameter \'ma\' must be defined.');
            url_ = url_.replace('{ma}', encodeURIComponent('' + ma));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCheckcode(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCheckcode(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauchitietServiceProxy.prototype.processCheckcode = function (response) {
            var e_365, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_365_1) { e_365 = { error: e_365_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_365) throw e_365.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ToathuocmauchitietServiceProxy.prototype.savetoathuocmauchitiet = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/savetoathuocmauchitiet';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSavetoathuocmauchitiet(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSavetoathuocmauchitiet(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauchitietServiceProxy.prototype.processSavetoathuocmauchitiet = function (response) {
            var e_366, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_366_1) { e_366 = { error: e_366_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_366) throw e_366.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ToathuocmauchitietServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauchitietServiceProxy.prototype.processGetlist = function (response) {
            var e_367, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_367_1) { e_367 = { error: e_367_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_367) throw e_367.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfToaThuocMauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ToathuocmauchitietServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauchitietServiceProxy.prototype.processGetbyid = function (response) {
            var e_368, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_368_1) { e_368 = { error: e_368_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_368) throw e_368.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ToaThuocMauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ToathuocmauchitietServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauchitietServiceProxy.prototype.processCreate = function (response) {
            var e_369, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_369_1) { e_369 = { error: e_369_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_369) throw e_369.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ToaThuocMauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        ToathuocmauchitietServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauchitietServiceProxy.prototype.processUpdate = function (response) {
            var e_370, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_370_1) { e_370 = { error: e_370_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_370) throw e_370.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = ToaThuocMauDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        ToathuocmauchitietServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/toathuocmauchitiet/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        ToathuocmauchitietServiceProxy.prototype.processRemovebyid = function (response) {
            var e_371, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_371_1) { e_371 = { error: e_371_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_371) throw e_371.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return ToathuocmauchitietServiceProxy;
    }());
    ToathuocmauchitietServiceProxy.ɵfac = function ToathuocmauchitietServiceProxy_Factory(t) { return new (t || ToathuocmauchitietServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    ToathuocmauchitietServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: ToathuocmauchitietServiceProxy, factory: ToathuocmauchitietServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(ToathuocmauchitietServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var UserextensionServiceProxy = /** @class */ (function () {
        function UserextensionServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @return Success
         */
        UserextensionServiceProxy.prototype.usersession = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/userextension/usersession';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUsersession(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUsersession(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        UserextensionServiceProxy.prototype.processUsersession = function (response) {
            var e_372, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_372_1) { e_372 = { error: e_372_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_372) throw e_372.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = UserSessionDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        UserextensionServiceProxy.prototype.clearusersessioncache = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/userextension/clearusersessioncache';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processClearusersessioncache(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processClearusersessioncache(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        UserextensionServiceProxy.prototype.processClearusersessioncache = function (response) {
            var e_373, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_373_1) { e_373 = { error: e_373_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_373) throw e_373.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        UserextensionServiceProxy.prototype.switchbenhvienid = function (benhVienId) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/userextension/switchbenhvienid/{benhVienId}';
            if (benhVienId === undefined || benhVienId === null)
                throw new Error('The parameter \'benhVienId\' must be defined.');
            url_ = url_.replace('{benhVienId}', encodeURIComponent('' + benhVienId));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processSwitchbenhvienid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processSwitchbenhvienid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        UserextensionServiceProxy.prototype.processSwitchbenhvienid = function (response) {
            var e_374, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_374_1) { e_374 = { error: e_374_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_374) throw e_374.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return UserextensionServiceProxy;
    }());
    UserextensionServiceProxy.ɵfac = function UserextensionServiceProxy_Factory(t) { return new (t || UserextensionServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    UserextensionServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: UserextensionServiceProxy, factory: UserextensionServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(UserextensionServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var VacxinServiceProxy = /** @class */ (function () {
        function VacxinServiceProxy(http, baseUrl) {
            this.jsonParseReviver = undefined;
            this.http = http;
            this.baseUrl = baseUrl ? baseUrl : '';
        }
        /**
         * @param body (optional)
         * @return Success
         */
        VacxinServiceProxy.prototype.getlist = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/getlist';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetlist(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetlist(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processGetlist = function (response) {
            var e_375, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_375_1) { e_375 = { error: e_375_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_375) throw e_375.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = PagedResultDtoOfVacXinDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        VacxinServiceProxy.prototype.getbyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/getbyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processGetbyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processGetbyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processGetbyid = function (response) {
            var e_376, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_376_1) { e_376 = { error: e_376_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_376) throw e_376.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = VacXinDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        VacxinServiceProxy.prototype.create = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/create';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processCreate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processCreate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processCreate = function (response) {
            var e_377, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_377_1) { e_377 = { error: e_377_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_377) throw e_377.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = VacXinDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        VacxinServiceProxy.prototype.update = function (id, body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/update/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json',
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processUpdate(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processUpdate(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processUpdate = function (response) {
            var e_378, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_378_1) { e_378 = { error: e_378_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_378) throw e_378.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = VacXinDto.fromJS(resultData200);
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param body (optional)
         * @return Success
         */
        VacxinServiceProxy.prototype.editvacxinkhangnguyen = function (body) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/editvacxinkhangnguyen';
            url_ = url_.replace(/[?&]$/, '');
            var content_ = JSON.stringify(body);
            var options_ = {
                body: content_,
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Content-Type': 'application/json-patch+json'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processEditvacxinkhangnguyen(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processEditvacxinkhangnguyen(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processEditvacxinkhangnguyen = function (response) {
            var e_379, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_379_1) { e_379 = { error: e_379_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_379) throw e_379.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        VacxinServiceProxy.prototype.checktrungid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/{id}/checktrungid';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processChecktrungid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processChecktrungid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processChecktrungid = function (response) {
            var e_380, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_380_1) { e_380 = { error: e_380_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_380) throw e_380.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    result200 = resultData200 !== undefined ? resultData200 : null;
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        VacxinServiceProxy.prototype.removebyid = function (id) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/removebyid/{id}';
            if (id === undefined || id === null)
                throw new Error('The parameter \'id\' must be defined.');
            url_ = url_.replace('{id}', encodeURIComponent('' + id));
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({})
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processRemovebyid(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processRemovebyid(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processRemovebyid = function (response) {
            var e_381, _a;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_381_1) { e_381 = { error: e_381_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_381) throw e_381.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return rxjs.of(null);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        VacxinServiceProxy.prototype.comboboxdata = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/comboboxdata';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('get', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processComboboxdata(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processComboboxdata(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processComboboxdata = function (response) {
            var e_382, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_382_1) { e_382 = { error: e_382_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_382) throw e_382.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_383, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_29 = __values(resultData200), resultData200_29_1 = resultData200_29.next(); !resultData200_29_1.done; resultData200_29_1 = resultData200_29.next()) {
                                var item = resultData200_29_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_383_1) { e_383 = { error: e_383_1 }; }
                        finally {
                            try {
                                if (resultData200_29_1 && !resultData200_29_1.done && (_a = resultData200_29.return)) _a.call(resultData200_29);
                            }
                            finally { if (e_383) throw e_383.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @return Success
         */
        VacxinServiceProxy.prototype.vacxinextend = function () {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/vacxinextend';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processVacxinextend(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processVacxinextend(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processVacxinextend = function (response) {
            var e_384, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_384_1) { e_384 = { error: e_384_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_384) throw e_384.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_385, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_30 = __values(resultData200), resultData200_30_1 = resultData200_30.next(); !resultData200_30_1.done; resultData200_30_1 = resultData200_30.next()) {
                                var item = resultData200_30_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_385_1) { e_385 = { error: e_385_1 }; }
                        finally {
                            try {
                                if (resultData200_30_1 && !resultData200_30_1.done && (_a = resultData200_30.return)) _a.call(resultData200_30);
                            }
                            finally { if (e_385) throw e_385.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        /**
         * @param tcmr (optional)
         * @return Success
         */
        VacxinServiceProxy.prototype.vacxinlapkehoach = function (tcmr) {
            var _this = this;
            var url_ = this.baseUrl + '/api/danh-muc/vacxin/vacxinlapkehoach?';
            if (tcmr === null)
                throw new Error('The parameter \'tcmr\' cannot be null.');
            else if (tcmr !== undefined)
                url_ += 'tcmr=' + encodeURIComponent('' + tcmr) + '&';
            url_ = url_.replace(/[?&]$/, '');
            var options_ = {
                observe: 'response',
                responseType: 'blob',
                headers: new i1.HttpHeaders({
                    'Accept': 'text/plain'
                })
            };
            return this.http.request('post', url_, options_).pipe(operators.mergeMap(function (response_) {
                return _this.processVacxinlapkehoach(response_);
            })).pipe(operators.catchError(function (response_) {
                if (response_ instanceof i1.HttpResponseBase) {
                    try {
                        return _this.processVacxinlapkehoach(response_);
                    }
                    catch (e) {
                        return rxjs.throwError(e);
                    }
                }
                else
                    return rxjs.throwError(response_);
            }));
        };
        VacxinServiceProxy.prototype.processVacxinlapkehoach = function (response) {
            var e_386, _a;
            var _this = this;
            var status = response.status;
            var responseBlob = response instanceof i1.HttpResponse ? response.body :
                response.error instanceof Blob ? response.error : undefined;
            var _headers = {};
            if (response.headers) {
                try {
                    for (var _b = __values(response.headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        _headers[key] = response.headers.get(key);
                    }
                }
                catch (e_386_1) { e_386 = { error: e_386_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_386) throw e_386.error; }
                }
            }
            ;
            if (status === 200) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    var e_387, _a;
                    var result200 = null;
                    var resultData200 = _responseText === '' ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                    if (Array.isArray(resultData200)) {
                        result200 = [];
                        try {
                            for (var resultData200_31 = __values(resultData200), resultData200_31_1 = resultData200_31.next(); !resultData200_31_1.done; resultData200_31_1 = resultData200_31.next()) {
                                var item = resultData200_31_1.value;
                                result200.push(ComboBoxDto.fromJS(item));
                            }
                        }
                        catch (e_387_1) { e_387 = { error: e_387_1 }; }
                        finally {
                            try {
                                if (resultData200_31_1 && !resultData200_31_1.done && (_a = resultData200_31.return)) _a.call(resultData200_31);
                            }
                            finally { if (e_387) throw e_387.error; }
                        }
                    }
                    return rxjs.of(result200);
                }));
            }
            else if (status !== 200 && status !== 204) {
                return blobToText(responseBlob).pipe(operators.mergeMap(function (_responseText) {
                    return throwException('An unexpected server error occurred.', status, _responseText, _headers);
                }));
            }
            return rxjs.of(null);
        };
        return VacxinServiceProxy;
    }());
    VacxinServiceProxy.ɵfac = function VacxinServiceProxy_Factory(t) { return new (t || VacxinServiceProxy)(i0__namespace.ɵɵinject(i1.HttpClient), i0__namespace.ɵɵinject(API_BASE_URL, 8)); };
    VacxinServiceProxy.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: VacxinServiceProxy, factory: VacxinServiceProxy.ɵfac });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(VacxinServiceProxy, [{
                type: i0.Injectable
            }], function () {
            return [{ type: i1__namespace.HttpClient, decorators: [{
                            type: i0.Inject,
                            args: [i1.HttpClient]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [API_BASE_URL]
                        }] }];
        }, null);
    })();
    var ControllerInterfaceApiDescriptionModel = /** @class */ (function () {
        function ControllerInterfaceApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ControllerInterfaceApiDescriptionModel.prototype.init = function (data) {
            if (data) {
                this.type = data['type'];
            }
        };
        ControllerInterfaceApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ControllerInterfaceApiDescriptionModel();
            result.init(data);
            return result;
        };
        ControllerInterfaceApiDescriptionModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['type'] = this.type;
            return data;
        };
        return ControllerInterfaceApiDescriptionModel;
    }());
    var MethodParameterApiDescriptionModel = /** @class */ (function () {
        function MethodParameterApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        MethodParameterApiDescriptionModel.prototype.init = function (data) {
            if (data) {
                this.name = data['name'];
                this.typeAsString = data['typeAsString'];
                this.type = data['type'];
                this.typeSimple = data['typeSimple'];
                this.isOptional = data['isOptional'];
                this.defaultValue = data['defaultValue'];
            }
        };
        MethodParameterApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new MethodParameterApiDescriptionModel();
            result.init(data);
            return result;
        };
        MethodParameterApiDescriptionModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['typeAsString'] = this.typeAsString;
            data['type'] = this.type;
            data['typeSimple'] = this.typeSimple;
            data['isOptional'] = this.isOptional;
            data['defaultValue'] = this.defaultValue;
            return data;
        };
        return MethodParameterApiDescriptionModel;
    }());
    var ParameterApiDescriptionModel = /** @class */ (function () {
        function ParameterApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ParameterApiDescriptionModel.prototype.init = function (data) {
            var e_388, _a;
            if (data) {
                this.nameOnMethod = data['nameOnMethod'];
                this.name = data['name'];
                this.type = data['type'];
                this.typeSimple = data['typeSimple'];
                this.isOptional = data['isOptional'];
                this.defaultValue = data['defaultValue'];
                if (Array.isArray(data['constraintTypes'])) {
                    this.constraintTypes = [];
                    try {
                        for (var _b = __values(data['constraintTypes']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.constraintTypes.push(item);
                        }
                    }
                    catch (e_388_1) { e_388 = { error: e_388_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_388) throw e_388.error; }
                    }
                }
                this.bindingSourceId = data['bindingSourceId'];
                this.descriptorName = data['descriptorName'];
            }
        };
        ParameterApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ParameterApiDescriptionModel();
            result.init(data);
            return result;
        };
        ParameterApiDescriptionModel.prototype.toJSON = function (data) {
            var e_389, _a;
            data = typeof data === 'object' ? data : {};
            data['nameOnMethod'] = this.nameOnMethod;
            data['name'] = this.name;
            data['type'] = this.type;
            data['typeSimple'] = this.typeSimple;
            data['isOptional'] = this.isOptional;
            data['defaultValue'] = this.defaultValue;
            if (Array.isArray(this.constraintTypes)) {
                data['constraintTypes'] = [];
                try {
                    for (var _b = __values(this.constraintTypes), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['constraintTypes'].push(item);
                    }
                }
                catch (e_389_1) { e_389 = { error: e_389_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_389) throw e_389.error; }
                }
            }
            data['bindingSourceId'] = this.bindingSourceId;
            data['descriptorName'] = this.descriptorName;
            return data;
        };
        return ParameterApiDescriptionModel;
    }());
    var ReturnValueApiDescriptionModel = /** @class */ (function () {
        function ReturnValueApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ReturnValueApiDescriptionModel.prototype.init = function (data) {
            if (data) {
                this.type = data['type'];
                this.typeSimple = data['typeSimple'];
            }
        };
        ReturnValueApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ReturnValueApiDescriptionModel();
            result.init(data);
            return result;
        };
        ReturnValueApiDescriptionModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['type'] = this.type;
            data['typeSimple'] = this.typeSimple;
            return data;
        };
        return ReturnValueApiDescriptionModel;
    }());
    var ActionApiDescriptionModel = /** @class */ (function () {
        function ActionApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ActionApiDescriptionModel.prototype.init = function (data) {
            var e_390, _a, e_391, _b, e_392, _c;
            if (data) {
                this.uniqueName = data['uniqueName'];
                this.name = data['name'];
                this.httpMethod = data['httpMethod'];
                this.url = data['url'];
                if (Array.isArray(data['supportedVersions'])) {
                    this.supportedVersions = [];
                    try {
                        for (var _d = __values(data['supportedVersions']), _e = _d.next(); !_e.done; _e = _d.next()) {
                            var item = _e.value;
                            this.supportedVersions.push(item);
                        }
                    }
                    catch (e_390_1) { e_390 = { error: e_390_1 }; }
                    finally {
                        try {
                            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                        }
                        finally { if (e_390) throw e_390.error; }
                    }
                }
                if (Array.isArray(data['parametersOnMethod'])) {
                    this.parametersOnMethod = [];
                    try {
                        for (var _f = __values(data['parametersOnMethod']), _g = _f.next(); !_g.done; _g = _f.next()) {
                            var item = _g.value;
                            this.parametersOnMethod.push(MethodParameterApiDescriptionModel.fromJS(item));
                        }
                    }
                    catch (e_391_1) { e_391 = { error: e_391_1 }; }
                    finally {
                        try {
                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                        }
                        finally { if (e_391) throw e_391.error; }
                    }
                }
                if (Array.isArray(data['parameters'])) {
                    this.parameters = [];
                    try {
                        for (var _h = __values(data['parameters']), _j = _h.next(); !_j.done; _j = _h.next()) {
                            var item = _j.value;
                            this.parameters.push(ParameterApiDescriptionModel.fromJS(item));
                        }
                    }
                    catch (e_392_1) { e_392 = { error: e_392_1 }; }
                    finally {
                        try {
                            if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                        }
                        finally { if (e_392) throw e_392.error; }
                    }
                }
                this.returnValue = data['returnValue'] ? ReturnValueApiDescriptionModel.fromJS(data['returnValue']) : undefined;
            }
        };
        ActionApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ActionApiDescriptionModel();
            result.init(data);
            return result;
        };
        ActionApiDescriptionModel.prototype.toJSON = function (data) {
            var e_393, _a, e_394, _b, e_395, _c;
            data = typeof data === 'object' ? data : {};
            data['uniqueName'] = this.uniqueName;
            data['name'] = this.name;
            data['httpMethod'] = this.httpMethod;
            data['url'] = this.url;
            if (Array.isArray(this.supportedVersions)) {
                data['supportedVersions'] = [];
                try {
                    for (var _d = __values(this.supportedVersions), _e = _d.next(); !_e.done; _e = _d.next()) {
                        var item = _e.value;
                        data['supportedVersions'].push(item);
                    }
                }
                catch (e_393_1) { e_393 = { error: e_393_1 }; }
                finally {
                    try {
                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                    }
                    finally { if (e_393) throw e_393.error; }
                }
            }
            if (Array.isArray(this.parametersOnMethod)) {
                data['parametersOnMethod'] = [];
                try {
                    for (var _f = __values(this.parametersOnMethod), _g = _f.next(); !_g.done; _g = _f.next()) {
                        var item = _g.value;
                        data['parametersOnMethod'].push(item.toJSON());
                    }
                }
                catch (e_394_1) { e_394 = { error: e_394_1 }; }
                finally {
                    try {
                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                    }
                    finally { if (e_394) throw e_394.error; }
                }
            }
            if (Array.isArray(this.parameters)) {
                data['parameters'] = [];
                try {
                    for (var _h = __values(this.parameters), _j = _h.next(); !_j.done; _j = _h.next()) {
                        var item = _j.value;
                        data['parameters'].push(item.toJSON());
                    }
                }
                catch (e_395_1) { e_395 = { error: e_395_1 }; }
                finally {
                    try {
                        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                    }
                    finally { if (e_395) throw e_395.error; }
                }
            }
            data['returnValue'] = this.returnValue ? this.returnValue.toJSON() : undefined;
            return data;
        };
        return ActionApiDescriptionModel;
    }());
    var ControllerApiDescriptionModel = /** @class */ (function () {
        function ControllerApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ControllerApiDescriptionModel.prototype.init = function (data) {
            var e_396, _a;
            if (data) {
                this.controllerName = data['controllerName'];
                this.type = data['type'];
                if (Array.isArray(data['interfaces'])) {
                    this.interfaces = [];
                    try {
                        for (var _b = __values(data['interfaces']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.interfaces.push(ControllerInterfaceApiDescriptionModel.fromJS(item));
                        }
                    }
                    catch (e_396_1) { e_396 = { error: e_396_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_396) throw e_396.error; }
                    }
                }
                if (data['actions']) {
                    this.actions = {};
                    for (var key in data['actions']) {
                        if (data['actions'].hasOwnProperty(key))
                            this.actions[key] = data['actions'][key] ? ActionApiDescriptionModel.fromJS(data['actions'][key]) : new ActionApiDescriptionModel();
                    }
                }
            }
        };
        ControllerApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ControllerApiDescriptionModel();
            result.init(data);
            return result;
        };
        ControllerApiDescriptionModel.prototype.toJSON = function (data) {
            var e_397, _a;
            data = typeof data === 'object' ? data : {};
            data['controllerName'] = this.controllerName;
            data['type'] = this.type;
            if (Array.isArray(this.interfaces)) {
                data['interfaces'] = [];
                try {
                    for (var _b = __values(this.interfaces), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['interfaces'].push(item.toJSON());
                    }
                }
                catch (e_397_1) { e_397 = { error: e_397_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_397) throw e_397.error; }
                }
            }
            if (this.actions) {
                data['actions'] = {};
                for (var key in this.actions) {
                    if (this.actions.hasOwnProperty(key))
                        data['actions'][key] = this.actions[key] ? this.actions[key].toJSON() : undefined;
                }
            }
            return data;
        };
        return ControllerApiDescriptionModel;
    }());
    var ModuleApiDescriptionModel = /** @class */ (function () {
        function ModuleApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ModuleApiDescriptionModel.prototype.init = function (data) {
            if (data) {
                this.rootPath = data['rootPath'];
                this.remoteServiceName = data['remoteServiceName'];
                if (data['controllers']) {
                    this.controllers = {};
                    for (var key in data['controllers']) {
                        if (data['controllers'].hasOwnProperty(key))
                            this.controllers[key] = data['controllers'][key] ? ControllerApiDescriptionModel.fromJS(data['controllers'][key]) : new ControllerApiDescriptionModel();
                    }
                }
            }
        };
        ModuleApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ModuleApiDescriptionModel();
            result.init(data);
            return result;
        };
        ModuleApiDescriptionModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['rootPath'] = this.rootPath;
            data['remoteServiceName'] = this.remoteServiceName;
            if (this.controllers) {
                data['controllers'] = {};
                for (var key in this.controllers) {
                    if (this.controllers.hasOwnProperty(key))
                        data['controllers'][key] = this.controllers[key] ? this.controllers[key].toJSON() : undefined;
                }
            }
            return data;
        };
        return ModuleApiDescriptionModel;
    }());
    var PropertyApiDescriptionModel = /** @class */ (function () {
        function PropertyApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PropertyApiDescriptionModel.prototype.init = function (data) {
            if (data) {
                this.name = data['name'];
                this.type = data['type'];
                this.typeSimple = data['typeSimple'];
            }
        };
        PropertyApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PropertyApiDescriptionModel();
            result.init(data);
            return result;
        };
        PropertyApiDescriptionModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['type'] = this.type;
            data['typeSimple'] = this.typeSimple;
            return data;
        };
        return PropertyApiDescriptionModel;
    }());
    var TypeApiDescriptionModel = /** @class */ (function () {
        function TypeApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        TypeApiDescriptionModel.prototype.init = function (data) {
            var e_398, _a, e_399, _b, e_400, _c, e_401, _d;
            if (data) {
                this.baseType = data['baseType'];
                this.isEnum = data['isEnum'];
                if (Array.isArray(data['enumNames'])) {
                    this.enumNames = [];
                    try {
                        for (var _e = __values(data['enumNames']), _f = _e.next(); !_f.done; _f = _e.next()) {
                            var item = _f.value;
                            this.enumNames.push(item);
                        }
                    }
                    catch (e_398_1) { e_398 = { error: e_398_1 }; }
                    finally {
                        try {
                            if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                        }
                        finally { if (e_398) throw e_398.error; }
                    }
                }
                if (Array.isArray(data['enumValues'])) {
                    this.enumValues = [];
                    try {
                        for (var _g = __values(data['enumValues']), _h = _g.next(); !_h.done; _h = _g.next()) {
                            var item = _h.value;
                            this.enumValues.push(item);
                        }
                    }
                    catch (e_399_1) { e_399 = { error: e_399_1 }; }
                    finally {
                        try {
                            if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                        }
                        finally { if (e_399) throw e_399.error; }
                    }
                }
                if (Array.isArray(data['genericArguments'])) {
                    this.genericArguments = [];
                    try {
                        for (var _j = __values(data['genericArguments']), _k = _j.next(); !_k.done; _k = _j.next()) {
                            var item = _k.value;
                            this.genericArguments.push(item);
                        }
                    }
                    catch (e_400_1) { e_400 = { error: e_400_1 }; }
                    finally {
                        try {
                            if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                        }
                        finally { if (e_400) throw e_400.error; }
                    }
                }
                if (Array.isArray(data['properties'])) {
                    this.properties = [];
                    try {
                        for (var _l = __values(data['properties']), _m = _l.next(); !_m.done; _m = _l.next()) {
                            var item = _m.value;
                            this.properties.push(PropertyApiDescriptionModel.fromJS(item));
                        }
                    }
                    catch (e_401_1) { e_401 = { error: e_401_1 }; }
                    finally {
                        try {
                            if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                        }
                        finally { if (e_401) throw e_401.error; }
                    }
                }
            }
        };
        TypeApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new TypeApiDescriptionModel();
            result.init(data);
            return result;
        };
        TypeApiDescriptionModel.prototype.toJSON = function (data) {
            var e_402, _a, e_403, _b, e_404, _c, e_405, _d;
            data = typeof data === 'object' ? data : {};
            data['baseType'] = this.baseType;
            data['isEnum'] = this.isEnum;
            if (Array.isArray(this.enumNames)) {
                data['enumNames'] = [];
                try {
                    for (var _e = __values(this.enumNames), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        data['enumNames'].push(item);
                    }
                }
                catch (e_402_1) { e_402 = { error: e_402_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                    }
                    finally { if (e_402) throw e_402.error; }
                }
            }
            if (Array.isArray(this.enumValues)) {
                data['enumValues'] = [];
                try {
                    for (var _g = __values(this.enumValues), _h = _g.next(); !_h.done; _h = _g.next()) {
                        var item = _h.value;
                        data['enumValues'].push(item);
                    }
                }
                catch (e_403_1) { e_403 = { error: e_403_1 }; }
                finally {
                    try {
                        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
                    }
                    finally { if (e_403) throw e_403.error; }
                }
            }
            if (Array.isArray(this.genericArguments)) {
                data['genericArguments'] = [];
                try {
                    for (var _j = __values(this.genericArguments), _k = _j.next(); !_k.done; _k = _j.next()) {
                        var item = _k.value;
                        data['genericArguments'].push(item);
                    }
                }
                catch (e_404_1) { e_404 = { error: e_404_1 }; }
                finally {
                    try {
                        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
                    }
                    finally { if (e_404) throw e_404.error; }
                }
            }
            if (Array.isArray(this.properties)) {
                data['properties'] = [];
                try {
                    for (var _l = __values(this.properties), _m = _l.next(); !_m.done; _m = _l.next()) {
                        var item = _m.value;
                        data['properties'].push(item.toJSON());
                    }
                }
                catch (e_405_1) { e_405 = { error: e_405_1 }; }
                finally {
                    try {
                        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
                    }
                    finally { if (e_405) throw e_405.error; }
                }
            }
            return data;
        };
        return TypeApiDescriptionModel;
    }());
    var ApplicationApiDescriptionModel = /** @class */ (function () {
        function ApplicationApiDescriptionModel(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ApplicationApiDescriptionModel.prototype.init = function (data) {
            if (data) {
                if (data['modules']) {
                    this.modules = {};
                    for (var key in data['modules']) {
                        if (data['modules'].hasOwnProperty(key))
                            this.modules[key] = data['modules'][key] ? ModuleApiDescriptionModel.fromJS(data['modules'][key]) : new ModuleApiDescriptionModel();
                    }
                }
                if (data['types']) {
                    this.types = {};
                    for (var key in data['types']) {
                        if (data['types'].hasOwnProperty(key))
                            this.types[key] = data['types'][key] ? TypeApiDescriptionModel.fromJS(data['types'][key]) : new TypeApiDescriptionModel();
                    }
                }
            }
        };
        ApplicationApiDescriptionModel.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ApplicationApiDescriptionModel();
            result.init(data);
            return result;
        };
        ApplicationApiDescriptionModel.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            if (this.modules) {
                data['modules'] = {};
                for (var key in this.modules) {
                    if (this.modules.hasOwnProperty(key))
                        data['modules'][key] = this.modules[key] ? this.modules[key].toJSON() : undefined;
                }
            }
            if (this.types) {
                data['types'] = {};
                for (var key in this.types) {
                    if (this.types.hasOwnProperty(key))
                        data['types'][key] = this.types[key] ? this.types[key].toJSON() : undefined;
                }
            }
            return data;
        };
        return ApplicationApiDescriptionModel;
    }());
    var RemoteServiceValidationErrorInfo = /** @class */ (function () {
        function RemoteServiceValidationErrorInfo(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        RemoteServiceValidationErrorInfo.prototype.init = function (data) {
            var e_406, _a;
            if (data) {
                this.message = data['message'];
                if (Array.isArray(data['members'])) {
                    this.members = [];
                    try {
                        for (var _b = __values(data['members']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.members.push(item);
                        }
                    }
                    catch (e_406_1) { e_406 = { error: e_406_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_406) throw e_406.error; }
                    }
                }
            }
        };
        RemoteServiceValidationErrorInfo.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new RemoteServiceValidationErrorInfo();
            result.init(data);
            return result;
        };
        RemoteServiceValidationErrorInfo.prototype.toJSON = function (data) {
            var e_407, _a;
            data = typeof data === 'object' ? data : {};
            data['message'] = this.message;
            if (Array.isArray(this.members)) {
                data['members'] = [];
                try {
                    for (var _b = __values(this.members), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['members'].push(item);
                    }
                }
                catch (e_407_1) { e_407 = { error: e_407_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_407) throw e_407.error; }
                }
            }
            return data;
        };
        return RemoteServiceValidationErrorInfo;
    }());
    var RemoteServiceErrorInfo = /** @class */ (function () {
        function RemoteServiceErrorInfo(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        RemoteServiceErrorInfo.prototype.init = function (data) {
            var e_408, _a;
            if (data) {
                this.code = data['code'];
                this.message = data['message'];
                this.details = data['details'];
                if (data['data']) {
                    this.data = {};
                    for (var key in data['data']) {
                        if (data['data'].hasOwnProperty(key))
                            this.data[key] = data['data'][key];
                    }
                }
                if (Array.isArray(data['validationErrors'])) {
                    this.validationErrors = [];
                    try {
                        for (var _b = __values(data['validationErrors']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.validationErrors.push(RemoteServiceValidationErrorInfo.fromJS(item));
                        }
                    }
                    catch (e_408_1) { e_408 = { error: e_408_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_408) throw e_408.error; }
                    }
                }
            }
        };
        RemoteServiceErrorInfo.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new RemoteServiceErrorInfo();
            result.init(data);
            return result;
        };
        RemoteServiceErrorInfo.prototype.toJSON = function (data) {
            var e_409, _a;
            data = typeof data === 'object' ? data : {};
            data['code'] = this.code;
            data['message'] = this.message;
            data['details'] = this.details;
            if (this.data) {
                data['data'] = {};
                for (var key in this.data) {
                    if (this.data.hasOwnProperty(key))
                        data['data'][key] = this.data[key];
                }
            }
            if (Array.isArray(this.validationErrors)) {
                data['validationErrors'] = [];
                try {
                    for (var _b = __values(this.validationErrors), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['validationErrors'].push(item.toJSON());
                    }
                }
                catch (e_409_1) { e_409 = { error: e_409_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_409) throw e_409.error; }
                }
            }
            return data;
        };
        return RemoteServiceErrorInfo;
    }());
    var RemoteServiceErrorResponse = /** @class */ (function () {
        function RemoteServiceErrorResponse(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        RemoteServiceErrorResponse.prototype.init = function (data) {
            if (data) {
                this.error = data['error'] ? RemoteServiceErrorInfo.fromJS(data['error']) : undefined;
            }
        };
        RemoteServiceErrorResponse.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new RemoteServiceErrorResponse();
            result.init(data);
            return result;
        };
        RemoteServiceErrorResponse.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['error'] = this.error ? this.error.toJSON() : undefined;
            return data;
        };
        return RemoteServiceErrorResponse;
    }());
    var LanguageInfo = /** @class */ (function () {
        function LanguageInfo(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LanguageInfo.prototype.init = function (data) {
            if (data) {
                this.cultureName = data['cultureName'];
                this.uiCultureName = data['uiCultureName'];
                this.displayName = data['displayName'];
                this.flagIcon = data['flagIcon'];
            }
        };
        LanguageInfo.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LanguageInfo();
            result.init(data);
            return result;
        };
        LanguageInfo.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['cultureName'] = this.cultureName;
            data['uiCultureName'] = this.uiCultureName;
            data['displayName'] = this.displayName;
            data['flagIcon'] = this.flagIcon;
            return data;
        };
        return LanguageInfo;
    }());
    var DateTimeFormatDto = /** @class */ (function () {
        function DateTimeFormatDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DateTimeFormatDto.prototype.init = function (data) {
            if (data) {
                this.calendarAlgorithmType = data['calendarAlgorithmType'];
                this.dateTimeFormatLong = data['dateTimeFormatLong'];
                this.shortDatePattern = data['shortDatePattern'];
                this.fullDateTimePattern = data['fullDateTimePattern'];
                this.dateSeparator = data['dateSeparator'];
                this.shortTimePattern = data['shortTimePattern'];
                this.longTimePattern = data['longTimePattern'];
            }
        };
        DateTimeFormatDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DateTimeFormatDto();
            result.init(data);
            return result;
        };
        DateTimeFormatDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['calendarAlgorithmType'] = this.calendarAlgorithmType;
            data['dateTimeFormatLong'] = this.dateTimeFormatLong;
            data['shortDatePattern'] = this.shortDatePattern;
            data['fullDateTimePattern'] = this.fullDateTimePattern;
            data['dateSeparator'] = this.dateSeparator;
            data['shortTimePattern'] = this.shortTimePattern;
            data['longTimePattern'] = this.longTimePattern;
            return data;
        };
        return DateTimeFormatDto;
    }());
    var CurrentCultureDto = /** @class */ (function () {
        function CurrentCultureDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CurrentCultureDto.prototype.init = function (data) {
            if (data) {
                this.displayName = data['displayName'];
                this.englishName = data['englishName'];
                this.threeLetterIsoLanguageName = data['threeLetterIsoLanguageName'];
                this.twoLetterIsoLanguageName = data['twoLetterIsoLanguageName'];
                this.isRightToLeft = data['isRightToLeft'];
                this.cultureName = data['cultureName'];
                this.name = data['name'];
                this.nativeName = data['nativeName'];
                this.dateTimeFormat = data['dateTimeFormat'] ? DateTimeFormatDto.fromJS(data['dateTimeFormat']) : undefined;
            }
        };
        CurrentCultureDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CurrentCultureDto();
            result.init(data);
            return result;
        };
        CurrentCultureDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['displayName'] = this.displayName;
            data['englishName'] = this.englishName;
            data['threeLetterIsoLanguageName'] = this.threeLetterIsoLanguageName;
            data['twoLetterIsoLanguageName'] = this.twoLetterIsoLanguageName;
            data['isRightToLeft'] = this.isRightToLeft;
            data['cultureName'] = this.cultureName;
            data['name'] = this.name;
            data['nativeName'] = this.nativeName;
            data['dateTimeFormat'] = this.dateTimeFormat ? this.dateTimeFormat.toJSON() : undefined;
            return data;
        };
        return CurrentCultureDto;
    }());
    var NameValue = /** @class */ (function () {
        function NameValue(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NameValue.prototype.init = function (data) {
            if (data) {
                this.name = data['name'];
                this.value = data['value'];
            }
        };
        NameValue.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NameValue();
            result.init(data);
            return result;
        };
        NameValue.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['value'] = this.value;
            return data;
        };
        return NameValue;
    }());
    var ApplicationLocalizationConfigurationDto = /** @class */ (function () {
        function ApplicationLocalizationConfigurationDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ApplicationLocalizationConfigurationDto.prototype.init = function (data) {
            var e_410, _a;
            if (data) {
                if (data['values']) {
                    this.values = {};
                    for (var key in data['values']) {
                        if (data['values'].hasOwnProperty(key))
                            this.values[key] = data['values'][key] !== undefined ? data['values'][key] : {};
                    }
                }
                if (Array.isArray(data['languages'])) {
                    this.languages = [];
                    try {
                        for (var _b = __values(data['languages']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.languages.push(LanguageInfo.fromJS(item));
                        }
                    }
                    catch (e_410_1) { e_410 = { error: e_410_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_410) throw e_410.error; }
                    }
                }
                this.currentCulture = data['currentCulture'] ? CurrentCultureDto.fromJS(data['currentCulture']) : undefined;
                this.defaultResourceName = data['defaultResourceName'];
                if (data['languagesMap']) {
                    this.languagesMap = {};
                    for (var key in data['languagesMap']) {
                        if (data['languagesMap'].hasOwnProperty(key))
                            this.languagesMap[key] = data['languagesMap'][key] ? data['languagesMap'][key].map(function (i) { return NameValue.fromJS(i); }) : [];
                    }
                }
                if (data['languageFilesMap']) {
                    this.languageFilesMap = {};
                    for (var key in data['languageFilesMap']) {
                        if (data['languageFilesMap'].hasOwnProperty(key))
                            this.languageFilesMap[key] = data['languageFilesMap'][key] ? data['languageFilesMap'][key].map(function (i) { return NameValue.fromJS(i); }) : [];
                    }
                }
            }
        };
        ApplicationLocalizationConfigurationDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ApplicationLocalizationConfigurationDto();
            result.init(data);
            return result;
        };
        ApplicationLocalizationConfigurationDto.prototype.toJSON = function (data) {
            var e_411, _a;
            data = typeof data === 'object' ? data : {};
            if (this.values) {
                data['values'] = {};
                for (var key in this.values) {
                    if (this.values.hasOwnProperty(key))
                        data['values'][key] = this.values[key];
                }
            }
            if (Array.isArray(this.languages)) {
                data['languages'] = [];
                try {
                    for (var _b = __values(this.languages), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['languages'].push(item.toJSON());
                    }
                }
                catch (e_411_1) { e_411 = { error: e_411_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_411) throw e_411.error; }
                }
            }
            data['currentCulture'] = this.currentCulture ? this.currentCulture.toJSON() : undefined;
            data['defaultResourceName'] = this.defaultResourceName;
            if (this.languagesMap) {
                data['languagesMap'] = {};
                for (var key in this.languagesMap) {
                    if (this.languagesMap.hasOwnProperty(key))
                        data['languagesMap'][key] = this.languagesMap[key];
                }
            }
            if (this.languageFilesMap) {
                data['languageFilesMap'] = {};
                for (var key in this.languageFilesMap) {
                    if (this.languageFilesMap.hasOwnProperty(key))
                        data['languageFilesMap'][key] = this.languageFilesMap[key];
                }
            }
            return data;
        };
        return ApplicationLocalizationConfigurationDto;
    }());
    var ApplicationAuthConfigurationDto = /** @class */ (function () {
        function ApplicationAuthConfigurationDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ApplicationAuthConfigurationDto.prototype.init = function (data) {
            if (data) {
                if (data['policies']) {
                    this.policies = {};
                    for (var key in data['policies']) {
                        if (data['policies'].hasOwnProperty(key))
                            this.policies[key] = data['policies'][key];
                    }
                }
                if (data['grantedPolicies']) {
                    this.grantedPolicies = {};
                    for (var key in data['grantedPolicies']) {
                        if (data['grantedPolicies'].hasOwnProperty(key))
                            this.grantedPolicies[key] = data['grantedPolicies'][key];
                    }
                }
            }
        };
        ApplicationAuthConfigurationDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ApplicationAuthConfigurationDto();
            result.init(data);
            return result;
        };
        ApplicationAuthConfigurationDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            if (this.policies) {
                data['policies'] = {};
                for (var key in this.policies) {
                    if (this.policies.hasOwnProperty(key))
                        data['policies'][key] = this.policies[key];
                }
            }
            if (this.grantedPolicies) {
                data['grantedPolicies'] = {};
                for (var key in this.grantedPolicies) {
                    if (this.grantedPolicies.hasOwnProperty(key))
                        data['grantedPolicies'][key] = this.grantedPolicies[key];
                }
            }
            return data;
        };
        return ApplicationAuthConfigurationDto;
    }());
    var ApplicationSettingConfigurationDto = /** @class */ (function () {
        function ApplicationSettingConfigurationDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ApplicationSettingConfigurationDto.prototype.init = function (data) {
            if (data) {
                if (data['values']) {
                    this.values = {};
                    for (var key in data['values']) {
                        if (data['values'].hasOwnProperty(key))
                            this.values[key] = data['values'][key];
                    }
                }
            }
        };
        ApplicationSettingConfigurationDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ApplicationSettingConfigurationDto();
            result.init(data);
            return result;
        };
        ApplicationSettingConfigurationDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            if (this.values) {
                data['values'] = {};
                for (var key in this.values) {
                    if (this.values.hasOwnProperty(key))
                        data['values'][key] = this.values[key];
                }
            }
            return data;
        };
        return ApplicationSettingConfigurationDto;
    }());
    var CurrentUserDto = /** @class */ (function () {
        function CurrentUserDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CurrentUserDto.prototype.init = function (data) {
            var e_412, _a;
            if (data) {
                this.isAuthenticated = data['isAuthenticated'];
                this.id = data['id'];
                this.tenantId = data['tenantId'];
                this.userName = data['userName'];
                this.name = data['name'];
                this.surName = data['surName'];
                this.email = data['email'];
                this.emailVerified = data['emailVerified'];
                this.phoneNumber = data['phoneNumber'];
                this.phoneNumberVerified = data['phoneNumberVerified'];
                if (Array.isArray(data['roles'])) {
                    this.roles = [];
                    try {
                        for (var _b = __values(data['roles']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.roles.push(item);
                        }
                    }
                    catch (e_412_1) { e_412 = { error: e_412_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_412) throw e_412.error; }
                    }
                }
            }
        };
        CurrentUserDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CurrentUserDto();
            result.init(data);
            return result;
        };
        CurrentUserDto.prototype.toJSON = function (data) {
            var e_413, _a;
            data = typeof data === 'object' ? data : {};
            data['isAuthenticated'] = this.isAuthenticated;
            data['id'] = this.id;
            data['tenantId'] = this.tenantId;
            data['userName'] = this.userName;
            data['name'] = this.name;
            data['surName'] = this.surName;
            data['email'] = this.email;
            data['emailVerified'] = this.emailVerified;
            data['phoneNumber'] = this.phoneNumber;
            data['phoneNumberVerified'] = this.phoneNumberVerified;
            if (Array.isArray(this.roles)) {
                data['roles'] = [];
                try {
                    for (var _b = __values(this.roles), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['roles'].push(item);
                    }
                }
                catch (e_413_1) { e_413 = { error: e_413_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_413) throw e_413.error; }
                }
            }
            return data;
        };
        return CurrentUserDto;
    }());
    var ApplicationFeatureConfigurationDto = /** @class */ (function () {
        function ApplicationFeatureConfigurationDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ApplicationFeatureConfigurationDto.prototype.init = function (data) {
            if (data) {
                if (data['values']) {
                    this.values = {};
                    for (var key in data['values']) {
                        if (data['values'].hasOwnProperty(key))
                            this.values[key] = data['values'][key];
                    }
                }
            }
        };
        ApplicationFeatureConfigurationDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ApplicationFeatureConfigurationDto();
            result.init(data);
            return result;
        };
        ApplicationFeatureConfigurationDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            if (this.values) {
                data['values'] = {};
                for (var key in this.values) {
                    if (this.values.hasOwnProperty(key))
                        data['values'][key] = this.values[key];
                }
            }
            return data;
        };
        return ApplicationFeatureConfigurationDto;
    }());
    var MultiTenancyInfoDto = /** @class */ (function () {
        function MultiTenancyInfoDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        MultiTenancyInfoDto.prototype.init = function (data) {
            if (data) {
                this.isEnabled = data['isEnabled'];
            }
        };
        MultiTenancyInfoDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new MultiTenancyInfoDto();
            result.init(data);
            return result;
        };
        MultiTenancyInfoDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isEnabled'] = this.isEnabled;
            return data;
        };
        return MultiTenancyInfoDto;
    }());
    var CurrentTenantDto = /** @class */ (function () {
        function CurrentTenantDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CurrentTenantDto.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.name = data['name'];
                this.isAvailable = data['isAvailable'];
            }
        };
        CurrentTenantDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CurrentTenantDto();
            result.init(data);
            return result;
        };
        CurrentTenantDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['name'] = this.name;
            data['isAvailable'] = this.isAvailable;
            return data;
        };
        return CurrentTenantDto;
    }());
    var IanaTimeZone = /** @class */ (function () {
        function IanaTimeZone(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        IanaTimeZone.prototype.init = function (data) {
            if (data) {
                this.timeZoneName = data['timeZoneName'];
            }
        };
        IanaTimeZone.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new IanaTimeZone();
            result.init(data);
            return result;
        };
        IanaTimeZone.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['timeZoneName'] = this.timeZoneName;
            return data;
        };
        return IanaTimeZone;
    }());
    var WindowsTimeZone = /** @class */ (function () {
        function WindowsTimeZone(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        WindowsTimeZone.prototype.init = function (data) {
            if (data) {
                this.timeZoneId = data['timeZoneId'];
            }
        };
        WindowsTimeZone.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new WindowsTimeZone();
            result.init(data);
            return result;
        };
        WindowsTimeZone.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['timeZoneId'] = this.timeZoneId;
            return data;
        };
        return WindowsTimeZone;
    }());
    var TimeZone = /** @class */ (function () {
        function TimeZone(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        TimeZone.prototype.init = function (data) {
            if (data) {
                this.iana = data['iana'] ? IanaTimeZone.fromJS(data['iana']) : undefined;
                this.windows = data['windows'] ? WindowsTimeZone.fromJS(data['windows']) : undefined;
            }
        };
        TimeZone.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new TimeZone();
            result.init(data);
            return result;
        };
        TimeZone.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['iana'] = this.iana ? this.iana.toJSON() : undefined;
            data['windows'] = this.windows ? this.windows.toJSON() : undefined;
            return data;
        };
        return TimeZone;
    }());
    var TimingDto = /** @class */ (function () {
        function TimingDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        TimingDto.prototype.init = function (data) {
            if (data) {
                this.timeZone = data['timeZone'] ? TimeZone.fromJS(data['timeZone']) : undefined;
            }
        };
        TimingDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new TimingDto();
            result.init(data);
            return result;
        };
        TimingDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['timeZone'] = this.timeZone ? this.timeZone.toJSON() : undefined;
            return data;
        };
        return TimingDto;
    }());
    var ClockDto = /** @class */ (function () {
        function ClockDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ClockDto.prototype.init = function (data) {
            if (data) {
                this.kind = data['kind'];
            }
        };
        ClockDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ClockDto();
            result.init(data);
            return result;
        };
        ClockDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['kind'] = this.kind;
            return data;
        };
        return ClockDto;
    }());
    var LocalizableStringDto = /** @class */ (function () {
        function LocalizableStringDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LocalizableStringDto.prototype.init = function (data) {
            if (data) {
                this.name = data['name'];
                this.resource = data['resource'];
            }
        };
        LocalizableStringDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LocalizableStringDto();
            result.init(data);
            return result;
        };
        LocalizableStringDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['resource'] = this.resource;
            return data;
        };
        return LocalizableStringDto;
    }());
    var ExtensionPropertyApiGetDto = /** @class */ (function () {
        function ExtensionPropertyApiGetDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyApiGetDto.prototype.init = function (data) {
            if (data) {
                this.isAvailable = data['isAvailable'];
            }
        };
        ExtensionPropertyApiGetDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyApiGetDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyApiGetDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isAvailable'] = this.isAvailable;
            return data;
        };
        return ExtensionPropertyApiGetDto;
    }());
    var ExtensionPropertyApiCreateDto = /** @class */ (function () {
        function ExtensionPropertyApiCreateDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyApiCreateDto.prototype.init = function (data) {
            if (data) {
                this.isAvailable = data['isAvailable'];
            }
        };
        ExtensionPropertyApiCreateDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyApiCreateDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyApiCreateDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isAvailable'] = this.isAvailable;
            return data;
        };
        return ExtensionPropertyApiCreateDto;
    }());
    var ExtensionPropertyApiUpdateDto = /** @class */ (function () {
        function ExtensionPropertyApiUpdateDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyApiUpdateDto.prototype.init = function (data) {
            if (data) {
                this.isAvailable = data['isAvailable'];
            }
        };
        ExtensionPropertyApiUpdateDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyApiUpdateDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyApiUpdateDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isAvailable'] = this.isAvailable;
            return data;
        };
        return ExtensionPropertyApiUpdateDto;
    }());
    var ExtensionPropertyApiDto = /** @class */ (function () {
        function ExtensionPropertyApiDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyApiDto.prototype.init = function (data) {
            if (data) {
                this.onGet = data['onGet'] ? ExtensionPropertyApiGetDto.fromJS(data['onGet']) : undefined;
                this.onCreate = data['onCreate'] ? ExtensionPropertyApiCreateDto.fromJS(data['onCreate']) : undefined;
                this.onUpdate = data['onUpdate'] ? ExtensionPropertyApiUpdateDto.fromJS(data['onUpdate']) : undefined;
            }
        };
        ExtensionPropertyApiDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyApiDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyApiDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['onGet'] = this.onGet ? this.onGet.toJSON() : undefined;
            data['onCreate'] = this.onCreate ? this.onCreate.toJSON() : undefined;
            data['onUpdate'] = this.onUpdate ? this.onUpdate.toJSON() : undefined;
            return data;
        };
        return ExtensionPropertyApiDto;
    }());
    var ExtensionPropertyUiTableDto = /** @class */ (function () {
        function ExtensionPropertyUiTableDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyUiTableDto.prototype.init = function (data) {
            if (data) {
                this.isVisible = data['isVisible'];
            }
        };
        ExtensionPropertyUiTableDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyUiTableDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyUiTableDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isVisible'] = this.isVisible;
            return data;
        };
        return ExtensionPropertyUiTableDto;
    }());
    var ExtensionPropertyUiFormDto = /** @class */ (function () {
        function ExtensionPropertyUiFormDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyUiFormDto.prototype.init = function (data) {
            if (data) {
                this.isVisible = data['isVisible'];
            }
        };
        ExtensionPropertyUiFormDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyUiFormDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyUiFormDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isVisible'] = this.isVisible;
            return data;
        };
        return ExtensionPropertyUiFormDto;
    }());
    var ExtensionPropertyUiDto = /** @class */ (function () {
        function ExtensionPropertyUiDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyUiDto.prototype.init = function (data) {
            if (data) {
                this.onTable = data['onTable'] ? ExtensionPropertyUiTableDto.fromJS(data['onTable']) : undefined;
                this.onCreateForm = data['onCreateForm'] ? ExtensionPropertyUiFormDto.fromJS(data['onCreateForm']) : undefined;
                this.onEditForm = data['onEditForm'] ? ExtensionPropertyUiFormDto.fromJS(data['onEditForm']) : undefined;
            }
        };
        ExtensionPropertyUiDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyUiDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyUiDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['onTable'] = this.onTable ? this.onTable.toJSON() : undefined;
            data['onCreateForm'] = this.onCreateForm ? this.onCreateForm.toJSON() : undefined;
            data['onEditForm'] = this.onEditForm ? this.onEditForm.toJSON() : undefined;
            return data;
        };
        return ExtensionPropertyUiDto;
    }());
    var ExtensionPropertyAttributeDto = /** @class */ (function () {
        function ExtensionPropertyAttributeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyAttributeDto.prototype.init = function (data) {
            if (data) {
                this.typeSimple = data['typeSimple'];
                if (data['config']) {
                    this.config = {};
                    for (var key in data['config']) {
                        if (data['config'].hasOwnProperty(key))
                            this.config[key] = data['config'][key];
                    }
                }
            }
        };
        ExtensionPropertyAttributeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyAttributeDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyAttributeDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['typeSimple'] = this.typeSimple;
            if (this.config) {
                data['config'] = {};
                for (var key in this.config) {
                    if (this.config.hasOwnProperty(key))
                        data['config'][key] = this.config[key];
                }
            }
            return data;
        };
        return ExtensionPropertyAttributeDto;
    }());
    var ExtensionPropertyDto = /** @class */ (function () {
        function ExtensionPropertyDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionPropertyDto.prototype.init = function (data) {
            var e_414, _a;
            if (data) {
                this.type = data['type'];
                this.typeSimple = data['typeSimple'];
                this.displayName = data['displayName'] ? LocalizableStringDto.fromJS(data['displayName']) : undefined;
                this.api = data['api'] ? ExtensionPropertyApiDto.fromJS(data['api']) : undefined;
                this.ui = data['ui'] ? ExtensionPropertyUiDto.fromJS(data['ui']) : undefined;
                if (Array.isArray(data['attributes'])) {
                    this.attributes = [];
                    try {
                        for (var _b = __values(data['attributes']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.attributes.push(ExtensionPropertyAttributeDto.fromJS(item));
                        }
                    }
                    catch (e_414_1) { e_414 = { error: e_414_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_414) throw e_414.error; }
                    }
                }
                if (data['configuration']) {
                    this.configuration = {};
                    for (var key in data['configuration']) {
                        if (data['configuration'].hasOwnProperty(key))
                            this.configuration[key] = data['configuration'][key];
                    }
                }
                this.defaultValue = data['defaultValue'];
            }
        };
        ExtensionPropertyDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionPropertyDto();
            result.init(data);
            return result;
        };
        ExtensionPropertyDto.prototype.toJSON = function (data) {
            var e_415, _a;
            data = typeof data === 'object' ? data : {};
            data['type'] = this.type;
            data['typeSimple'] = this.typeSimple;
            data['displayName'] = this.displayName ? this.displayName.toJSON() : undefined;
            data['api'] = this.api ? this.api.toJSON() : undefined;
            data['ui'] = this.ui ? this.ui.toJSON() : undefined;
            if (Array.isArray(this.attributes)) {
                data['attributes'] = [];
                try {
                    for (var _b = __values(this.attributes), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['attributes'].push(item.toJSON());
                    }
                }
                catch (e_415_1) { e_415 = { error: e_415_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_415) throw e_415.error; }
                }
            }
            if (this.configuration) {
                data['configuration'] = {};
                for (var key in this.configuration) {
                    if (this.configuration.hasOwnProperty(key))
                        data['configuration'][key] = this.configuration[key];
                }
            }
            data['defaultValue'] = this.defaultValue;
            return data;
        };
        return ExtensionPropertyDto;
    }());
    var EntityExtensionDto = /** @class */ (function () {
        function EntityExtensionDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        EntityExtensionDto.prototype.init = function (data) {
            if (data) {
                if (data['properties']) {
                    this.properties = {};
                    for (var key in data['properties']) {
                        if (data['properties'].hasOwnProperty(key))
                            this.properties[key] = data['properties'][key] ? ExtensionPropertyDto.fromJS(data['properties'][key]) : new ExtensionPropertyDto();
                    }
                }
                if (data['configuration']) {
                    this.configuration = {};
                    for (var key in data['configuration']) {
                        if (data['configuration'].hasOwnProperty(key))
                            this.configuration[key] = data['configuration'][key];
                    }
                }
            }
        };
        EntityExtensionDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new EntityExtensionDto();
            result.init(data);
            return result;
        };
        EntityExtensionDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            if (this.properties) {
                data['properties'] = {};
                for (var key in this.properties) {
                    if (this.properties.hasOwnProperty(key))
                        data['properties'][key] = this.properties[key] ? this.properties[key].toJSON() : undefined;
                }
            }
            if (this.configuration) {
                data['configuration'] = {};
                for (var key in this.configuration) {
                    if (this.configuration.hasOwnProperty(key))
                        data['configuration'][key] = this.configuration[key];
                }
            }
            return data;
        };
        return EntityExtensionDto;
    }());
    var ModuleExtensionDto = /** @class */ (function () {
        function ModuleExtensionDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ModuleExtensionDto.prototype.init = function (data) {
            if (data) {
                if (data['entities']) {
                    this.entities = {};
                    for (var key in data['entities']) {
                        if (data['entities'].hasOwnProperty(key))
                            this.entities[key] = data['entities'][key] ? EntityExtensionDto.fromJS(data['entities'][key]) : new EntityExtensionDto();
                    }
                }
                if (data['configuration']) {
                    this.configuration = {};
                    for (var key in data['configuration']) {
                        if (data['configuration'].hasOwnProperty(key))
                            this.configuration[key] = data['configuration'][key];
                    }
                }
            }
        };
        ModuleExtensionDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ModuleExtensionDto();
            result.init(data);
            return result;
        };
        ModuleExtensionDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            if (this.entities) {
                data['entities'] = {};
                for (var key in this.entities) {
                    if (this.entities.hasOwnProperty(key))
                        data['entities'][key] = this.entities[key] ? this.entities[key].toJSON() : undefined;
                }
            }
            if (this.configuration) {
                data['configuration'] = {};
                for (var key in this.configuration) {
                    if (this.configuration.hasOwnProperty(key))
                        data['configuration'][key] = this.configuration[key];
                }
            }
            return data;
        };
        return ModuleExtensionDto;
    }());
    var ExtensionEnumFieldDto = /** @class */ (function () {
        function ExtensionEnumFieldDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionEnumFieldDto.prototype.init = function (data) {
            if (data) {
                this.name = data['name'];
                this.value = data['value'];
            }
        };
        ExtensionEnumFieldDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionEnumFieldDto();
            result.init(data);
            return result;
        };
        ExtensionEnumFieldDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['value'] = this.value;
            return data;
        };
        return ExtensionEnumFieldDto;
    }());
    var ExtensionEnumDto = /** @class */ (function () {
        function ExtensionEnumDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ExtensionEnumDto.prototype.init = function (data) {
            var e_416, _a;
            if (data) {
                if (Array.isArray(data['fields'])) {
                    this.fields = [];
                    try {
                        for (var _b = __values(data['fields']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.fields.push(ExtensionEnumFieldDto.fromJS(item));
                        }
                    }
                    catch (e_416_1) { e_416 = { error: e_416_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_416) throw e_416.error; }
                    }
                }
                this.localizationResource = data['localizationResource'];
            }
        };
        ExtensionEnumDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExtensionEnumDto();
            result.init(data);
            return result;
        };
        ExtensionEnumDto.prototype.toJSON = function (data) {
            var e_417, _a;
            data = typeof data === 'object' ? data : {};
            if (Array.isArray(this.fields)) {
                data['fields'] = [];
                try {
                    for (var _b = __values(this.fields), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['fields'].push(item.toJSON());
                    }
                }
                catch (e_417_1) { e_417 = { error: e_417_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_417) throw e_417.error; }
                }
            }
            data['localizationResource'] = this.localizationResource;
            return data;
        };
        return ExtensionEnumDto;
    }());
    var ObjectExtensionsDto = /** @class */ (function () {
        function ObjectExtensionsDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ObjectExtensionsDto.prototype.init = function (data) {
            if (data) {
                if (data['modules']) {
                    this.modules = {};
                    for (var key in data['modules']) {
                        if (data['modules'].hasOwnProperty(key))
                            this.modules[key] = data['modules'][key] ? ModuleExtensionDto.fromJS(data['modules'][key]) : new ModuleExtensionDto();
                    }
                }
                if (data['enums']) {
                    this.enums = {};
                    for (var key in data['enums']) {
                        if (data['enums'].hasOwnProperty(key))
                            this.enums[key] = data['enums'][key] ? ExtensionEnumDto.fromJS(data['enums'][key]) : new ExtensionEnumDto();
                    }
                }
            }
        };
        ObjectExtensionsDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ObjectExtensionsDto();
            result.init(data);
            return result;
        };
        ObjectExtensionsDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            if (this.modules) {
                data['modules'] = {};
                for (var key in this.modules) {
                    if (this.modules.hasOwnProperty(key))
                        data['modules'][key] = this.modules[key] ? this.modules[key].toJSON() : undefined;
                }
            }
            if (this.enums) {
                data['enums'] = {};
                for (var key in this.enums) {
                    if (this.enums.hasOwnProperty(key))
                        data['enums'][key] = this.enums[key] ? this.enums[key].toJSON() : undefined;
                }
            }
            return data;
        };
        return ObjectExtensionsDto;
    }());
    var ApplicationConfigurationDto = /** @class */ (function () {
        function ApplicationConfigurationDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ApplicationConfigurationDto.prototype.init = function (data) {
            if (data) {
                this.localization = data['localization'] ? ApplicationLocalizationConfigurationDto.fromJS(data['localization']) : undefined;
                this.auth = data['auth'] ? ApplicationAuthConfigurationDto.fromJS(data['auth']) : undefined;
                this.setting = data['setting'] ? ApplicationSettingConfigurationDto.fromJS(data['setting']) : undefined;
                this.currentUser = data['currentUser'] ? CurrentUserDto.fromJS(data['currentUser']) : undefined;
                this.features = data['features'] ? ApplicationFeatureConfigurationDto.fromJS(data['features']) : undefined;
                this.multiTenancy = data['multiTenancy'] ? MultiTenancyInfoDto.fromJS(data['multiTenancy']) : undefined;
                this.currentTenant = data['currentTenant'] ? CurrentTenantDto.fromJS(data['currentTenant']) : undefined;
                this.timing = data['timing'] ? TimingDto.fromJS(data['timing']) : undefined;
                this.clock = data['clock'] ? ClockDto.fromJS(data['clock']) : undefined;
                this.objectExtensions = data['objectExtensions'] ? ObjectExtensionsDto.fromJS(data['objectExtensions']) : undefined;
            }
        };
        ApplicationConfigurationDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ApplicationConfigurationDto();
            result.init(data);
            return result;
        };
        ApplicationConfigurationDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['localization'] = this.localization ? this.localization.toJSON() : undefined;
            data['auth'] = this.auth ? this.auth.toJSON() : undefined;
            data['setting'] = this.setting ? this.setting.toJSON() : undefined;
            data['currentUser'] = this.currentUser ? this.currentUser.toJSON() : undefined;
            data['features'] = this.features ? this.features.toJSON() : undefined;
            data['multiTenancy'] = this.multiTenancy ? this.multiTenancy.toJSON() : undefined;
            data['currentTenant'] = this.currentTenant ? this.currentTenant.toJSON() : undefined;
            data['timing'] = this.timing ? this.timing.toJSON() : undefined;
            data['clock'] = this.clock ? this.clock.toJSON() : undefined;
            data['objectExtensions'] = this.objectExtensions ? this.objectExtensions.toJSON() : undefined;
            return data;
        };
        return ApplicationConfigurationDto;
    }());
    var FindTenantResultDto = /** @class */ (function () {
        function FindTenantResultDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        FindTenantResultDto.prototype.init = function (data) {
            if (data) {
                this.success = data['success'];
                this.tenantId = data['tenantId'];
                this.name = data['name'];
            }
        };
        FindTenantResultDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new FindTenantResultDto();
            result.init(data);
            return result;
        };
        FindTenantResultDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['success'] = this.success;
            data['tenantId'] = this.tenantId;
            data['name'] = this.name;
            return data;
        };
        return FindTenantResultDto;
    }());
    var ExportModel;
    (function (ExportModel) {
        ExportModel[ExportModel["Default"] = 0] = "Default";
        ExportModel[ExportModel["TrangHienTai"] = 1] = "TrangHienTai";
        ExportModel[ExportModel["ToanBo"] = 2] = "ToanBo";
    })(ExportModel || (ExportModel = {}));
    var OutputFileExtension;
    (function (OutputFileExtension) {
        OutputFileExtension[OutputFileExtension["Excel"] = 1] = "Excel";
        OutputFileExtension[OutputFileExtension["Pdf"] = 2] = "Pdf";
        OutputFileExtension[OutputFileExtension["Word"] = 3] = "Word";
        OutputFileExtension[OutputFileExtension["Excel2003"] = 4] = "Excel2003";
        OutputFileExtension[OutputFileExtension["PdfAllSheet"] = 5] = "PdfAllSheet";
    })(OutputFileExtension || (OutputFileExtension = {}));
    var BenhVienPagedRequestDto = /** @class */ (function () {
        function BenhVienPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        BenhVienPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.loaiBenhVien = data['loaiBenhVien'];
                this.tuyenBenhVien = data['tuyenBenhVien'];
                this.hangBenhVien = data['hangBenhVien'];
                this.tinhId = data['tinhId'];
                this.huyenId = data['huyenId'];
                this.xaId = data['xaId'];
                this.benhVienChaId = data['benhVienChaId'];
                this.coQuanChuQuanId = data['coQuanChuQuanId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        BenhVienPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new BenhVienPagedRequestDto();
            result.init(data);
            return result;
        };
        BenhVienPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiBenhVien'] = this.loaiBenhVien;
            data['tuyenBenhVien'] = this.tuyenBenhVien;
            data['hangBenhVien'] = this.hangBenhVien;
            data['tinhId'] = this.tinhId;
            data['huyenId'] = this.huyenId;
            data['xaId'] = this.xaId;
            data['benhVienChaId'] = this.benhVienChaId;
            data['coQuanChuQuanId'] = this.coQuanChuQuanId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return BenhVienPagedRequestDto;
    }());
    var BenhVienDtoMinify = /** @class */ (function () {
        function BenhVienDtoMinify(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        BenhVienDtoMinify.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.diaChi = data['diaChi'];
                this.id = data['id'];
            }
        };
        BenhVienDtoMinify.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new BenhVienDtoMinify();
            result.init(data);
            return result;
        };
        BenhVienDtoMinify.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['diaChi'] = this.diaChi;
            data['id'] = this.id;
            return data;
        };
        return BenhVienDtoMinify;
    }());
    var BenhVienDto = /** @class */ (function () {
        function BenhVienDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        BenhVienDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.loaiBenhVien = data['loaiBenhVien'];
                this.tinhId = data['tinhId'];
                this.huyenId = data['huyenId'];
                this.xaId = data['xaId'];
                this.diaChi = data['diaChi'];
                this.benhVienChaId = data['benhVienChaId'];
                this.tuyenBenhVien = data['tuyenBenhVien'];
                this.hangBenhVien = data['hangBenhVien'];
                this.soDienThoai = data['soDienThoai'];
                this.email = data['email'];
                this.fax = data['fax'];
                this.coQuanChuQuanId = data['coQuanChuQuanId'];
                this.isActive = data['isActive'];
                this.tenTinh = data['tenTinh'];
                this.tenHuyen = data['tenHuyen'];
                this.tenXa = data['tenXa'];
                this.benhVienChaDto = data['benhVienChaDto'] ? BenhVienDtoMinify.fromJS(data['benhVienChaDto']) : undefined;
                this.coQuanChuQuanDto = data['coQuanChuQuanDto'] ? BenhVienDtoMinify.fromJS(data['coQuanChuQuanDto']) : undefined;
                this.id = data['id'];
            }
        };
        BenhVienDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new BenhVienDto();
            result.init(data);
            return result;
        };
        BenhVienDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['loaiBenhVien'] = this.loaiBenhVien;
            data['tinhId'] = this.tinhId;
            data['huyenId'] = this.huyenId;
            data['xaId'] = this.xaId;
            data['diaChi'] = this.diaChi;
            data['benhVienChaId'] = this.benhVienChaId;
            data['tuyenBenhVien'] = this.tuyenBenhVien;
            data['hangBenhVien'] = this.hangBenhVien;
            data['soDienThoai'] = this.soDienThoai;
            data['email'] = this.email;
            data['fax'] = this.fax;
            data['coQuanChuQuanId'] = this.coQuanChuQuanId;
            data['isActive'] = this.isActive;
            data['tenTinh'] = this.tenTinh;
            data['tenHuyen'] = this.tenHuyen;
            data['tenXa'] = this.tenXa;
            data['benhVienChaDto'] = this.benhVienChaDto ? this.benhVienChaDto.toJSON() : undefined;
            data['coQuanChuQuanDto'] = this.coQuanChuQuanDto ? this.coQuanChuQuanDto.toJSON() : undefined;
            data['id'] = this.id;
            return data;
        };
        return BenhVienDto;
    }());
    var PagedResultDtoOfBenhVienDto = /** @class */ (function () {
        function PagedResultDtoOfBenhVienDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfBenhVienDto.prototype.init = function (data) {
            var e_418, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(BenhVienDto.fromJS(item));
                        }
                    }
                    catch (e_418_1) { e_418 = { error: e_418_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_418) throw e_418.error; }
                    }
                }
            }
        };
        PagedResultDtoOfBenhVienDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfBenhVienDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfBenhVienDto.prototype.toJSON = function (data) {
            var e_419, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_419_1) { e_419 = { error: e_419_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_419) throw e_419.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfBenhVienDto;
    }());
    var CoSoYTeAutoDataSourceRequest = /** @class */ (function () {
        function CoSoYTeAutoDataSourceRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CoSoYTeAutoDataSourceRequest.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        CoSoYTeAutoDataSourceRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CoSoYTeAutoDataSourceRequest();
            result.init(data);
            return result;
        };
        CoSoYTeAutoDataSourceRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return CoSoYTeAutoDataSourceRequest;
    }());
    var CoSoYTeAutoDataSourceDto = /** @class */ (function () {
        function CoSoYTeAutoDataSourceDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CoSoYTeAutoDataSourceDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.diaChi = data['diaChi'];
                this.id = data['id'];
            }
        };
        CoSoYTeAutoDataSourceDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CoSoYTeAutoDataSourceDto();
            result.init(data);
            return result;
        };
        CoSoYTeAutoDataSourceDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['diaChi'] = this.diaChi;
            data['id'] = this.id;
            return data;
        };
        return CoSoYTeAutoDataSourceDto;
    }());
    var PagedResultDtoOfCoSoYTeAutoDataSourceDto = /** @class */ (function () {
        function PagedResultDtoOfCoSoYTeAutoDataSourceDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfCoSoYTeAutoDataSourceDto.prototype.init = function (data) {
            var e_420, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(CoSoYTeAutoDataSourceDto.fromJS(item));
                        }
                    }
                    catch (e_420_1) { e_420 = { error: e_420_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_420) throw e_420.error; }
                    }
                }
            }
        };
        PagedResultDtoOfCoSoYTeAutoDataSourceDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfCoSoYTeAutoDataSourceDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfCoSoYTeAutoDataSourceDto.prototype.toJSON = function (data) {
            var e_421, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_421_1) { e_421 = { error: e_421_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_421) throw e_421.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfCoSoYTeAutoDataSourceDto;
    }());
    var CoSoYTeDaCoDaiLyAutoDataSourceRequest = /** @class */ (function () {
        function CoSoYTeDaCoDaiLyAutoDataSourceRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CoSoYTeDaCoDaiLyAutoDataSourceRequest.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        CoSoYTeDaCoDaiLyAutoDataSourceRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CoSoYTeDaCoDaiLyAutoDataSourceRequest();
            result.init(data);
            return result;
        };
        CoSoYTeDaCoDaiLyAutoDataSourceRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return CoSoYTeDaCoDaiLyAutoDataSourceRequest;
    }());
    var ComboBoxDto = /** @class */ (function () {
        function ComboBoxDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
            if (!data) {
                this.isActive = true;
            }
        }
        ComboBoxDto.prototype.init = function (data) {
            if (data) {
                this.value = data['value'];
                this.displayText = data['displayText'];
                this.data = data['data'];
                this.isActive = data['isActive'] !== undefined ? data['isActive'] : true;
            }
        };
        ComboBoxDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ComboBoxDto();
            result.init(data);
            return result;
        };
        ComboBoxDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['value'] = this.value;
            data['displayText'] = this.displayText;
            data['data'] = this.data;
            data['isActive'] = this.isActive;
            return data;
        };
        return ComboBoxDto;
    }());
    var DichVuSoKhamOutputDto = /** @class */ (function () {
        function DichVuSoKhamOutputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DichVuSoKhamOutputDto.prototype.init = function (data) {
            if (data) {
                this.dichVuId = data['dichVuId'];
                this.tenDichVu = data['tenDichVu'];
                this.maDichVu = data['maDichVu'];
                this.isChecked = data['isChecked'];
                this.soKhamId = data['soKhamId'];
                this.id = data['id'];
            }
        };
        DichVuSoKhamOutputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DichVuSoKhamOutputDto();
            result.init(data);
            return result;
        };
        DichVuSoKhamOutputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['dichVuId'] = this.dichVuId;
            data['tenDichVu'] = this.tenDichVu;
            data['maDichVu'] = this.maDichVu;
            data['isChecked'] = this.isChecked;
            data['soKhamId'] = this.soKhamId;
            data['id'] = this.id;
            return data;
        };
        return DichVuSoKhamOutputDto;
    }());
    var PagedRequestDichVuSoKhamDto = /** @class */ (function () {
        function PagedRequestDichVuSoKhamDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedRequestDichVuSoKhamDto.prototype.init = function (data) {
            if (data) {
                this.nhomDichVuId = data['nhomDichVuId'];
                this.soKhamId = data['soKhamId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedRequestDichVuSoKhamDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedRequestDichVuSoKhamDto();
            result.init(data);
            return result;
        };
        PagedRequestDichVuSoKhamDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['nhomDichVuId'] = this.nhomDichVuId;
            data['soKhamId'] = this.soKhamId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedRequestDichVuSoKhamDto;
    }());
    var PagedResultDtoOfDichVuSoKhamOutputDto = /** @class */ (function () {
        function PagedResultDtoOfDichVuSoKhamOutputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDichVuSoKhamOutputDto.prototype.init = function (data) {
            var e_422, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DichVuSoKhamOutputDto.fromJS(item));
                        }
                    }
                    catch (e_422_1) { e_422 = { error: e_422_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_422) throw e_422.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDichVuSoKhamOutputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDichVuSoKhamOutputDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDichVuSoKhamOutputDto.prototype.toJSON = function (data) {
            var e_423, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_423_1) { e_423 = { error: e_423_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_423) throw e_423.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDichVuSoKhamOutputDto;
    }());
    var DichVuSoKhamDto = /** @class */ (function () {
        function DichVuSoKhamDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DichVuSoKhamDto.prototype.init = function (data) {
            if (data) {
                this.dichVuId = data['dichVuId'];
                this.soKhamBenhId = data['soKhamBenhId'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        DichVuSoKhamDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DichVuSoKhamDto();
            result.init(data);
            return result;
        };
        DichVuSoKhamDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['dichVuId'] = this.dichVuId;
            data['soKhamBenhId'] = this.soKhamBenhId;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return DichVuSoKhamDto;
    }());
    var KhoDoiTuongDto = /** @class */ (function () {
        function KhoDoiTuongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KhoDoiTuongDto.prototype.init = function (data) {
            var e_424, _a;
            if (data) {
                this.khoId = data['khoId'];
                if (Array.isArray(data['listDoiTuongId'])) {
                    this.listDoiTuongId = [];
                    try {
                        for (var _b = __values(data['listDoiTuongId']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.listDoiTuongId.push(item);
                        }
                    }
                    catch (e_424_1) { e_424 = { error: e_424_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_424) throw e_424.error; }
                    }
                }
            }
        };
        KhoDoiTuongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KhoDoiTuongDto();
            result.init(data);
            return result;
        };
        KhoDoiTuongDto.prototype.toJSON = function (data) {
            var e_425, _a;
            data = typeof data === 'object' ? data : {};
            data['khoId'] = this.khoId;
            if (Array.isArray(this.listDoiTuongId)) {
                data['listDoiTuongId'] = [];
                try {
                    for (var _b = __values(this.listDoiTuongId), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['listDoiTuongId'].push(item);
                    }
                }
                catch (e_425_1) { e_425 = { error: e_425_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_425) throw e_425.error; }
                }
            }
            return data;
        };
        return KhoDoiTuongDto;
    }());
    var DichVuPagedRequestDto = /** @class */ (function () {
        function DichVuPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DichVuPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.isExportDefault = data['isExportDefault'];
                this.lv = data['lv'];
                this.type = data['type'];
                this.loaiNhomId = data['loaiNhomId'];
                this.isDichVuDungChung = data['isDichVuDungChung'];
                this.hieuLucTuNgay = data['hieuLucTuNgay'];
                this.hieuLucToiNgay = data['hieuLucToiNgay'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        DichVuPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DichVuPagedRequestDto();
            result.init(data);
            return result;
        };
        DichVuPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isExportDefault'] = this.isExportDefault;
            data['lv'] = this.lv;
            data['type'] = this.type;
            data['loaiNhomId'] = this.loaiNhomId;
            data['isDichVuDungChung'] = this.isDichVuDungChung;
            data['hieuLucTuNgay'] = this.hieuLucTuNgay;
            data['hieuLucToiNgay'] = this.hieuLucToiNgay;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return DichVuPagedRequestDto;
    }());
    var DichVuDto = /** @class */ (function () {
        function DichVuDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DichVuDto.prototype.init = function (data) {
            if (data) {
                this.stt = data['stt'];
                this.nhomDichVuId = data['nhomDichVuId'];
                this.loaiDichVuId = data['loaiDichVuId'];
                this.dichVuDonGiaId = data['dichVuDonGiaId'];
                this.ma = data['ma'];
                this.maDvkt = data['maDvkt'];
                this.ten = data['ten'];
                this.tenDvkt = data['tenDvkt'];
                this.tenEn = data['tenEn'];
                this.tenKhongDau = data['tenKhongDau'];
                this.cap = data['cap'];
                this.parentId = data['parentId'];
                this.donViTinh = data['donViTinh'];
                this.sttDmByt = data['sttDmByt'];
                this.sttPheDuyet = data['sttPheDuyet'];
                this.maTT37 = data['maTT37'];
                this.maDmdc = data['maDmdc'];
                this.dmdcDichVuId = data['dmdcDichVuId'];
                this.tyLeThanhToanBHYT = data['tyLeThanhToanBHYT'];
                this.goi = data['goi'];
                this.coGiaDichVu = data['coGiaDichVu'];
                this.coGiaTriChuan = data['coGiaTriChuan'];
                this.tenNhomDichVu = data['tenNhomDichVu'];
                this.tenLoaiDichVu = data['tenLoaiDichVu'];
                this.benhVienId = data['benhVienId'];
                this.counter = data['counter'];
                this.donGiaBHYT = data['donGiaBHYT'];
                this.donGiaQuanNhan = data['donGiaQuanNhan'];
                this.maGia = data['maGia'];
                this.donGiaBenhVien = data['donGiaBenhVien'];
                this.quyetDinh = data['quyetDinh'];
                this.congBo = data['congBo'];
                this.maCoSoKCB = data['maCoSoKCB'];
                this.isActive = data['isActive'];
                this.tamNgung = data['tamNgung'];
                this.isExists = data['isExists'];
                this.isDeleted = data['isDeleted'];
                this.id = data['id'];
            }
        };
        DichVuDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DichVuDto();
            result.init(data);
            return result;
        };
        DichVuDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['stt'] = this.stt;
            data['nhomDichVuId'] = this.nhomDichVuId;
            data['loaiDichVuId'] = this.loaiDichVuId;
            data['dichVuDonGiaId'] = this.dichVuDonGiaId;
            data['ma'] = this.ma;
            data['maDvkt'] = this.maDvkt;
            data['ten'] = this.ten;
            data['tenDvkt'] = this.tenDvkt;
            data['tenEn'] = this.tenEn;
            data['tenKhongDau'] = this.tenKhongDau;
            data['cap'] = this.cap;
            data['parentId'] = this.parentId;
            data['donViTinh'] = this.donViTinh;
            data['sttDmByt'] = this.sttDmByt;
            data['sttPheDuyet'] = this.sttPheDuyet;
            data['maTT37'] = this.maTT37;
            data['maDmdc'] = this.maDmdc;
            data['dmdcDichVuId'] = this.dmdcDichVuId;
            data['tyLeThanhToanBHYT'] = this.tyLeThanhToanBHYT;
            data['goi'] = this.goi;
            data['coGiaDichVu'] = this.coGiaDichVu;
            data['coGiaTriChuan'] = this.coGiaTriChuan;
            data['tenNhomDichVu'] = this.tenNhomDichVu;
            data['tenLoaiDichVu'] = this.tenLoaiDichVu;
            data['benhVienId'] = this.benhVienId;
            data['counter'] = this.counter;
            data['donGiaBHYT'] = this.donGiaBHYT;
            data['donGiaQuanNhan'] = this.donGiaQuanNhan;
            data['maGia'] = this.maGia;
            data['donGiaBenhVien'] = this.donGiaBenhVien;
            data['quyetDinh'] = this.quyetDinh;
            data['congBo'] = this.congBo;
            data['maCoSoKCB'] = this.maCoSoKCB;
            data['isActive'] = this.isActive;
            data['tamNgung'] = this.tamNgung;
            data['isExists'] = this.isExists;
            data['isDeleted'] = this.isDeleted;
            data['id'] = this.id;
            return data;
        };
        return DichVuDto;
    }());
    var PagedResultDtoOfDichVuDto = /** @class */ (function () {
        function PagedResultDtoOfDichVuDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDichVuDto.prototype.init = function (data) {
            var e_426, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DichVuDto.fromJS(item));
                        }
                    }
                    catch (e_426_1) { e_426 = { error: e_426_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_426) throw e_426.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDichVuDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDichVuDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDichVuDto.prototype.toJSON = function (data) {
            var e_427, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_427_1) { e_427 = { error: e_427_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_427) throw e_427.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDichVuDto;
    }());
    var DichVuDonGiaRequestDto = /** @class */ (function () {
        function DichVuDonGiaRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DichVuDonGiaRequestDto.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.benhVienId = data['benhVienId'];
                this.donGiaBHYT = data['donGiaBHYT'];
                this.donGiaQuanNhan = data['donGiaQuanNhan'];
                this.donGiaBenhVien = data['donGiaBenhVien'];
            }
        };
        DichVuDonGiaRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DichVuDonGiaRequestDto();
            result.init(data);
            return result;
        };
        DichVuDonGiaRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['benhVienId'] = this.benhVienId;
            data['donGiaBHYT'] = this.donGiaBHYT;
            data['donGiaQuanNhan'] = this.donGiaQuanNhan;
            data['donGiaBenhVien'] = this.donGiaBenhVien;
            return data;
        };
        return DichVuDonGiaRequestDto;
    }());
    var ListDichVuDonGiaRequestDto = /** @class */ (function () {
        function ListDichVuDonGiaRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ListDichVuDonGiaRequestDto.prototype.init = function (data) {
            var e_428, _a;
            if (data) {
                if (Array.isArray(data['input'])) {
                    this.input = [];
                    try {
                        for (var _b = __values(data['input']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.input.push(DichVuDonGiaRequestDto.fromJS(item));
                        }
                    }
                    catch (e_428_1) { e_428 = { error: e_428_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_428) throw e_428.error; }
                    }
                }
                this.isExportDefault = data['isExportDefault'];
                this.lv = data['lv'];
                this.type = data['type'];
                this.loaiNhomId = data['loaiNhomId'];
                this.isDichVuDungChung = data['isDichVuDungChung'];
                this.hieuLucTuNgay = data['hieuLucTuNgay'];
                this.hieuLucToiNgay = data['hieuLucToiNgay'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        ListDichVuDonGiaRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ListDichVuDonGiaRequestDto();
            result.init(data);
            return result;
        };
        ListDichVuDonGiaRequestDto.prototype.toJSON = function (data) {
            var e_429, _a;
            data = typeof data === 'object' ? data : {};
            if (Array.isArray(this.input)) {
                data['input'] = [];
                try {
                    for (var _b = __values(this.input), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['input'].push(item.toJSON());
                    }
                }
                catch (e_429_1) { e_429 = { error: e_429_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_429) throw e_429.error; }
                }
            }
            data['isExportDefault'] = this.isExportDefault;
            data['lv'] = this.lv;
            data['type'] = this.type;
            data['loaiNhomId'] = this.loaiNhomId;
            data['isDichVuDungChung'] = this.isDichVuDungChung;
            data['hieuLucTuNgay'] = this.hieuLucTuNgay;
            data['hieuLucToiNgay'] = this.hieuLucToiNgay;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return ListDichVuDonGiaRequestDto;
    }());
    var ItemExistsPagedResultDtoOfDichVuDto = /** @class */ (function () {
        function ItemExistsPagedResultDtoOfDichVuDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ItemExistsPagedResultDtoOfDichVuDto.prototype.init = function (data) {
            var e_430, _a;
            if (data) {
                this.isExists = data['isExists'];
                this.isSuccess = data['isSuccess'];
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DichVuDto.fromJS(item));
                        }
                    }
                    catch (e_430_1) { e_430 = { error: e_430_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_430) throw e_430.error; }
                    }
                }
            }
        };
        ItemExistsPagedResultDtoOfDichVuDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ItemExistsPagedResultDtoOfDichVuDto();
            result.init(data);
            return result;
        };
        ItemExistsPagedResultDtoOfDichVuDto.prototype.toJSON = function (data) {
            var e_431, _a;
            data = typeof data === 'object' ? data : {};
            data['isExists'] = this.isExists;
            data['isSuccess'] = this.isSuccess;
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_431_1) { e_431 = { error: e_431_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_431) throw e_431.error; }
                }
            }
            return data;
        };
        return ItemExistsPagedResultDtoOfDichVuDto;
    }());
    var UpdateEffectiveDateRequestDto = /** @class */ (function () {
        function UpdateEffectiveDateRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        UpdateEffectiveDateRequestDto.prototype.init = function (data) {
            if (data) {
                this.hieuLucTuNgay = data['hieuLucTuNgay'];
                this.hieuLucToiNgay = data['hieuLucToiNgay'];
                this.hieuLucTuNgayOld = data['hieuLucTuNgayOld'];
                this.hieuLucToiNgayOld = data['hieuLucToiNgayOld'];
            }
        };
        UpdateEffectiveDateRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new UpdateEffectiveDateRequestDto();
            result.init(data);
            return result;
        };
        UpdateEffectiveDateRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['hieuLucTuNgay'] = this.hieuLucTuNgay;
            data['hieuLucToiNgay'] = this.hieuLucToiNgay;
            data['hieuLucTuNgayOld'] = this.hieuLucTuNgayOld;
            data['hieuLucToiNgayOld'] = this.hieuLucToiNgayOld;
            return data;
        };
        return UpdateEffectiveDateRequestDto;
    }());
    var DichVuRequestDto = /** @class */ (function () {
        function DichVuRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DichVuRequestDto.prototype.init = function (data) {
            if (data) {
                this.ten = data['ten'];
                this.ma = data['ma'];
                this.donGiaBenhVien = data['donGiaBenhVien'];
                this.donGiaBHYT = data['donGiaBHYT'];
                this.donGiaQuanNhan = data['donGiaQuanNhan'];
                this.phuThu = data['phuThu'];
                this.trangThai = data['trangThai'];
                this.id = data['id'];
            }
        };
        DichVuRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DichVuRequestDto();
            result.init(data);
            return result;
        };
        DichVuRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ten'] = this.ten;
            data['ma'] = this.ma;
            data['donGiaBenhVien'] = this.donGiaBenhVien;
            data['donGiaBHYT'] = this.donGiaBHYT;
            data['donGiaQuanNhan'] = this.donGiaQuanNhan;
            data['phuThu'] = this.phuThu;
            data['trangThai'] = this.trangThai;
            data['id'] = this.id;
            return data;
        };
        return DichVuRequestDto;
    }());
    var ImportDichVuRequestDto = /** @class */ (function () {
        function ImportDichVuRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ImportDichVuRequestDto.prototype.init = function (data) {
            var e_432, _a;
            if (data) {
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DichVuRequestDto.fromJS(item));
                        }
                    }
                    catch (e_432_1) { e_432 = { error: e_432_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_432) throw e_432.error; }
                    }
                }
                this.loaiDichVuId = data['loaiDichVuId'];
                this.nhomDichVuId = data['nhomDichVuId'];
            }
        };
        ImportDichVuRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ImportDichVuRequestDto();
            result.init(data);
            return result;
        };
        ImportDichVuRequestDto.prototype.toJSON = function (data) {
            var e_433, _a;
            data = typeof data === 'object' ? data : {};
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_433_1) { e_433 = { error: e_433_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_433) throw e_433.error; }
                }
            }
            data['loaiDichVuId'] = this.loaiDichVuId;
            data['nhomDichVuId'] = this.nhomDichVuId;
            return data;
        };
        return ImportDichVuRequestDto;
    }());
    var ImportDichVuResultDto = /** @class */ (function () {
        function ImportDichVuResultDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ImportDichVuResultDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
            }
        };
        ImportDichVuResultDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ImportDichVuResultDto();
            result.init(data);
            return result;
        };
        ImportDichVuResultDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            return data;
        };
        return ImportDichVuResultDto;
    }());
    var FileDto = /** @class */ (function () {
        function FileDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        FileDto.prototype.init = function (data) {
            if (data) {
                this.fileName = data['fileName'];
                this.fileType = data['fileType'];
                this.fileToken = data['fileToken'];
                this.fileBytes = data['fileBytes'];
                this.fileBase64 = data['fileBase64'];
            }
        };
        FileDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new FileDto();
            result.init(data);
            return result;
        };
        FileDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['fileName'] = this.fileName;
            data['fileType'] = this.fileType;
            data['fileToken'] = this.fileToken;
            data['fileBytes'] = this.fileBytes;
            data['fileBase64'] = this.fileBase64;
            return data;
        };
        return FileDto;
    }());
    var CauHinhHeThongDto = /** @class */ (function () {
        function CauHinhHeThongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CauHinhHeThongDto.prototype.init = function (data) {
            if (data) {
                this.loaiTaiKhoan = data['loaiTaiKhoan'];
                this.strLoaiTaiKhoan = data['strLoaiTaiKhoan'];
                this.settingId = data['settingId'];
                this.url = data['url'];
                this.id = data['id'];
            }
        };
        CauHinhHeThongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CauHinhHeThongDto();
            result.init(data);
            return result;
        };
        CauHinhHeThongDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiTaiKhoan'] = this.loaiTaiKhoan;
            data['strLoaiTaiKhoan'] = this.strLoaiTaiKhoan;
            data['settingId'] = this.settingId;
            data['url'] = this.url;
            data['id'] = this.id;
            return data;
        };
        return CauHinhHeThongDto;
    }());
    var PagedFullRequestDto = /** @class */ (function () {
        function PagedFullRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedFullRequestDto.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedFullRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedFullRequestDto();
            result.init(data);
            return result;
        };
        PagedFullRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedFullRequestDto;
    }());
    var PagedResultDtoOfCauHinhHeThongDto = /** @class */ (function () {
        function PagedResultDtoOfCauHinhHeThongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfCauHinhHeThongDto.prototype.init = function (data) {
            var e_434, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(CauHinhHeThongDto.fromJS(item));
                        }
                    }
                    catch (e_434_1) { e_434 = { error: e_434_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_434) throw e_434.error; }
                    }
                }
            }
        };
        PagedResultDtoOfCauHinhHeThongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfCauHinhHeThongDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfCauHinhHeThongDto.prototype.toJSON = function (data) {
            var e_435, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_435_1) { e_435 = { error: e_435_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_435) throw e_435.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfCauHinhHeThongDto;
    }());
    var PhongBanDichVuOutputDto = /** @class */ (function () {
        function PhongBanDichVuOutputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PhongBanDichVuOutputDto.prototype.init = function (data) {
            if (data) {
                this.dichVuId = data['dichVuId'];
                this.phongBanId = data['phongBanId'];
                this.benhVienId = data['benhVienId'];
                this.tenDichVu = data['tenDichVu'];
                this.maDichVu = data['maDichVu'];
                this.isChecked = data['isChecked'];
                this.pbdvId = data['pbdvId'];
                this.id = data['id'];
            }
        };
        PhongBanDichVuOutputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PhongBanDichVuOutputDto();
            result.init(data);
            return result;
        };
        PhongBanDichVuOutputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['dichVuId'] = this.dichVuId;
            data['phongBanId'] = this.phongBanId;
            data['benhVienId'] = this.benhVienId;
            data['tenDichVu'] = this.tenDichVu;
            data['maDichVu'] = this.maDichVu;
            data['isChecked'] = this.isChecked;
            data['pbdvId'] = this.pbdvId;
            data['id'] = this.id;
            return data;
        };
        return PhongBanDichVuOutputDto;
    }());
    var PagedRequestPhongBanDichVuDto = /** @class */ (function () {
        function PagedRequestPhongBanDichVuDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedRequestPhongBanDichVuDto.prototype.init = function (data) {
            if (data) {
                this.nhomDichVuId = data['nhomDichVuId'];
                this.phongBanId = data['phongBanId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedRequestPhongBanDichVuDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedRequestPhongBanDichVuDto();
            result.init(data);
            return result;
        };
        PagedRequestPhongBanDichVuDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['nhomDichVuId'] = this.nhomDichVuId;
            data['phongBanId'] = this.phongBanId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedRequestPhongBanDichVuDto;
    }());
    var PagedResultDtoOfPhongBanDichVuOutputDto = /** @class */ (function () {
        function PagedResultDtoOfPhongBanDichVuOutputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfPhongBanDichVuOutputDto.prototype.init = function (data) {
            var e_436, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(PhongBanDichVuOutputDto.fromJS(item));
                        }
                    }
                    catch (e_436_1) { e_436 = { error: e_436_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_436) throw e_436.error; }
                    }
                }
            }
        };
        PagedResultDtoOfPhongBanDichVuOutputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfPhongBanDichVuOutputDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfPhongBanDichVuOutputDto.prototype.toJSON = function (data) {
            var e_437, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_437_1) { e_437 = { error: e_437_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_437) throw e_437.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfPhongBanDichVuOutputDto;
    }());
    var PhongBanDichVuDto = /** @class */ (function () {
        function PhongBanDichVuDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PhongBanDichVuDto.prototype.init = function (data) {
            if (data) {
                this.dichVuId = data['dichVuId'];
                this.phongBanId = data['phongBanId'];
                this.benhVienId = data['benhVienId'];
                this.id = data['id'];
            }
        };
        PhongBanDichVuDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PhongBanDichVuDto();
            result.init(data);
            return result;
        };
        PhongBanDichVuDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['dichVuId'] = this.dichVuId;
            data['phongBanId'] = this.phongBanId;
            data['benhVienId'] = this.benhVienId;
            data['id'] = this.id;
            return data;
        };
        return PhongBanDichVuDto;
    }());
    var CauHinhTaiKhoanLienThongDto = /** @class */ (function () {
        function CauHinhTaiKhoanLienThongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CauHinhTaiKhoanLienThongDto.prototype.init = function (data) {
            if (data) {
                this.loaiTaiKhoan = data['loaiTaiKhoan'];
                this.tenDangNhap = data['tenDangNhap'];
                this.matKhauMaHoa = data['matKhauMaHoa'];
                this.benhVienId = data['benhVienId'];
                this.settingId = data['settingId'];
                this.url = data['url'];
                this.id = data['id'];
            }
        };
        CauHinhTaiKhoanLienThongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CauHinhTaiKhoanLienThongDto();
            result.init(data);
            return result;
        };
        CauHinhTaiKhoanLienThongDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiTaiKhoan'] = this.loaiTaiKhoan;
            data['tenDangNhap'] = this.tenDangNhap;
            data['matKhauMaHoa'] = this.matKhauMaHoa;
            data['benhVienId'] = this.benhVienId;
            data['settingId'] = this.settingId;
            data['url'] = this.url;
            data['id'] = this.id;
            return data;
        };
        return CauHinhTaiKhoanLienThongDto;
    }());
    var PagedResultDtoOfCauHinhTaiKhoanLienThongDto = /** @class */ (function () {
        function PagedResultDtoOfCauHinhTaiKhoanLienThongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfCauHinhTaiKhoanLienThongDto.prototype.init = function (data) {
            var e_438, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(CauHinhTaiKhoanLienThongDto.fromJS(item));
                        }
                    }
                    catch (e_438_1) { e_438 = { error: e_438_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_438) throw e_438.error; }
                    }
                }
            }
        };
        PagedResultDtoOfCauHinhTaiKhoanLienThongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfCauHinhTaiKhoanLienThongDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfCauHinhTaiKhoanLienThongDto.prototype.toJSON = function (data) {
            var e_439, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_439_1) { e_439 = { error: e_439_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_439) throw e_439.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfCauHinhTaiKhoanLienThongDto;
    }());
    var ChuongTrinhDto = /** @class */ (function () {
        function ChuongTrinhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ChuongTrinhDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        ChuongTrinhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ChuongTrinhDto();
            result.init(data);
            return result;
        };
        ChuongTrinhDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return ChuongTrinhDto;
    }());
    var PagedResultDtoOfChuongTrinhDto = /** @class */ (function () {
        function PagedResultDtoOfChuongTrinhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfChuongTrinhDto.prototype.init = function (data) {
            var e_440, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(ChuongTrinhDto.fromJS(item));
                        }
                    }
                    catch (e_440_1) { e_440 = { error: e_440_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_440) throw e_440.error; }
                    }
                }
            }
        };
        PagedResultDtoOfChuongTrinhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfChuongTrinhDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfChuongTrinhDto.prototype.toJSON = function (data) {
            var e_441, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_441_1) { e_441 = { error: e_441_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_441) throw e_441.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfChuongTrinhDto;
    }());
    var GetComboDataFromDataBaseInputDto = /** @class */ (function () {
        function GetComboDataFromDataBaseInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GetComboDataFromDataBaseInputDto.prototype.init = function (data) {
            if (data) {
                this.tableName = data['tableName'];
                this.cascaderId = data['cascaderId'];
                this.cascaderMa = data['cascaderMa'];
                this.benhVienId = data['benhVienId'];
            }
        };
        GetComboDataFromDataBaseInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GetComboDataFromDataBaseInputDto();
            result.init(data);
            return result;
        };
        GetComboDataFromDataBaseInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['tableName'] = this.tableName;
            data['cascaderId'] = this.cascaderId;
            data['cascaderMa'] = this.cascaderMa;
            data['benhVienId'] = this.benhVienId;
            return data;
        };
        return GetComboDataFromDataBaseInputDto;
    }());
    var ChildrenDataDto = /** @class */ (function () {
        function ChildrenDataDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ChildrenDataDto.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.ma = data['ma'];
                this.title = data['title'];
                this.isLeaf = data['isLeaf'];
            }
        };
        ChildrenDataDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ChildrenDataDto();
            result.init(data);
            return result;
        };
        ChildrenDataDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['ma'] = this.ma;
            data['title'] = this.title;
            data['isLeaf'] = this.isLeaf;
            return data;
        };
        return ChildrenDataDto;
    }());
    var DoiTuongTreeDto = /** @class */ (function () {
        function DoiTuongTreeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiTuongTreeDto.prototype.init = function (data) {
            var e_442, _a;
            if (data) {
                this.nhomDoiTuongId = data['nhomDoiTuongId'];
                this.title = data['title'];
                this.isExpanded = data['isExpanded'];
                if (Array.isArray(data['children'])) {
                    this.children = [];
                    try {
                        for (var _b = __values(data['children']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.children.push(ChildrenDataDto.fromJS(item));
                        }
                    }
                    catch (e_442_1) { e_442 = { error: e_442_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_442) throw e_442.error; }
                    }
                }
            }
        };
        DoiTuongTreeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiTuongTreeDto();
            result.init(data);
            return result;
        };
        DoiTuongTreeDto.prototype.toJSON = function (data) {
            var e_443, _a;
            data = typeof data === 'object' ? data : {};
            data['nhomDoiTuongId'] = this.nhomDoiTuongId;
            data['title'] = this.title;
            data['isExpanded'] = this.isExpanded;
            if (Array.isArray(this.children)) {
                data['children'] = [];
                try {
                    for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['children'].push(item.toJSON());
                    }
                }
                catch (e_443_1) { e_443 = { error: e_443_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_443) throw e_443.error; }
                }
            }
            return data;
        };
        return DoiTuongTreeDto;
    }());
    var DoiTuongDto = /** @class */ (function () {
        function DoiTuongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiTuongDto.prototype.init = function (data) {
            if (data) {
                this.nhomDoiTuongId = data['nhomDoiTuongId'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenEn = data['tenEn'];
                this.tenKhongDau = data['tenKhongDau'];
                this.ngayHieuLuc = data['ngayHieuLuc'] ? moment__namespace(data['ngayHieuLuc'].toString()) : undefined;
                this.ngayHetHieuLuc = data['ngayHetHieuLuc'] ? moment__namespace(data['ngayHetHieuLuc'].toString()) : undefined;
                this.tyLeGiam = data['tyLeGiam'];
                this.gioiHan1 = data['gioiHan1'];
                this.tyLe1 = data['tyLe1'];
                this.gioiHan2 = data['gioiHan2'];
                this.tyLe2 = data['tyLe2'];
                this.gioiHan3 = data['gioiHan3'];
                this.tyLe3 = data['tyLe3'];
                this.gioiHan4 = data['gioiHan4'];
                this.tyLe4 = data['tyLe4'];
                this.gioiHan5 = data['gioiHan5'];
                this.tyLe5 = data['tyLe5'];
                this.ghiChu = data['ghiChu'];
                this.hangBenhVien = data['hangBenhVien'];
                this.maQuyenLoiBHYT = data['maQuyenLoiBHYT'];
                this.gioiHan1Cu = data['gioiHan1Cu'];
                this.gioiHan2Cu = data['gioiHan2Cu'];
                this.isExists = data['isExists'];
                this.tenNhomDoiTuong = data['tenNhomDoiTuong'];
                this.id = data['id'];
            }
        };
        DoiTuongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiTuongDto();
            result.init(data);
            return result;
        };
        DoiTuongDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['nhomDoiTuongId'] = this.nhomDoiTuongId;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenEn'] = this.tenEn;
            data['tenKhongDau'] = this.tenKhongDau;
            data['ngayHieuLuc'] = this.ngayHieuLuc ? this.ngayHieuLuc.toISOString() : undefined;
            data['ngayHetHieuLuc'] = this.ngayHetHieuLuc ? this.ngayHetHieuLuc.toISOString() : undefined;
            data['tyLeGiam'] = this.tyLeGiam;
            data['gioiHan1'] = this.gioiHan1;
            data['tyLe1'] = this.tyLe1;
            data['gioiHan2'] = this.gioiHan2;
            data['tyLe2'] = this.tyLe2;
            data['gioiHan3'] = this.gioiHan3;
            data['tyLe3'] = this.tyLe3;
            data['gioiHan4'] = this.gioiHan4;
            data['tyLe4'] = this.tyLe4;
            data['gioiHan5'] = this.gioiHan5;
            data['tyLe5'] = this.tyLe5;
            data['ghiChu'] = this.ghiChu;
            data['hangBenhVien'] = this.hangBenhVien;
            data['maQuyenLoiBHYT'] = this.maQuyenLoiBHYT;
            data['gioiHan1Cu'] = this.gioiHan1Cu;
            data['gioiHan2Cu'] = this.gioiHan2Cu;
            data['isExists'] = this.isExists;
            data['tenNhomDoiTuong'] = this.tenNhomDoiTuong;
            data['id'] = this.id;
            return data;
        };
        return DoiTuongDto;
    }());
    var DoiTuongPagedRequest = /** @class */ (function () {
        function DoiTuongPagedRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiTuongPagedRequest.prototype.init = function (data) {
            if (data) {
                this.nhomDoiTuongId = data['nhomDoiTuongId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        DoiTuongPagedRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiTuongPagedRequest();
            result.init(data);
            return result;
        };
        DoiTuongPagedRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['nhomDoiTuongId'] = this.nhomDoiTuongId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return DoiTuongPagedRequest;
    }());
    var PagedResultDtoOfDoiTuongDto = /** @class */ (function () {
        function PagedResultDtoOfDoiTuongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDoiTuongDto.prototype.init = function (data) {
            var e_444, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DoiTuongDto.fromJS(item));
                        }
                    }
                    catch (e_444_1) { e_444 = { error: e_444_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_444) throw e_444.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDoiTuongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDoiTuongDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDoiTuongDto.prototype.toJSON = function (data) {
            var e_445, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_445_1) { e_445 = { error: e_445_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_445) throw e_445.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDoiTuongDto;
    }());
    var DoiTuongNoiTruInput = /** @class */ (function () {
        function DoiTuongNoiTruInput(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiTuongNoiTruInput.prototype.init = function (data) {
            if (data) {
                this.doiTuongId = data['doiTuongId'];
                this.filter = data['filter'];
                this.loaiKhoId = data['loaiKhoId'];
            }
        };
        DoiTuongNoiTruInput.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiTuongNoiTruInput();
            result.init(data);
            return result;
        };
        DoiTuongNoiTruInput.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['doiTuongId'] = this.doiTuongId;
            data['filter'] = this.filter;
            data['loaiKhoId'] = this.loaiKhoId;
            return data;
        };
        return DoiTuongNoiTruInput;
    }());
    var KhoDuocDataTree = /** @class */ (function () {
        function KhoDuocDataTree(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KhoDuocDataTree.prototype.init = function (data) {
            if (data) {
                this.expand = data['expand'];
                this.key = data['key'];
                this.name = data['name'];
                this.checked = data['checked'];
                this.ma = data['ma'];
                this.ngayTao = data['ngayTao'] ? moment__namespace(data['ngayTao'].toString()) : undefined;
                this.isActive = data['isActive'];
                this.doiTuongKhoDuocNoiTruId = data['doiTuongKhoDuocNoiTruId'];
            }
        };
        KhoDuocDataTree.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KhoDuocDataTree();
            result.init(data);
            return result;
        };
        KhoDuocDataTree.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['expand'] = this.expand;
            data['key'] = this.key;
            data['name'] = this.name;
            data['checked'] = this.checked;
            data['ma'] = this.ma;
            data['ngayTao'] = this.ngayTao ? this.ngayTao.toISOString() : undefined;
            data['isActive'] = this.isActive;
            data['doiTuongKhoDuocNoiTruId'] = this.doiTuongKhoDuocNoiTruId;
            return data;
        };
        return KhoDuocDataTree;
    }());
    var KhoDuocTreeDto = /** @class */ (function () {
        function KhoDuocTreeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KhoDuocTreeDto.prototype.init = function (data) {
            var e_446, _a;
            if (data) {
                this.name = data['name'];
                this.key = data['key'];
                this.expand = data['expand'];
                this.allChecked = data['allChecked'];
                if (Array.isArray(data['children'])) {
                    this.children = [];
                    try {
                        for (var _b = __values(data['children']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.children.push(KhoDuocDataTree.fromJS(item));
                        }
                    }
                    catch (e_446_1) { e_446 = { error: e_446_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_446) throw e_446.error; }
                    }
                }
            }
        };
        KhoDuocTreeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KhoDuocTreeDto();
            result.init(data);
            return result;
        };
        KhoDuocTreeDto.prototype.toJSON = function (data) {
            var e_447, _a;
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['key'] = this.key;
            data['expand'] = this.expand;
            data['allChecked'] = this.allChecked;
            if (Array.isArray(this.children)) {
                data['children'] = [];
                try {
                    for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['children'].push(item.toJSON());
                    }
                }
                catch (e_447_1) { e_447 = { error: e_447_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_447) throw e_447.error; }
                }
            }
            return data;
        };
        return KhoDuocTreeDto;
    }());
    var ListLoaiGiaIdDto = /** @class */ (function () {
        function ListLoaiGiaIdDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ListLoaiGiaIdDto.prototype.init = function (data) {
            if (data) {
                this.khoDuocId = data['khoDuocId'];
                this.checked = data['checked'];
                this.doiTuongKhoDuocNoiTruId = data['doiTuongKhoDuocNoiTruId'];
            }
        };
        ListLoaiGiaIdDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ListLoaiGiaIdDto();
            result.init(data);
            return result;
        };
        ListLoaiGiaIdDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['khoDuocId'] = this.khoDuocId;
            data['checked'] = this.checked;
            data['doiTuongKhoDuocNoiTruId'] = this.doiTuongKhoDuocNoiTruId;
            return data;
        };
        return ListLoaiGiaIdDto;
    }());
    var ParamsCreateOrUpdateDoiTuongNoiTruDto = /** @class */ (function () {
        function ParamsCreateOrUpdateDoiTuongNoiTruDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ParamsCreateOrUpdateDoiTuongNoiTruDto.prototype.init = function (data) {
            var e_448, _a;
            if (data) {
                this.doiTuongId = data['doiTuongId'];
                if (Array.isArray(data['lstData'])) {
                    this.lstData = [];
                    try {
                        for (var _b = __values(data['lstData']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.lstData.push(ListLoaiGiaIdDto.fromJS(item));
                        }
                    }
                    catch (e_448_1) { e_448 = { error: e_448_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_448) throw e_448.error; }
                    }
                }
            }
        };
        ParamsCreateOrUpdateDoiTuongNoiTruDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ParamsCreateOrUpdateDoiTuongNoiTruDto();
            result.init(data);
            return result;
        };
        ParamsCreateOrUpdateDoiTuongNoiTruDto.prototype.toJSON = function (data) {
            var e_449, _a;
            data = typeof data === 'object' ? data : {};
            data['doiTuongId'] = this.doiTuongId;
            if (Array.isArray(this.lstData)) {
                data['lstData'] = [];
                try {
                    for (var _b = __values(this.lstData), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['lstData'].push(item.toJSON());
                    }
                }
                catch (e_449_1) { e_449 = { error: e_449_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_449) throw e_449.error; }
                }
            }
            return data;
        };
        return ParamsCreateOrUpdateDoiTuongNoiTruDto;
    }());
    var DoiTuongKhoDuocNoiTruPagedRequestDto = /** @class */ (function () {
        function DoiTuongKhoDuocNoiTruPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiTuongKhoDuocNoiTruPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.doiTuongId = data['doiTuongId'];
                this.loaiGiaId = data['loaiGiaId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        DoiTuongKhoDuocNoiTruPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiTuongKhoDuocNoiTruPagedRequestDto();
            result.init(data);
            return result;
        };
        DoiTuongKhoDuocNoiTruPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['doiTuongId'] = this.doiTuongId;
            data['loaiGiaId'] = this.loaiGiaId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return DoiTuongKhoDuocNoiTruPagedRequestDto;
    }());
    var DoiTuongKhoDuocNoiTruDto = /** @class */ (function () {
        function DoiTuongKhoDuocNoiTruDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiTuongKhoDuocNoiTruDto.prototype.init = function (data) {
            if (data) {
                this.doiTuongId = data['doiTuongId'];
                this.khoDuocId = data['khoDuocId'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        DoiTuongKhoDuocNoiTruDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiTuongKhoDuocNoiTruDto();
            result.init(data);
            return result;
        };
        DoiTuongKhoDuocNoiTruDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['doiTuongId'] = this.doiTuongId;
            data['khoDuocId'] = this.khoDuocId;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return DoiTuongKhoDuocNoiTruDto;
    }());
    var PagedResultDtoOfDoiTuongKhoDuocNoiTruDto = /** @class */ (function () {
        function PagedResultDtoOfDoiTuongKhoDuocNoiTruDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDoiTuongKhoDuocNoiTruDto.prototype.init = function (data) {
            var e_450, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DoiTuongKhoDuocNoiTruDto.fromJS(item));
                        }
                    }
                    catch (e_450_1) { e_450 = { error: e_450_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_450) throw e_450.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDoiTuongKhoDuocNoiTruDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDoiTuongKhoDuocNoiTruDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDoiTuongKhoDuocNoiTruDto.prototype.toJSON = function (data) {
            var e_451, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_451_1) { e_451 = { error: e_451_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_451) throw e_451.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDoiTuongKhoDuocNoiTruDto;
    }());
    var Params = /** @class */ (function () {
        function Params(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        Params.prototype.init = function (data) {
            if (data) {
                this.doiTuongId = data['doiTuongId'];
                this.filter = data['filter'];
                this.nhomGiaId = data['nhomGiaId'];
            }
        };
        Params.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new Params();
            result.init(data);
            return result;
        };
        Params.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['doiTuongId'] = this.doiTuongId;
            data['filter'] = this.filter;
            data['nhomGiaId'] = this.nhomGiaId;
            return data;
        };
        return Params;
    }());
    var DataTree = /** @class */ (function () {
        function DataTree(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DataTree.prototype.init = function (data) {
            if (data) {
                this.expand = data['expand'];
                this.key = data['key'];
                this.name = data['name'];
                this.doUuTien = data['doUuTien'];
                this.giaHoTro = data['giaHoTro'];
                this.checked = data['checked'];
                this.doiTuongLoaiGiaId = data['doiTuongLoaiGiaId'];
            }
        };
        DataTree.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DataTree();
            result.init(data);
            return result;
        };
        DataTree.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['expand'] = this.expand;
            data['key'] = this.key;
            data['name'] = this.name;
            data['doUuTien'] = this.doUuTien;
            data['giaHoTro'] = this.giaHoTro;
            data['checked'] = this.checked;
            data['doiTuongLoaiGiaId'] = this.doiTuongLoaiGiaId;
            return data;
        };
        return DataTree;
    }());
    var LoaiGiaTreeDto = /** @class */ (function () {
        function LoaiGiaTreeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LoaiGiaTreeDto.prototype.init = function (data) {
            var e_452, _a;
            if (data) {
                this.name = data['name'];
                this.key = data['key'];
                this.expand = data['expand'];
                this.allChecked = data['allChecked'];
                if (Array.isArray(data['children'])) {
                    this.children = [];
                    try {
                        for (var _b = __values(data['children']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.children.push(DataTree.fromJS(item));
                        }
                    }
                    catch (e_452_1) { e_452 = { error: e_452_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_452) throw e_452.error; }
                    }
                }
            }
        };
        LoaiGiaTreeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LoaiGiaTreeDto();
            result.init(data);
            return result;
        };
        LoaiGiaTreeDto.prototype.toJSON = function (data) {
            var e_453, _a;
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['key'] = this.key;
            data['expand'] = this.expand;
            data['allChecked'] = this.allChecked;
            if (Array.isArray(this.children)) {
                data['children'] = [];
                try {
                    for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['children'].push(item.toJSON());
                    }
                }
                catch (e_453_1) { e_453 = { error: e_453_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_453) throw e_453.error; }
                }
            }
            return data;
        };
        return LoaiGiaTreeDto;
    }());
    var Dto = /** @class */ (function () {
        function Dto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        Dto.prototype.init = function (data) {
            if (data) {
                this.doUuTien = data['doUuTien'];
                this.loaiGiaId = data['loaiGiaId'];
                this.checked = data['checked'];
                this.doiTuongLoaiGiaId = data['doiTuongLoaiGiaId'];
            }
        };
        Dto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new Dto();
            result.init(data);
            return result;
        };
        Dto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['doUuTien'] = this.doUuTien;
            data['loaiGiaId'] = this.loaiGiaId;
            data['checked'] = this.checked;
            data['doiTuongLoaiGiaId'] = this.doiTuongLoaiGiaId;
            return data;
        };
        return Dto;
    }());
    var ParamUpdateOrCreateDto = /** @class */ (function () {
        function ParamUpdateOrCreateDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ParamUpdateOrCreateDto.prototype.init = function (data) {
            var e_454, _a;
            if (data) {
                this.doiTuongId = data['doiTuongId'];
                if (Array.isArray(data['lstData'])) {
                    this.lstData = [];
                    try {
                        for (var _b = __values(data['lstData']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.lstData.push(Dto.fromJS(item));
                        }
                    }
                    catch (e_454_1) { e_454 = { error: e_454_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_454) throw e_454.error; }
                    }
                }
            }
        };
        ParamUpdateOrCreateDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ParamUpdateOrCreateDto();
            result.init(data);
            return result;
        };
        ParamUpdateOrCreateDto.prototype.toJSON = function (data) {
            var e_455, _a;
            data = typeof data === 'object' ? data : {};
            data['doiTuongId'] = this.doiTuongId;
            if (Array.isArray(this.lstData)) {
                data['lstData'] = [];
                try {
                    for (var _b = __values(this.lstData), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['lstData'].push(item.toJSON());
                    }
                }
                catch (e_455_1) { e_455 = { error: e_455_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_455) throw e_455.error; }
                }
            }
            return data;
        };
        return ParamUpdateOrCreateDto;
    }());
    var DoiTuongLoaiGiaPagedRequestDto = /** @class */ (function () {
        function DoiTuongLoaiGiaPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiTuongLoaiGiaPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.doiTuongId = data['doiTuongId'];
                this.loaiGiaId = data['loaiGiaId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        DoiTuongLoaiGiaPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiTuongLoaiGiaPagedRequestDto();
            result.init(data);
            return result;
        };
        DoiTuongLoaiGiaPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['doiTuongId'] = this.doiTuongId;
            data['loaiGiaId'] = this.loaiGiaId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return DoiTuongLoaiGiaPagedRequestDto;
    }());
    var DoiTuongLoaiGiaDto = /** @class */ (function () {
        function DoiTuongLoaiGiaDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiTuongLoaiGiaDto.prototype.init = function (data) {
            if (data) {
                this.doiTuongId = data['doiTuongId'];
                this.loaiGiaId = data['loaiGiaId'];
                this.doUuTien = data['doUuTien'];
                this.isActive = data['isActive'];
                this.benhVienId = data['benhVienId'];
                this.tenDoiTuong = data['tenDoiTuong'];
                this.id = data['id'];
            }
        };
        DoiTuongLoaiGiaDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiTuongLoaiGiaDto();
            result.init(data);
            return result;
        };
        DoiTuongLoaiGiaDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['doiTuongId'] = this.doiTuongId;
            data['loaiGiaId'] = this.loaiGiaId;
            data['doUuTien'] = this.doUuTien;
            data['isActive'] = this.isActive;
            data['benhVienId'] = this.benhVienId;
            data['tenDoiTuong'] = this.tenDoiTuong;
            data['id'] = this.id;
            return data;
        };
        return DoiTuongLoaiGiaDto;
    }());
    var PagedResultDtoOfDoiTuongLoaiGiaDto = /** @class */ (function () {
        function PagedResultDtoOfDoiTuongLoaiGiaDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDoiTuongLoaiGiaDto.prototype.init = function (data) {
            var e_456, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DoiTuongLoaiGiaDto.fromJS(item));
                        }
                    }
                    catch (e_456_1) { e_456 = { error: e_456_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_456) throw e_456.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDoiTuongLoaiGiaDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDoiTuongLoaiGiaDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDoiTuongLoaiGiaDto.prototype.toJSON = function (data) {
            var e_457, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_457_1) { e_457 = { error: e_457_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_457) throw e_457.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDoiTuongLoaiGiaDto;
    }());
    var DonViHanhChinhDto = /** @class */ (function () {
        function DonViHanhChinhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DonViHanhChinhDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.parentId = data['parentId'];
                this.ten = data['ten'];
                this.tenVietTat = data['tenVietTat'];
                this.tenDayDu = data['tenDayDu'];
                this.tenDayDuKhongDau = data['tenDayDuKhongDau'];
                this.capDo = data['capDo'];
                this.isActive = data['isActive'];
                this.isExists = data['isExists'];
                this.capDoStr = data['capDoStr'];
                this.parentStr = data['parentStr'];
                this.tinhId = data['tinhId'];
                this.huyenId = data['huyenId'];
                this.xaId = data['xaId'];
                this.id = data['id'];
            }
        };
        DonViHanhChinhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DonViHanhChinhDto();
            result.init(data);
            return result;
        };
        DonViHanhChinhDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['parentId'] = this.parentId;
            data['ten'] = this.ten;
            data['tenVietTat'] = this.tenVietTat;
            data['tenDayDu'] = this.tenDayDu;
            data['tenDayDuKhongDau'] = this.tenDayDuKhongDau;
            data['capDo'] = this.capDo;
            data['isActive'] = this.isActive;
            data['isExists'] = this.isExists;
            data['capDoStr'] = this.capDoStr;
            data['parentStr'] = this.parentStr;
            data['tinhId'] = this.tinhId;
            data['huyenId'] = this.huyenId;
            data['xaId'] = this.xaId;
            data['id'] = this.id;
            return data;
        };
        return DonViHanhChinhDto;
    }());
    var PagedRequestDonViHanhChinhDto = /** @class */ (function () {
        function PagedRequestDonViHanhChinhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedRequestDonViHanhChinhDto.prototype.init = function (data) {
            if (data) {
                this.capDo = data['capDo'];
                this.tinhId = data['tinhId'];
                this.huyenId = data['huyenId'];
                this.xaId = data['xaId'];
                this.thonId = data['thonId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedRequestDonViHanhChinhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedRequestDonViHanhChinhDto();
            result.init(data);
            return result;
        };
        PagedRequestDonViHanhChinhDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['capDo'] = this.capDo;
            data['tinhId'] = this.tinhId;
            data['huyenId'] = this.huyenId;
            data['xaId'] = this.xaId;
            data['thonId'] = this.thonId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedRequestDonViHanhChinhDto;
    }());
    var PagedResultDtoOfDonViHanhChinhDto = /** @class */ (function () {
        function PagedResultDtoOfDonViHanhChinhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDonViHanhChinhDto.prototype.init = function (data) {
            var e_458, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DonViHanhChinhDto.fromJS(item));
                        }
                    }
                    catch (e_458_1) { e_458 = { error: e_458_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_458) throw e_458.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDonViHanhChinhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDonViHanhChinhDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDonViHanhChinhDto.prototype.toJSON = function (data) {
            var e_459, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_459_1) { e_459 = { error: e_459_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_459) throw e_459.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDonViHanhChinhDto;
    }());
    var DonViTinhPagedRequestDto = /** @class */ (function () {
        function DonViTinhPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DonViTinhPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.loaiVatTuId = data['loaiVatTuId'];
                this.isDonViCoBan = data['isDonViCoBan'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        DonViTinhPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DonViTinhPagedRequestDto();
            result.init(data);
            return result;
        };
        DonViTinhPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiVatTuId'] = this.loaiVatTuId;
            data['isDonViCoBan'] = this.isDonViCoBan;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return DonViTinhPagedRequestDto;
    }());
    var DonViTinhDto = /** @class */ (function () {
        function DonViTinhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
            if (!data) {
                this.donViCoBan = false;
            }
        }
        DonViTinhDto.prototype.init = function (data) {
            if (data) {
                this.loaiVatTuId = data['loaiVatTuId'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenKhongDau = data['tenKhongDau'];
                this.donViCoBanId = data['donViCoBanId'];
                this.donViCoBan = data['donViCoBan'] !== undefined ? data['donViCoBan'] : false;
                this.giaTriQuyDoi = data['giaTriQuyDoi'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        DonViTinhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DonViTinhDto();
            result.init(data);
            return result;
        };
        DonViTinhDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiVatTuId'] = this.loaiVatTuId;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenKhongDau'] = this.tenKhongDau;
            data['donViCoBanId'] = this.donViCoBanId;
            data['donViCoBan'] = this.donViCoBan;
            data['giaTriQuyDoi'] = this.giaTriQuyDoi;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return DonViTinhDto;
    }());
    var PagedResultDtoOfDonViTinhDto = /** @class */ (function () {
        function PagedResultDtoOfDonViTinhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDonViTinhDto.prototype.init = function (data) {
            var e_460, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DonViTinhDto.fromJS(item));
                        }
                    }
                    catch (e_460_1) { e_460 = { error: e_460_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_460) throw e_460.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDonViTinhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDonViTinhDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDonViTinhDto.prototype.toJSON = function (data) {
            var e_461, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_461_1) { e_461 = { error: e_461_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_461) throw e_461.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDonViTinhDto;
    }());
    var DuocThongTinThauDto = /** @class */ (function () {
        function DuocThongTinThauDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DuocThongTinThauDto.prototype.init = function (data) {
            if (data) {
                this.duocId = data['duocId'];
                this.tenBhyt = data['tenBhyt'];
                this.maHoatChat = data['maHoatChat'];
                this.sttPheDuyet = data['sttPheDuyet'];
                this.nuocSanXuat = data['nuocSanXuat'];
                this.hangSanXuat = data['hangSanXuat'];
                this.nhaThau = data['nhaThau'];
                this.soDK = data['soDK'];
                this.donGiaThau = data['donGiaThau'];
                this.goiThau = data['goiThau'];
                this.nhomThau = data['nhomThau'];
                this.soQDThau = data['soQDThau'];
                this.ngayTrungThau = data['ngayTrungThau'] ? moment__namespace(data['ngayTrungThau'].toString()) : undefined;
                this.uuTien = data['uuTien'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        DuocThongTinThauDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DuocThongTinThauDto();
            result.init(data);
            return result;
        };
        DuocThongTinThauDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['duocId'] = this.duocId;
            data['tenBhyt'] = this.tenBhyt;
            data['maHoatChat'] = this.maHoatChat;
            data['sttPheDuyet'] = this.sttPheDuyet;
            data['nuocSanXuat'] = this.nuocSanXuat;
            data['hangSanXuat'] = this.hangSanXuat;
            data['nhaThau'] = this.nhaThau;
            data['soDK'] = this.soDK;
            data['donGiaThau'] = this.donGiaThau;
            data['goiThau'] = this.goiThau;
            data['nhomThau'] = this.nhomThau;
            data['soQDThau'] = this.soQDThau;
            data['ngayTrungThau'] = this.ngayTrungThau ? this.ngayTrungThau.toISOString() : undefined;
            data['uuTien'] = this.uuTien;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return DuocThongTinThauDto;
    }());
    var InsertBulkThongTinThauByDuocIdRequest = /** @class */ (function () {
        function InsertBulkThongTinThauByDuocIdRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        InsertBulkThongTinThauByDuocIdRequest.prototype.init = function (data) {
            var e_462, _a;
            if (data) {
                if (Array.isArray(data['listOfThongTinThau'])) {
                    this.listOfThongTinThau = [];
                    try {
                        for (var _b = __values(data['listOfThongTinThau']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.listOfThongTinThau.push(DuocThongTinThauDto.fromJS(item));
                        }
                    }
                    catch (e_462_1) { e_462 = { error: e_462_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_462) throw e_462.error; }
                    }
                }
            }
        };
        InsertBulkThongTinThauByDuocIdRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new InsertBulkThongTinThauByDuocIdRequest();
            result.init(data);
            return result;
        };
        InsertBulkThongTinThauByDuocIdRequest.prototype.toJSON = function (data) {
            var e_463, _a;
            data = typeof data === 'object' ? data : {};
            if (Array.isArray(this.listOfThongTinThau)) {
                data['listOfThongTinThau'] = [];
                try {
                    for (var _b = __values(this.listOfThongTinThau), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['listOfThongTinThau'].push(item.toJSON());
                    }
                }
                catch (e_463_1) { e_463 = { error: e_463_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_463) throw e_463.error; }
                }
            }
            return data;
        };
        return InsertBulkThongTinThauByDuocIdRequest;
    }());
    var DuocDungChungTimTheoEnum;
    (function (DuocDungChungTimTheoEnum) {
        DuocDungChungTimTheoEnum[DuocDungChungTimTheoEnum["MaThuoc"] = 1] = "MaThuoc";
        DuocDungChungTimTheoEnum[DuocDungChungTimTheoEnum["TenThuoc"] = 2] = "TenThuoc";
        DuocDungChungTimTheoEnum[DuocDungChungTimTheoEnum["HoatChat"] = 3] = "HoatChat";
        DuocDungChungTimTheoEnum[DuocDungChungTimTheoEnum["SoDangKy"] = 4] = "SoDangKy";
    })(DuocDungChungTimTheoEnum || (DuocDungChungTimTheoEnum = {}));
    var DuocDungChungPagedListInputDto = /** @class */ (function () {
        function DuocDungChungPagedListInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DuocDungChungPagedListInputDto.prototype.init = function (data) {
            if (data) {
                this.timTheo = data['timTheo'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        DuocDungChungPagedListInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DuocDungChungPagedListInputDto();
            result.init(data);
            return result;
        };
        DuocDungChungPagedListInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['timTheo'] = this.timTheo;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return DuocDungChungPagedListInputDto;
    }());
    var DuocDungChungDto = /** @class */ (function () {
        function DuocDungChungDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DuocDungChungDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.hamLuong = data['hamLuong'];
                this.duongDung = data['duongDung'];
                this.hoatChat = data['hoatChat'];
                this.soDK = data['soDK'];
                this.loaiThuoc = data['loaiThuoc'];
                this.id = data['id'];
            }
        };
        DuocDungChungDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DuocDungChungDto();
            result.init(data);
            return result;
        };
        DuocDungChungDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['hamLuong'] = this.hamLuong;
            data['duongDung'] = this.duongDung;
            data['hoatChat'] = this.hoatChat;
            data['soDK'] = this.soDK;
            data['loaiThuoc'] = this.loaiThuoc;
            data['id'] = this.id;
            return data;
        };
        return DuocDungChungDto;
    }());
    var PagedResultDtoOfDuocDungChungDto = /** @class */ (function () {
        function PagedResultDtoOfDuocDungChungDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDuocDungChungDto.prototype.init = function (data) {
            var e_464, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DuocDungChungDto.fromJS(item));
                        }
                    }
                    catch (e_464_1) { e_464 = { error: e_464_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_464) throw e_464.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDuocDungChungDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDuocDungChungDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDuocDungChungDto.prototype.toJSON = function (data) {
            var e_465, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_465_1) { e_465 = { error: e_465_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_465) throw e_465.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDuocDungChungDto;
    }());
    var ThemThuocTuDanhMucChungDto = /** @class */ (function () {
        function ThemThuocTuDanhMucChungDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ThemThuocTuDanhMucChungDto.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.maDuoc = data['maDuoc'];
                this.donViTinh = data['donViTinh'];
                this.duongDung = data['duongDung'];
            }
        };
        ThemThuocTuDanhMucChungDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ThemThuocTuDanhMucChungDto();
            result.init(data);
            return result;
        };
        ThemThuocTuDanhMucChungDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['maDuoc'] = this.maDuoc;
            data['donViTinh'] = this.donViTinh;
            data['duongDung'] = this.duongDung;
            return data;
        };
        return ThemThuocTuDanhMucChungDto;
    }());
    var ThemThuocTuDanhMucDungChungRequest = /** @class */ (function () {
        function ThemThuocTuDanhMucDungChungRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ThemThuocTuDanhMucDungChungRequest.prototype.init = function (data) {
            var e_466, _a;
            if (data) {
                if (Array.isArray(data['listOfThuocCanThem'])) {
                    this.listOfThuocCanThem = [];
                    try {
                        for (var _b = __values(data['listOfThuocCanThem']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.listOfThuocCanThem.push(ThemThuocTuDanhMucChungDto.fromJS(item));
                        }
                    }
                    catch (e_466_1) { e_466 = { error: e_466_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_466) throw e_466.error; }
                    }
                }
            }
        };
        ThemThuocTuDanhMucDungChungRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ThemThuocTuDanhMucDungChungRequest();
            result.init(data);
            return result;
        };
        ThemThuocTuDanhMucDungChungRequest.prototype.toJSON = function (data) {
            var e_467, _a;
            data = typeof data === 'object' ? data : {};
            if (Array.isArray(this.listOfThuocCanThem)) {
                data['listOfThuocCanThem'] = [];
                try {
                    for (var _b = __values(this.listOfThuocCanThem), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['listOfThuocCanThem'].push(item.toJSON());
                    }
                }
                catch (e_467_1) { e_467 = { error: e_467_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_467) throw e_467.error; }
                }
            }
            return data;
        };
        return ThemThuocTuDanhMucDungChungRequest;
    }());
    var DuocBenhVienPageListInputDto = /** @class */ (function () {
        function DuocBenhVienPageListInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DuocBenhVienPageListInputDto.prototype.init = function (data) {
            if (data) {
                this.loaiVatTuId = data['loaiVatTuId'];
                this.chuongTrinhId = data['chuongTrinhId'];
                this.soDangKy = data['soDangKy'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        DuocBenhVienPageListInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DuocBenhVienPageListInputDto();
            result.init(data);
            return result;
        };
        DuocBenhVienPageListInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiVatTuId'] = this.loaiVatTuId;
            data['chuongTrinhId'] = this.chuongTrinhId;
            data['soDangKy'] = this.soDangKy;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return DuocBenhVienPageListInputDto;
    }());
    var LOAI_THUOC;
    (function (LOAI_THUOC) {
        LOAI_THUOC[LOAI_THUOC["TayY"] = 1] = "TayY";
        LOAI_THUOC[LOAI_THUOC["ChePhamYHocCoTruyen"] = 2] = "ChePhamYHocCoTruyen";
        LOAI_THUOC[LOAI_THUOC["ViThuocYHocCoTruyen"] = 3] = "ViThuocYHocCoTruyen";
    })(LOAI_THUOC || (LOAI_THUOC = {}));
    var LOAI_VAT_TU_Y_TE;
    (function (LOAI_VAT_TU_Y_TE) {
        LOAI_VAT_TU_Y_TE[LOAI_VAT_TU_Y_TE["Thuoc"] = 0] = "Thuoc";
        LOAI_VAT_TU_Y_TE[LOAI_VAT_TU_Y_TE["VatTu"] = 1] = "VatTu";
        LOAI_VAT_TU_Y_TE[LOAI_VAT_TU_Y_TE["HoaChat"] = 4] = "HoaChat";
    })(LOAI_VAT_TU_Y_TE || (LOAI_VAT_TU_Y_TE = {}));
    var DuocDto = /** @class */ (function () {
        function DuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DuocDto.prototype.init = function (data) {
            if (data) {
                this.loaiVatTuId = data['loaiVatTuId'];
                this.loaiThuoc = data['loaiThuoc'];
                this.loaiDuocId = data['loaiDuocId'];
                this.nhomDuocId = data['nhomDuocId'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenDayDu = data['tenDayDu'];
                this.donViTinhId = data['donViTinhId'];
                this.donViTinh = data['donViTinh'];
                this.quyCach = data['quyCach'];
                this.hoatChat = data['hoatChat'];
                this.duongDungId = data['duongDungId'];
                this.duongDung = data['duongDung'];
                this.congDung = data['congDung'];
                this.hamLuong = data['hamLuong'];
                this.vtyt = data['vtyt'];
                this.soDangKy = data['soDangKy'];
                this.tamNgungSuDung = data['tamNgungSuDung'];
                this.bhyt = data['bhyt'];
                this.quanNhan = data['quanNhan'];
                this.loaiDieuTri = data['loaiDieuTri'];
                this.nhomDvktBhytId = data['nhomDvktBhytId'];
                this.bhytTyLeThanhToanDungTuyen = data['bhytTyLeThanhToanDungTuyen'];
                this.mienPhi = data['mienPhi'];
                this.tamNgungDuTru = data['tamNgungDuTru'];
                this.phamVi = data['phamVi'];
                this.quanTamDacDiet = data['quanTamDacDiet'];
                this.duocDcId = data['duocDcId'];
                this.maDuocChung = data['maDuocChung'];
                this.phanNhomDuocId = data['phanNhomDuocId'];
                this.phanLoaiDuocId = data['phanLoaiDuocId'];
                this.daChat = data['daChat'];
                this.maDmdc = data['maDmdc'];
                this.donViTinhToaThuocId = data['donViTinhToaThuocId'];
                this.donViTinhToaThuoc = data['donViTinhToaThuoc'];
                this.chuongTrinhId = data['chuongTrinhId'];
                this.nuocSanXuat = data['nuocSanXuat'];
                this.vacxinId = data['vacxinId'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        DuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DuocDto();
            result.init(data);
            return result;
        };
        DuocDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiVatTuId'] = this.loaiVatTuId;
            data['loaiThuoc'] = this.loaiThuoc;
            data['loaiDuocId'] = this.loaiDuocId;
            data['nhomDuocId'] = this.nhomDuocId;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenDayDu'] = this.tenDayDu;
            data['donViTinhId'] = this.donViTinhId;
            data['donViTinh'] = this.donViTinh;
            data['quyCach'] = this.quyCach;
            data['hoatChat'] = this.hoatChat;
            data['duongDungId'] = this.duongDungId;
            data['duongDung'] = this.duongDung;
            data['congDung'] = this.congDung;
            data['hamLuong'] = this.hamLuong;
            data['vtyt'] = this.vtyt;
            data['soDangKy'] = this.soDangKy;
            data['tamNgungSuDung'] = this.tamNgungSuDung;
            data['bhyt'] = this.bhyt;
            data['quanNhan'] = this.quanNhan;
            data['loaiDieuTri'] = this.loaiDieuTri;
            data['nhomDvktBhytId'] = this.nhomDvktBhytId;
            data['bhytTyLeThanhToanDungTuyen'] = this.bhytTyLeThanhToanDungTuyen;
            data['mienPhi'] = this.mienPhi;
            data['tamNgungDuTru'] = this.tamNgungDuTru;
            data['phamVi'] = this.phamVi;
            data['quanTamDacDiet'] = this.quanTamDacDiet;
            data['duocDcId'] = this.duocDcId;
            data['maDuocChung'] = this.maDuocChung;
            data['phanNhomDuocId'] = this.phanNhomDuocId;
            data['phanLoaiDuocId'] = this.phanLoaiDuocId;
            data['daChat'] = this.daChat;
            data['maDmdc'] = this.maDmdc;
            data['donViTinhToaThuocId'] = this.donViTinhToaThuocId;
            data['donViTinhToaThuoc'] = this.donViTinhToaThuoc;
            data['chuongTrinhId'] = this.chuongTrinhId;
            data['nuocSanXuat'] = this.nuocSanXuat;
            data['vacxinId'] = this.vacxinId;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return DuocDto;
    }());
    var PagedResultDtoOfDuocDto = /** @class */ (function () {
        function PagedResultDtoOfDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDuocDto.prototype.init = function (data) {
            var e_468, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DuocDto.fromJS(item));
                        }
                    }
                    catch (e_468_1) { e_468 = { error: e_468_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_468) throw e_468.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDuocDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDuocDto.prototype.toJSON = function (data) {
            var e_469, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_469_1) { e_469 = { error: e_469_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_469) throw e_469.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDuocDto;
    }());
    var PagedResultDtoOfDuocThongTinThauDto = /** @class */ (function () {
        function PagedResultDtoOfDuocThongTinThauDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDuocThongTinThauDto.prototype.init = function (data) {
            var e_470, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DuocThongTinThauDto.fromJS(item));
                        }
                    }
                    catch (e_470_1) { e_470 = { error: e_470_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_470) throw e_470.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDuocThongTinThauDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDuocThongTinThauDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDuocThongTinThauDto.prototype.toJSON = function (data) {
            var e_471, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_471_1) { e_471 = { error: e_471_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_471) throw e_471.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDuocThongTinThauDto;
    }());
    var GetEntityByIdMap;
    (function (GetEntityByIdMap) {
        GetEntityByIdMap[GetEntityByIdMap["BenhNhan"] = 1] = "BenhNhan";
        GetEntityByIdMap[GetEntityByIdMap["TiepNhan"] = 2] = "TiepNhan";
        GetEntityByIdMap[GetEntityByIdMap["NgoaiTruKhamBenh"] = 3] = "NgoaiTruKhamBenh";
        GetEntityByIdMap[GetEntityByIdMap["TiepNhanBenhNhanBHYT"] = 4] = "TiepNhanBenhNhanBHYT";
        GetEntityByIdMap[GetEntityByIdMap["DMDoiTuong"] = 5] = "DMDoiTuong";
        GetEntityByIdMap[GetEntityByIdMap["BenhNhanDiaChi"] = 6] = "BenhNhanDiaChi";
        GetEntityByIdMap[GetEntityByIdMap["BenhVien"] = 7] = "BenhVien";
    })(GetEntityByIdMap || (GetEntityByIdMap = {}));
    var GetEntityByIdInputDto = /** @class */ (function () {
        function GetEntityByIdInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GetEntityByIdInputDto.prototype.init = function (data) {
            var e_472, _a;
            if (data) {
                this.map = data['map'];
                if (Array.isArray(data['propertyOfDto'])) {
                    this.propertyOfDto = [];
                    try {
                        for (var _b = __values(data['propertyOfDto']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.propertyOfDto.push(item);
                        }
                    }
                    catch (e_472_1) { e_472 = { error: e_472_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_472) throw e_472.error; }
                    }
                }
                this.propertyId = data['propertyId'];
                this.id = data['id'];
                this.isGetOne = data['isGetOne'];
                this.isSoftDelete = data['isSoftDelete'];
            }
        };
        GetEntityByIdInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GetEntityByIdInputDto();
            result.init(data);
            return result;
        };
        GetEntityByIdInputDto.prototype.toJSON = function (data) {
            var e_473, _a;
            data = typeof data === 'object' ? data : {};
            data['map'] = this.map;
            if (Array.isArray(this.propertyOfDto)) {
                data['propertyOfDto'] = [];
                try {
                    for (var _b = __values(this.propertyOfDto), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['propertyOfDto'].push(item);
                    }
                }
                catch (e_473_1) { e_473 = { error: e_473_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_473) throw e_473.error; }
                }
            }
            data['propertyId'] = this.propertyId;
            data['id'] = this.id;
            data['isGetOne'] = this.isGetOne;
            data['isSoftDelete'] = this.isSoftDelete;
            return data;
        };
        return GetEntityByIdInputDto;
    }());
    var GetEntityByIdOutDto = /** @class */ (function () {
        function GetEntityByIdOutDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GetEntityByIdOutDto.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.dto = data['dto'];
                this.isSuccessful = data['isSuccessful'];
            }
        };
        GetEntityByIdOutDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GetEntityByIdOutDto();
            result.init(data);
            return result;
        };
        GetEntityByIdOutDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['dto'] = this.dto;
            data['isSuccessful'] = this.isSuccessful;
            return data;
        };
        return GetEntityByIdOutDto;
    }());
    var GiuongBenhDto = /** @class */ (function () {
        function GiuongBenhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GiuongBenhDto.prototype.init = function (data) {
            if (data) {
                this.benhVienId = data['benhVienId'];
                this.ma = data['ma'];
                this.moTa = data['moTa'];
                this.khoaDieuTriId = data['khoaDieuTriId'];
                this.phongBenhId = data['phongBenhId'];
                this.tang = data['tang'];
                this.vatDungKemTheo = data['vatDungKemTheo'];
                this.isActive = data['isActive'];
                this.isExists = data['isExists'];
                this.tenKhoaDieuTri = data['tenKhoaDieuTri'];
                this.tenPhongBenh = data['tenPhongBenh'];
                this.id = data['id'];
            }
        };
        GiuongBenhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GiuongBenhDto();
            result.init(data);
            return result;
        };
        GiuongBenhDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['benhVienId'] = this.benhVienId;
            data['ma'] = this.ma;
            data['moTa'] = this.moTa;
            data['khoaDieuTriId'] = this.khoaDieuTriId;
            data['phongBenhId'] = this.phongBenhId;
            data['tang'] = this.tang;
            data['vatDungKemTheo'] = this.vatDungKemTheo;
            data['isActive'] = this.isActive;
            data['isExists'] = this.isExists;
            data['tenKhoaDieuTri'] = this.tenKhoaDieuTri;
            data['tenPhongBenh'] = this.tenPhongBenh;
            data['id'] = this.id;
            return data;
        };
        return GiuongBenhDto;
    }());
    var GiuongBenhPagedRequestDto = /** @class */ (function () {
        function GiuongBenhPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GiuongBenhPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.khoaDieuTriId = data['khoaDieuTriId'];
                this.phongBenhId = data['phongBenhId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        GiuongBenhPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GiuongBenhPagedRequestDto();
            result.init(data);
            return result;
        };
        GiuongBenhPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['khoaDieuTriId'] = this.khoaDieuTriId;
            data['phongBenhId'] = this.phongBenhId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return GiuongBenhPagedRequestDto;
    }());
    var PagedResultDtoOfGiuongBenhDto = /** @class */ (function () {
        function PagedResultDtoOfGiuongBenhDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfGiuongBenhDto.prototype.init = function (data) {
            var e_474, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(GiuongBenhDto.fromJS(item));
                        }
                    }
                    catch (e_474_1) { e_474 = { error: e_474_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_474) throw e_474.error; }
                    }
                }
            }
        };
        PagedResultDtoOfGiuongBenhDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfGiuongBenhDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfGiuongBenhDto.prototype.toJSON = function (data) {
            var e_475, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_475_1) { e_475 = { error: e_475_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_475) throw e_475.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfGiuongBenhDto;
    }());
    var LstDictionaryDto = /** @class */ (function () {
        function LstDictionaryDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LstDictionaryDto.prototype.init = function (data) {
            if (data) {
                this.lstDictionaryTypeId = data['lstDictionaryTypeId'];
                this.lstDictionaryTypeCode = data['lstDictionaryTypeCode'];
                this.code = data['code'];
                this.name = data['name'];
                this.nameEn = data['nameEn'];
                this.parentId = data['parentId'];
                this.isActive = data['isActive'];
                this.isExists = data['isExists'];
                this.id = data['id'];
            }
        };
        LstDictionaryDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LstDictionaryDto();
            result.init(data);
            return result;
        };
        LstDictionaryDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['lstDictionaryTypeId'] = this.lstDictionaryTypeId;
            data['lstDictionaryTypeCode'] = this.lstDictionaryTypeCode;
            data['code'] = this.code;
            data['name'] = this.name;
            data['nameEn'] = this.nameEn;
            data['parentId'] = this.parentId;
            data['isActive'] = this.isActive;
            data['isExists'] = this.isExists;
            data['id'] = this.id;
            return data;
        };
        return LstDictionaryDto;
    }());
    var LstDictionaryGetByListCodePagedRequestDto = /** @class */ (function () {
        function LstDictionaryGetByListCodePagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LstDictionaryGetByListCodePagedRequestDto.prototype.init = function (data) {
            var e_476, _a;
            if (data) {
                if (Array.isArray(data['lstDictionaryTypeCodes'])) {
                    this.lstDictionaryTypeCodes = [];
                    try {
                        for (var _b = __values(data['lstDictionaryTypeCodes']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.lstDictionaryTypeCodes.push(item);
                        }
                    }
                    catch (e_476_1) { e_476 = { error: e_476_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_476) throw e_476.error; }
                    }
                }
            }
        };
        LstDictionaryGetByListCodePagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LstDictionaryGetByListCodePagedRequestDto();
            result.init(data);
            return result;
        };
        LstDictionaryGetByListCodePagedRequestDto.prototype.toJSON = function (data) {
            var e_477, _a;
            data = typeof data === 'object' ? data : {};
            if (Array.isArray(this.lstDictionaryTypeCodes)) {
                data['lstDictionaryTypeCodes'] = [];
                try {
                    for (var _b = __values(this.lstDictionaryTypeCodes), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['lstDictionaryTypeCodes'].push(item);
                    }
                }
                catch (e_477_1) { e_477 = { error: e_477_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_477) throw e_477.error; }
                }
            }
            return data;
        };
        return LstDictionaryGetByListCodePagedRequestDto;
    }());
    var LstDictionaryPagedRequestDto = /** @class */ (function () {
        function LstDictionaryPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LstDictionaryPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.lstDictionaryTypeId = data['lstDictionaryTypeId'];
                this.parentId = data['parentId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        LstDictionaryPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LstDictionaryPagedRequestDto();
            result.init(data);
            return result;
        };
        LstDictionaryPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['lstDictionaryTypeId'] = this.lstDictionaryTypeId;
            data['parentId'] = this.parentId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return LstDictionaryPagedRequestDto;
    }());
    var PagedResultDtoOfLstDictionaryDto = /** @class */ (function () {
        function PagedResultDtoOfLstDictionaryDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfLstDictionaryDto.prototype.init = function (data) {
            var e_478, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(LstDictionaryDto.fromJS(item));
                        }
                    }
                    catch (e_478_1) { e_478 = { error: e_478_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_478) throw e_478.error; }
                    }
                }
            }
        };
        PagedResultDtoOfLstDictionaryDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfLstDictionaryDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfLstDictionaryDto.prototype.toJSON = function (data) {
            var e_479, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_479_1) { e_479 = { error: e_479_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_479) throw e_479.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfLstDictionaryDto;
    }());
    var LstDictionaryTypeDto = /** @class */ (function () {
        function LstDictionaryTypeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LstDictionaryTypeDto.prototype.init = function (data) {
            if (data) {
                this.code = data['code'];
                this.name = data['name'];
                this.nameEn = data['nameEn'];
                this.level = data['level'];
                this.parentId = data['parentId'];
                this.isActive = data['isActive'];
                this.isExists = data['isExists'];
                this.id = data['id'];
            }
        };
        LstDictionaryTypeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LstDictionaryTypeDto();
            result.init(data);
            return result;
        };
        LstDictionaryTypeDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['code'] = this.code;
            data['name'] = this.name;
            data['nameEn'] = this.nameEn;
            data['level'] = this.level;
            data['parentId'] = this.parentId;
            data['isActive'] = this.isActive;
            data['isExists'] = this.isExists;
            data['id'] = this.id;
            return data;
        };
        return LstDictionaryTypeDto;
    }());
    var LstDictionaryTypePagedRequestDto = /** @class */ (function () {
        function LstDictionaryTypePagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LstDictionaryTypePagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.parentId = data['parentId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        LstDictionaryTypePagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LstDictionaryTypePagedRequestDto();
            result.init(data);
            return result;
        };
        LstDictionaryTypePagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['parentId'] = this.parentId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return LstDictionaryTypePagedRequestDto;
    }());
    var PagedResultDtoOfLstDictionaryTypeDto = /** @class */ (function () {
        function PagedResultDtoOfLstDictionaryTypeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfLstDictionaryTypeDto.prototype.init = function (data) {
            var e_480, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(LstDictionaryTypeDto.fromJS(item));
                        }
                    }
                    catch (e_480_1) { e_480 = { error: e_480_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_480) throw e_480.error; }
                    }
                }
            }
        };
        PagedResultDtoOfLstDictionaryTypeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfLstDictionaryTypeDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfLstDictionaryTypeDto.prototype.toJSON = function (data) {
            var e_481, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_481_1) { e_481 = { error: e_481_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_481) throw e_481.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfLstDictionaryTypeDto;
    }());
    var HoatChatPagedListInputDto = /** @class */ (function () {
        function HoatChatPagedListInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        HoatChatPagedListInputDto.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        HoatChatPagedListInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new HoatChatPagedListInputDto();
            result.init(data);
            return result;
        };
        HoatChatPagedListInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return HoatChatPagedListInputDto;
    }());
    var HoatChatDto = /** @class */ (function () {
        function HoatChatDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        HoatChatDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.cap = data['cap'];
                this.parentId = data['parentId'];
                this.stt = data['stt'];
                this.sttThuoc = data['sttThuoc'];
                this.duongDung = data['duongDung'];
                this.maDuongDung = data['maDuongDung'];
                this.ma1282 = data['ma1282'];
                this.tuyen = data['tuyen'];
                this.loaiDuocId = data['loaiDuocId'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        HoatChatDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new HoatChatDto();
            result.init(data);
            return result;
        };
        HoatChatDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['cap'] = this.cap;
            data['parentId'] = this.parentId;
            data['stt'] = this.stt;
            data['sttThuoc'] = this.sttThuoc;
            data['duongDung'] = this.duongDung;
            data['maDuongDung'] = this.maDuongDung;
            data['ma1282'] = this.ma1282;
            data['tuyen'] = this.tuyen;
            data['loaiDuocId'] = this.loaiDuocId;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return HoatChatDto;
    }());
    var PagedResultDtoOfHoatChatDto = /** @class */ (function () {
        function PagedResultDtoOfHoatChatDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfHoatChatDto.prototype.init = function (data) {
            var e_482, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(HoatChatDto.fromJS(item));
                        }
                    }
                    catch (e_482_1) { e_482 = { error: e_482_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_482) throw e_482.error; }
                    }
                }
            }
        };
        PagedResultDtoOfHoatChatDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfHoatChatDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfHoatChatDto.prototype.toJSON = function (data) {
            var e_483, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_483_1) { e_483 = { error: e_483_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_483) throw e_483.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfHoatChatDto;
    }());
    var KiemTraExcelThuocRequest = /** @class */ (function () {
        function KiemTraExcelThuocRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KiemTraExcelThuocRequest.prototype.init = function (data) {
            if (data) {
                this.fileDto = data['fileDto'] ? FileDto.fromJS(data['fileDto']) : undefined;
                this.hamLuongVaoTenDayDu = data['hamLuongVaoTenDayDu'];
                this.isUpdate = data['isUpdate'];
                this.isThuoc = data['isThuoc'];
            }
        };
        KiemTraExcelThuocRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KiemTraExcelThuocRequest();
            result.init(data);
            return result;
        };
        KiemTraExcelThuocRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['fileDto'] = this.fileDto ? this.fileDto.toJSON() : undefined;
            data['hamLuongVaoTenDayDu'] = this.hamLuongVaoTenDayDu;
            data['isUpdate'] = this.isUpdate;
            data['isThuoc'] = this.isThuoc;
            return data;
        };
        return KiemTraExcelThuocRequest;
    }());
    var ReadExcelThuocDto = /** @class */ (function () {
        function ReadExcelThuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ReadExcelThuocDto.prototype.init = function (data) {
            if (data) {
                this.stt = data['stt'];
                this.maduoc = data['maduoc'];
                this.mA_DMDC = data['mA_DMDC'];
                this.tenduoc = data['tenduoc'];
                this.hoatchat = data['hoatchat'];
                this.donvitinh = data['donvitinh'];
                this.hamluong = data['hamluong'];
                this.quycach = data['quycach'];
                this.duongdung = data['duongdung'];
                this.stT_DMBYT = data['stT_DMBYT'];
                this.stT_PHEDUYET = data['stT_PHEDUYET'];
                this.nuocsanxuat = data['nuocsanxuat'];
                this.hangsanxuat = data['hangsanxuat'];
                this.sodk = data['sodk'];
                this.loaithuoc = data['loaithuoc'];
                this.dachat = data['dachat'];
                this.dongiathau = data['dongiathau'];
                this.soqdthau = data['soqdthau'];
                this.nhomthau = data['nhomthau'];
                this.goithau = data['goithau'];
                this.ngaytrungthau = data['ngaytrungthau'];
                this.donViTinhId = data['donViTinhId'];
                this.duongDungId = data['duongDungId'];
                this.nhomDuocId = data['nhomDuocId'];
                this.phanNhomDuocId = data['phanNhomDuocId'];
                this.loaiThuoc = data['loaiThuoc'];
                this.bDaChat = data['bDaChat'];
                this.ngayTrungThau = data['ngayTrungThau'] ? moment__namespace(data['ngayTrungThau'].toString()) : undefined;
                this.donGiaThau = data['donGiaThau'];
                this.tenThuocSdkSttPheDuyet = data['tenThuocSdkSttPheDuyet'];
                this.tenSttPheDuyet = data['tenSttPheDuyet'];
                this.duocId = data['duocId'];
            }
        };
        ReadExcelThuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ReadExcelThuocDto();
            result.init(data);
            return result;
        };
        ReadExcelThuocDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['stt'] = this.stt;
            data['maduoc'] = this.maduoc;
            data['mA_DMDC'] = this.mA_DMDC;
            data['tenduoc'] = this.tenduoc;
            data['hoatchat'] = this.hoatchat;
            data['donvitinh'] = this.donvitinh;
            data['hamluong'] = this.hamluong;
            data['quycach'] = this.quycach;
            data['duongdung'] = this.duongdung;
            data['stT_DMBYT'] = this.stT_DMBYT;
            data['stT_PHEDUYET'] = this.stT_PHEDUYET;
            data['nuocsanxuat'] = this.nuocsanxuat;
            data['hangsanxuat'] = this.hangsanxuat;
            data['sodk'] = this.sodk;
            data['loaithuoc'] = this.loaithuoc;
            data['dachat'] = this.dachat;
            data['dongiathau'] = this.dongiathau;
            data['soqdthau'] = this.soqdthau;
            data['nhomthau'] = this.nhomthau;
            data['goithau'] = this.goithau;
            data['ngaytrungthau'] = this.ngaytrungthau;
            data['donViTinhId'] = this.donViTinhId;
            data['duongDungId'] = this.duongDungId;
            data['nhomDuocId'] = this.nhomDuocId;
            data['phanNhomDuocId'] = this.phanNhomDuocId;
            data['loaiThuoc'] = this.loaiThuoc;
            data['bDaChat'] = this.bDaChat;
            data['ngayTrungThau'] = this.ngayTrungThau ? this.ngayTrungThau.toISOString() : undefined;
            data['donGiaThau'] = this.donGiaThau;
            data['tenThuocSdkSttPheDuyet'] = this.tenThuocSdkSttPheDuyet;
            data['tenSttPheDuyet'] = this.tenSttPheDuyet;
            data['duocId'] = this.duocId;
            return data;
        };
        return ReadExcelThuocDto;
    }());
    var KiemTraThuocOutputDto = /** @class */ (function () {
        function KiemTraThuocOutputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KiemTraThuocOutputDto.prototype.init = function (data) {
            var e_484, _a;
            if (data) {
                this.excelDto = data['excelDto'] ? ReadExcelThuocDto.fromJS(data['excelDto']) : undefined;
                if (Array.isArray(data['messageError'])) {
                    this.messageError = [];
                    try {
                        for (var _b = __values(data['messageError']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.messageError.push(item);
                        }
                    }
                    catch (e_484_1) { e_484 = { error: e_484_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_484) throw e_484.error; }
                    }
                }
                this.isSuccessful = data['isSuccessful'];
            }
        };
        KiemTraThuocOutputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KiemTraThuocOutputDto();
            result.init(data);
            return result;
        };
        KiemTraThuocOutputDto.prototype.toJSON = function (data) {
            var e_485, _a;
            data = typeof data === 'object' ? data : {};
            data['excelDto'] = this.excelDto ? this.excelDto.toJSON() : undefined;
            if (Array.isArray(this.messageError)) {
                data['messageError'] = [];
                try {
                    for (var _b = __values(this.messageError), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['messageError'].push(item);
                    }
                }
                catch (e_485_1) { e_485 = { error: e_485_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_485) throw e_485.error; }
                }
            }
            data['isSuccessful'] = this.isSuccessful;
            return data;
        };
        return KiemTraThuocOutputDto;
    }());
    var KiemTraExcelThuocDto = /** @class */ (function () {
        function KiemTraExcelThuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KiemTraExcelThuocDto.prototype.init = function (data) {
            var e_486, _a, e_487, _b;
            if (data) {
                if (Array.isArray(data['danhSachHopLe'])) {
                    this.danhSachHopLe = [];
                    try {
                        for (var _c = __values(data['danhSachHopLe']), _d = _c.next(); !_d.done; _d = _c.next()) {
                            var item = _d.value;
                            this.danhSachHopLe.push(KiemTraThuocOutputDto.fromJS(item));
                        }
                    }
                    catch (e_486_1) { e_486 = { error: e_486_1 }; }
                    finally {
                        try {
                            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                        }
                        finally { if (e_486) throw e_486.error; }
                    }
                }
                if (Array.isArray(data['danhSachLoi'])) {
                    this.danhSachLoi = [];
                    try {
                        for (var _e = __values(data['danhSachLoi']), _f = _e.next(); !_f.done; _f = _e.next()) {
                            var item = _f.value;
                            this.danhSachLoi.push(KiemTraThuocOutputDto.fromJS(item));
                        }
                    }
                    catch (e_487_1) { e_487 = { error: e_487_1 }; }
                    finally {
                        try {
                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                        }
                        finally { if (e_487) throw e_487.error; }
                    }
                }
                this.isSuccessful = data['isSuccessful'];
                this.messageError = data['messageError'];
                this.tokenListSuccess = data['tokenListSuccess'];
            }
        };
        KiemTraExcelThuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KiemTraExcelThuocDto();
            result.init(data);
            return result;
        };
        KiemTraExcelThuocDto.prototype.toJSON = function (data) {
            var e_488, _a, e_489, _b;
            data = typeof data === 'object' ? data : {};
            if (Array.isArray(this.danhSachHopLe)) {
                data['danhSachHopLe'] = [];
                try {
                    for (var _c = __values(this.danhSachHopLe), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        data['danhSachHopLe'].push(item.toJSON());
                    }
                }
                catch (e_488_1) { e_488 = { error: e_488_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_488) throw e_488.error; }
                }
            }
            if (Array.isArray(this.danhSachLoi)) {
                data['danhSachLoi'] = [];
                try {
                    for (var _e = __values(this.danhSachLoi), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        data['danhSachLoi'].push(item.toJSON());
                    }
                }
                catch (e_489_1) { e_489 = { error: e_489_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_489) throw e_489.error; }
                }
            }
            data['isSuccessful'] = this.isSuccessful;
            data['messageError'] = this.messageError;
            data['tokenListSuccess'] = this.tokenListSuccess;
            return data;
        };
        return KiemTraExcelThuocDto;
    }());
    var InsertThuocHopLeRequest = /** @class */ (function () {
        function InsertThuocHopLeRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        InsertThuocHopLeRequest.prototype.init = function (data) {
            if (data) {
                this.token = data['token'];
            }
        };
        InsertThuocHopLeRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new InsertThuocHopLeRequest();
            result.init(data);
            return result;
        };
        InsertThuocHopLeRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['token'] = this.token;
            return data;
        };
        return InsertThuocHopLeRequest;
    }());
    var CommonResultDtoOfInt32 = /** @class */ (function () {
        function CommonResultDtoOfInt32(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CommonResultDtoOfInt32.prototype.init = function (data) {
            if (data) {
                this.isSuccessful = data['isSuccessful'];
                this.errorCode = data['errorCode'];
                this.errorMessage = data['errorMessage'];
                this.dataResult = data['dataResult'];
            }
        };
        CommonResultDtoOfInt32.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CommonResultDtoOfInt32();
            result.init(data);
            return result;
        };
        CommonResultDtoOfInt32.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isSuccessful'] = this.isSuccessful;
            data['errorCode'] = this.errorCode;
            data['errorMessage'] = this.errorMessage;
            data['dataResult'] = this.dataResult;
            return data;
        };
        return CommonResultDtoOfInt32;
    }());
    var UpdateThuocHopLeRequest = /** @class */ (function () {
        function UpdateThuocHopLeRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        UpdateThuocHopLeRequest.prototype.init = function (data) {
            if (data) {
                this.token = data['token'];
            }
        };
        UpdateThuocHopLeRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new UpdateThuocHopLeRequest();
            result.init(data);
            return result;
        };
        UpdateThuocHopLeRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['token'] = this.token;
            return data;
        };
        return UpdateThuocHopLeRequest;
    }());
    var KhangNguyenDto = /** @class */ (function () {
        function KhangNguyenDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KhangNguyenDto.prototype.init = function (data) {
            var e_490, _a;
            if (data) {
                this.ten = data['ten'];
                this.moTa = data['moTa'];
                if (Array.isArray(data['listVacXin'])) {
                    this.listVacXin = [];
                    try {
                        for (var _b = __values(data['listVacXin']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.listVacXin.push(ComboBoxDto.fromJS(item));
                        }
                    }
                    catch (e_490_1) { e_490 = { error: e_490_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_490) throw e_490.error; }
                    }
                }
                this.id = data['id'];
            }
        };
        KhangNguyenDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KhangNguyenDto();
            result.init(data);
            return result;
        };
        KhangNguyenDto.prototype.toJSON = function (data) {
            var e_491, _a;
            data = typeof data === 'object' ? data : {};
            data['ten'] = this.ten;
            data['moTa'] = this.moTa;
            if (Array.isArray(this.listVacXin)) {
                data['listVacXin'] = [];
                try {
                    for (var _b = __values(this.listVacXin), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['listVacXin'].push(item.toJSON());
                    }
                }
                catch (e_491_1) { e_491 = { error: e_491_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_491) throw e_491.error; }
                }
            }
            data['id'] = this.id;
            return data;
        };
        return KhangNguyenDto;
    }());
    var PagedResultDtoOfKhangNguyenDto = /** @class */ (function () {
        function PagedResultDtoOfKhangNguyenDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfKhangNguyenDto.prototype.init = function (data) {
            var e_492, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(KhangNguyenDto.fromJS(item));
                        }
                    }
                    catch (e_492_1) { e_492 = { error: e_492_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_492) throw e_492.error; }
                    }
                }
            }
        };
        PagedResultDtoOfKhangNguyenDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfKhangNguyenDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfKhangNguyenDto.prototype.toJSON = function (data) {
            var e_493, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_493_1) { e_493 = { error: e_493_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_493) throw e_493.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfKhangNguyenDto;
    }());
    var KhoDuocPagedRequestDto = /** @class */ (function () {
        function KhoDuocPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KhoDuocPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.loaiKhoId = data['loaiKhoId'];
                this.phongBanId = data['phongBanId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        KhoDuocPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KhoDuocPagedRequestDto();
            result.init(data);
            return result;
        };
        KhoDuocPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiKhoId'] = this.loaiKhoId;
            data['phongBanId'] = this.phongBanId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return KhoDuocPagedRequestDto;
    }());
    var KhoDuocDto = /** @class */ (function () {
        function KhoDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        KhoDuocDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenKhongDau = data['tenKhongDau'];
                this.phongBanName = data['phongBanName'];
                this.loaiKhoName = data['loaiKhoName'];
                this.phongBanId = data['phongBanId'];
                this.loaiKhoId = data['loaiKhoId'];
                this.khoDuoc = data['khoDuoc'];
                this.benhVienId = data['benhVienId'];
                this.creationTime = data['creationTime'] ? moment__namespace(data['creationTime'].toString()) : undefined;
                this.totalCount = data['totalCount'];
                this.isActive = data['isActive'];
                this.isExists = data['isExists'];
                this.id = data['id'];
            }
        };
        KhoDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new KhoDuocDto();
            result.init(data);
            return result;
        };
        KhoDuocDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenKhongDau'] = this.tenKhongDau;
            data['phongBanName'] = this.phongBanName;
            data['loaiKhoName'] = this.loaiKhoName;
            data['phongBanId'] = this.phongBanId;
            data['loaiKhoId'] = this.loaiKhoId;
            data['khoDuoc'] = this.khoDuoc;
            data['benhVienId'] = this.benhVienId;
            data['creationTime'] = this.creationTime ? this.creationTime.toISOString() : undefined;
            data['totalCount'] = this.totalCount;
            data['isActive'] = this.isActive;
            data['isExists'] = this.isExists;
            data['id'] = this.id;
            return data;
        };
        return KhoDuocDto;
    }());
    var PagedResultDtoOfKhoDuocDto = /** @class */ (function () {
        function PagedResultDtoOfKhoDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfKhoDuocDto.prototype.init = function (data) {
            var e_494, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(KhoDuocDto.fromJS(item));
                        }
                    }
                    catch (e_494_1) { e_494 = { error: e_494_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_494) throw e_494.error; }
                    }
                }
            }
        };
        PagedResultDtoOfKhoDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfKhoDuocDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfKhoDuocDto.prototype.toJSON = function (data) {
            var e_495, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_495_1) { e_495 = { error: e_495_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_495) throw e_495.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfKhoDuocDto;
    }());
    var LoaiDuocPagedListInputDto = /** @class */ (function () {
        function LoaiDuocPagedListInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LoaiDuocPagedListInputDto.prototype.init = function (data) {
            if (data) {
                this.loaiVatTuId = data['loaiVatTuId'];
                this.nhomLoaiDuocId = data['nhomLoaiDuocId'];
                this.parentId = data['parentId'];
                this.cap = data['cap'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        LoaiDuocPagedListInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LoaiDuocPagedListInputDto();
            result.init(data);
            return result;
        };
        LoaiDuocPagedListInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiVatTuId'] = this.loaiVatTuId;
            data['nhomLoaiDuocId'] = this.nhomLoaiDuocId;
            data['parentId'] = this.parentId;
            data['cap'] = this.cap;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return LoaiDuocPagedListInputDto;
    }());
    var LoaiDuocDto = /** @class */ (function () {
        function LoaiDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LoaiDuocDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenEn = data['tenEn'];
                this.tenKhongDau = data['tenKhongDau'];
                this.loaiVatTuId = data['loaiVatTuId'];
                this.nhomLoaiDuocId = data['nhomLoaiDuocId'];
                this.parentId = data['parentId'];
                this.cap = data['cap'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        LoaiDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LoaiDuocDto();
            result.init(data);
            return result;
        };
        LoaiDuocDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenEn'] = this.tenEn;
            data['tenKhongDau'] = this.tenKhongDau;
            data['loaiVatTuId'] = this.loaiVatTuId;
            data['nhomLoaiDuocId'] = this.nhomLoaiDuocId;
            data['parentId'] = this.parentId;
            data['cap'] = this.cap;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return LoaiDuocDto;
    }());
    var PagedResultDtoOfLoaiDuocDto = /** @class */ (function () {
        function PagedResultDtoOfLoaiDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfLoaiDuocDto.prototype.init = function (data) {
            var e_496, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(LoaiDuocDto.fromJS(item));
                        }
                    }
                    catch (e_496_1) { e_496 = { error: e_496_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_496) throw e_496.error; }
                    }
                }
            }
        };
        PagedResultDtoOfLoaiDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfLoaiDuocDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfLoaiDuocDto.prototype.toJSON = function (data) {
            var e_497, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_497_1) { e_497 = { error: e_497_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_497) throw e_497.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfLoaiDuocDto;
    }());
    var LoaiGiaDto = /** @class */ (function () {
        function LoaiGiaDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LoaiGiaDto.prototype.init = function (data) {
            if (data) {
                this.nhomGiaId = data['nhomGiaId'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.ghiChu = data['ghiChu'];
                this.giaHoTro = data['giaHoTro'];
                this.fieldName = data['fieldName'];
                this.loaiIdRef = data['loaiIdRef'];
                this.tienTeId = data['tienTeId'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.isExists = data['isExists'];
                this.tenTienTe = data['tenTienTe'];
                this.tenNhomGia = data['tenNhomGia'];
                this.loaiIdRefShow = data['loaiIdRefShow'];
                this.id = data['id'];
            }
        };
        LoaiGiaDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LoaiGiaDto();
            result.init(data);
            return result;
        };
        LoaiGiaDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['nhomGiaId'] = this.nhomGiaId;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['ghiChu'] = this.ghiChu;
            data['giaHoTro'] = this.giaHoTro;
            data['fieldName'] = this.fieldName;
            data['loaiIdRef'] = this.loaiIdRef;
            data['tienTeId'] = this.tienTeId;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['isExists'] = this.isExists;
            data['tenTienTe'] = this.tenTienTe;
            data['tenNhomGia'] = this.tenNhomGia;
            data['loaiIdRefShow'] = this.loaiIdRefShow;
            data['id'] = this.id;
            return data;
        };
        return LoaiGiaDto;
    }());
    var LoaiGiaPagedRequestDto = /** @class */ (function () {
        function LoaiGiaPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LoaiGiaPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.tienTeId = data['tienTeId'];
                this.nhomGiaId = data['nhomGiaId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        LoaiGiaPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LoaiGiaPagedRequestDto();
            result.init(data);
            return result;
        };
        LoaiGiaPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['tienTeId'] = this.tienTeId;
            data['nhomGiaId'] = this.nhomGiaId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return LoaiGiaPagedRequestDto;
    }());
    var PagedResultDtoOfLoaiGiaDto = /** @class */ (function () {
        function PagedResultDtoOfLoaiGiaDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfLoaiGiaDto.prototype.init = function (data) {
            var e_498, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(LoaiGiaDto.fromJS(item));
                        }
                    }
                    catch (e_498_1) { e_498 = { error: e_498_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_498) throw e_498.error; }
                    }
                }
            }
        };
        PagedResultDtoOfLoaiGiaDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfLoaiGiaDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfLoaiGiaDto.prototype.toJSON = function (data) {
            var e_499, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_499_1) { e_499 = { error: e_499_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_499) throw e_499.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfLoaiGiaDto;
    }());
    var LoaiVatTuDto = /** @class */ (function () {
        function LoaiVatTuDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LoaiVatTuDto.prototype.init = function (data) {
            if (data) {
                this.ten = data['ten'];
                this.tenEn = data['tenEn'];
                this.tenKhongDau = data['tenKhongDau'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        LoaiVatTuDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LoaiVatTuDto();
            result.init(data);
            return result;
        };
        LoaiVatTuDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ten'] = this.ten;
            data['tenEn'] = this.tenEn;
            data['tenKhongDau'] = this.tenKhongDau;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return LoaiVatTuDto;
    }());
    var PagedResultDtoOfLoaiVatTuDto = /** @class */ (function () {
        function PagedResultDtoOfLoaiVatTuDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfLoaiVatTuDto.prototype.init = function (data) {
            var e_500, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(LoaiVatTuDto.fromJS(item));
                        }
                    }
                    catch (e_500_1) { e_500 = { error: e_500_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_500) throw e_500.error; }
                    }
                }
            }
        };
        PagedResultDtoOfLoaiVatTuDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfLoaiVatTuDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfLoaiVatTuDto.prototype.toJSON = function (data) {
            var e_501, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_501_1) { e_501 = { error: e_501_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_501) throw e_501.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfLoaiVatTuDto;
    }());
    var NhaCungCapDto = /** @class */ (function () {
        function NhaCungCapDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhaCungCapDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenEn = data['tenEn'];
                this.tenKhongDau = data['tenKhongDau'];
                this.diaChi = data['diaChi'];
                this.dienThoai = data['dienThoai'];
                this.fax = data['fax'];
                this.email = data['email'];
                this.maSoThue = data['maSoThue'];
                this.giamDoc = data['giamDoc'];
                this.nguoiLienHe = data['nguoiLienHe'];
                this.loaiHinhCty = data['loaiHinhCty'];
                this.isActive = data['isActive'];
                this.benhVienId = data['benhVienId'];
                this.isExists = data['isExists'];
                this.id = data['id'];
            }
        };
        NhaCungCapDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhaCungCapDto();
            result.init(data);
            return result;
        };
        NhaCungCapDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenEn'] = this.tenEn;
            data['tenKhongDau'] = this.tenKhongDau;
            data['diaChi'] = this.diaChi;
            data['dienThoai'] = this.dienThoai;
            data['fax'] = this.fax;
            data['email'] = this.email;
            data['maSoThue'] = this.maSoThue;
            data['giamDoc'] = this.giamDoc;
            data['nguoiLienHe'] = this.nguoiLienHe;
            data['loaiHinhCty'] = this.loaiHinhCty;
            data['isActive'] = this.isActive;
            data['benhVienId'] = this.benhVienId;
            data['isExists'] = this.isExists;
            data['id'] = this.id;
            return data;
        };
        return NhaCungCapDto;
    }());
    var NhaCungCapPagedRequestDto = /** @class */ (function () {
        function NhaCungCapPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhaCungCapPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        NhaCungCapPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhaCungCapPagedRequestDto();
            result.init(data);
            return result;
        };
        NhaCungCapPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return NhaCungCapPagedRequestDto;
    }());
    var PagedResultDtoOfNhaCungCapDto = /** @class */ (function () {
        function PagedResultDtoOfNhaCungCapDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfNhaCungCapDto.prototype.init = function (data) {
            var e_502, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(NhaCungCapDto.fromJS(item));
                        }
                    }
                    catch (e_502_1) { e_502 = { error: e_502_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_502) throw e_502.error; }
                    }
                }
            }
        };
        PagedResultDtoOfNhaCungCapDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfNhaCungCapDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfNhaCungCapDto.prototype.toJSON = function (data) {
            var e_503, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_503_1) { e_503 = { error: e_503_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_503) throw e_503.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfNhaCungCapDto;
    }());
    var NHAN_LUC_LOAI_HINH_ANH;
    (function (NHAN_LUC_LOAI_HINH_ANH) {
        NHAN_LUC_LOAI_HINH_ANH[NHAN_LUC_LOAI_HINH_ANH["AnhDaiDien"] = 1] = "AnhDaiDien";
        NHAN_LUC_LOAI_HINH_ANH[NHAN_LUC_LOAI_HINH_ANH["ChuKy"] = 2] = "ChuKy";
    })(NHAN_LUC_LOAI_HINH_ANH || (NHAN_LUC_LOAI_HINH_ANH = {}));
    var NhanLucPagedRequestDto = /** @class */ (function () {
        function NhanLucPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhanLucPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.benhVienId = data['benhVienId'];
                this.phongBanId = data['phongBanId'];
                this.tinhTrang = data['tinhTrang'];
                this.chucVuId = data['chucVuId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        NhanLucPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhanLucPagedRequestDto();
            result.init(data);
            return result;
        };
        NhanLucPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['benhVienId'] = this.benhVienId;
            data['phongBanId'] = this.phongBanId;
            data['tinhTrang'] = this.tinhTrang;
            data['chucVuId'] = this.chucVuId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return NhanLucPagedRequestDto;
    }());
    var NhanLucDto = /** @class */ (function () {
        function NhanLucDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhanLucDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenKhongDau = data['tenKhongDau'];
                this.ngaySinh = data['ngaySinh'] ? moment__namespace(data['ngaySinh'].toString()) : undefined;
                this.gioiTinh = data['gioiTinh'];
                this.dienThoai = data['dienThoai'];
                this.cmnd = data['cmnd'];
                this.ngayCap = data['ngayCap'] ? moment__namespace(data['ngayCap'].toString()) : undefined;
                this.noiCapCmnd = data['noiCapCmnd'];
                this.phongBanId = data['phongBanId'];
                this.quocTichId = data['quocTichId'];
                this.tinhId = data['tinhId'];
                this.huyenId = data['huyenId'];
                this.xaId = data['xaId'];
                this.diaChi = data['diaChi'];
                this.danTocId = data['danTocId'];
                this.tinhTrang = data['tinhTrang'];
                this.chucVuId = data['chucVuId'];
                this.chucDanhId = data['chucDanhId'];
                this.loaiNhanLucId = data['loaiNhanLucId'];
                this.trinhDoChuyenMonId = data['trinhDoChuyenMonId'];
                this.chuyenNganhChinhId = data['chuyenNganhChinhId'];
                this.chuyenNganhPhuId = data['chuyenNganhPhuId'];
                this.soChungChiHanhNghe = data['soChungChiHanhNghe'];
                this.ngayCapChinhChiHanhNghe = data['ngayCapChinhChiHanhNghe'] ? moment__namespace(data['ngayCapChinhChiHanhNghe'].toString()) : undefined;
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        NhanLucDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhanLucDto();
            result.init(data);
            return result;
        };
        NhanLucDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenKhongDau'] = this.tenKhongDau;
            data['ngaySinh'] = this.ngaySinh ? this.ngaySinh.toISOString() : undefined;
            data['gioiTinh'] = this.gioiTinh;
            data['dienThoai'] = this.dienThoai;
            data['cmnd'] = this.cmnd;
            data['ngayCap'] = this.ngayCap ? this.ngayCap.toISOString() : undefined;
            data['noiCapCmnd'] = this.noiCapCmnd;
            data['phongBanId'] = this.phongBanId;
            data['quocTichId'] = this.quocTichId;
            data['tinhId'] = this.tinhId;
            data['huyenId'] = this.huyenId;
            data['xaId'] = this.xaId;
            data['diaChi'] = this.diaChi;
            data['danTocId'] = this.danTocId;
            data['tinhTrang'] = this.tinhTrang;
            data['chucVuId'] = this.chucVuId;
            data['chucDanhId'] = this.chucDanhId;
            data['loaiNhanLucId'] = this.loaiNhanLucId;
            data['trinhDoChuyenMonId'] = this.trinhDoChuyenMonId;
            data['chuyenNganhChinhId'] = this.chuyenNganhChinhId;
            data['chuyenNganhPhuId'] = this.chuyenNganhPhuId;
            data['soChungChiHanhNghe'] = this.soChungChiHanhNghe;
            data['ngayCapChinhChiHanhNghe'] = this.ngayCapChinhChiHanhNghe ? this.ngayCapChinhChiHanhNghe.toISOString() : undefined;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return NhanLucDto;
    }());
    var PagedResultDtoOfNhanLucDto = /** @class */ (function () {
        function PagedResultDtoOfNhanLucDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfNhanLucDto.prototype.init = function (data) {
            var e_504, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(NhanLucDto.fromJS(item));
                        }
                    }
                    catch (e_504_1) { e_504 = { error: e_504_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_504) throw e_504.error; }
                    }
                }
            }
        };
        PagedResultDtoOfNhanLucDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfNhanLucDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfNhanLucDto.prototype.toJSON = function (data) {
            var e_505, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_505_1) { e_505 = { error: e_505_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_505) throw e_505.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfNhanLucDto;
    }());
    var NhomDuocPagedListInputDto = /** @class */ (function () {
        function NhomDuocPagedListInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhomDuocPagedListInputDto.prototype.init = function (data) {
            if (data) {
                this.phanNhomDuocId = data['phanNhomDuocId'];
                this.loaiThuoc = data['loaiThuoc'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        NhomDuocPagedListInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhomDuocPagedListInputDto();
            result.init(data);
            return result;
        };
        NhomDuocPagedListInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['phanNhomDuocId'] = this.phanNhomDuocId;
            data['loaiThuoc'] = this.loaiThuoc;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return NhomDuocPagedListInputDto;
    }());
    var NhomDuocDto = /** @class */ (function () {
        function NhomDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhomDuocDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenEn = data['tenEn'];
                this.tenKhongDau = data['tenKhongDau'];
                this.phanNhomDuocId = data['phanNhomDuocId'];
                this.loaiThuoc = data['loaiThuoc'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        NhomDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhomDuocDto();
            result.init(data);
            return result;
        };
        NhomDuocDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenEn'] = this.tenEn;
            data['tenKhongDau'] = this.tenKhongDau;
            data['phanNhomDuocId'] = this.phanNhomDuocId;
            data['loaiThuoc'] = this.loaiThuoc;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return NhomDuocDto;
    }());
    var PagedResultDtoOfNhomDuocDto = /** @class */ (function () {
        function PagedResultDtoOfNhomDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfNhomDuocDto.prototype.init = function (data) {
            var e_506, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(NhomDuocDto.fromJS(item));
                        }
                    }
                    catch (e_506_1) { e_506 = { error: e_506_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_506) throw e_506.error; }
                    }
                }
            }
        };
        PagedResultDtoOfNhomDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfNhomDuocDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfNhomDuocDto.prototype.toJSON = function (data) {
            var e_507, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_507_1) { e_507 = { error: e_507_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_507) throw e_507.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfNhomDuocDto;
    }());
    var NhomDvktBhyt_ThuocVtyt;
    (function (NhomDvktBhyt_ThuocVtyt) {
        NhomDvktBhyt_ThuocVtyt[NhomDvktBhyt_ThuocVtyt["DichVuKyThuat"] = 0] = "DichVuKyThuat";
        NhomDvktBhyt_ThuocVtyt[NhomDvktBhyt_ThuocVtyt["Thuoc"] = 1] = "Thuoc";
        NhomDvktBhyt_ThuocVtyt[NhomDvktBhyt_ThuocVtyt["VatTuYTe"] = 2] = "VatTuYTe";
    })(NhomDvktBhyt_ThuocVtyt || (NhomDvktBhyt_ThuocVtyt = {}));
    var NhomDvktBhytPagedListInputDto = /** @class */ (function () {
        function NhomDvktBhytPagedListInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhomDvktBhytPagedListInputDto.prototype.init = function (data) {
            if (data) {
                this.thuocVtyt = data['thuocVtyt'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        NhomDvktBhytPagedListInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhomDvktBhytPagedListInputDto();
            result.init(data);
            return result;
        };
        NhomDvktBhytPagedListInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['thuocVtyt'] = this.thuocVtyt;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return NhomDvktBhytPagedListInputDto;
    }());
    var NhomDvktBhytDto = /** @class */ (function () {
        function NhomDvktBhytDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhomDvktBhytDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.thuocVtyt = data['thuocVtyt'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        NhomDvktBhytDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhomDvktBhytDto();
            result.init(data);
            return result;
        };
        NhomDvktBhytDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['thuocVtyt'] = this.thuocVtyt;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return NhomDvktBhytDto;
    }());
    var PagedResultDtoOfNhomDvktBhytDto = /** @class */ (function () {
        function PagedResultDtoOfNhomDvktBhytDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfNhomDvktBhytDto.prototype.init = function (data) {
            var e_508, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(NhomDvktBhytDto.fromJS(item));
                        }
                    }
                    catch (e_508_1) { e_508 = { error: e_508_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_508) throw e_508.error; }
                    }
                }
            }
        };
        PagedResultDtoOfNhomDvktBhytDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfNhomDvktBhytDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfNhomDvktBhytDto.prototype.toJSON = function (data) {
            var e_509, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_509_1) { e_509 = { error: e_509_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_509) throw e_509.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfNhomDvktBhytDto;
    }());
    var GetPermissionInputDto = /** @class */ (function () {
        function GetPermissionInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GetPermissionInputDto.prototype.init = function (data) {
            if (data) {
                this.benhVienId = data['benhVienId'];
                this.isRoleStatic = data['isRoleStatic'];
            }
        };
        GetPermissionInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GetPermissionInputDto();
            result.init(data);
            return result;
        };
        GetPermissionInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['benhVienId'] = this.benhVienId;
            data['isRoleStatic'] = this.isRoleStatic;
            return data;
        };
        return GetPermissionInputDto;
    }());
    var ProviderInfoDto = /** @class */ (function () {
        function ProviderInfoDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ProviderInfoDto.prototype.init = function (data) {
            if (data) {
                this.providerName = data['providerName'];
                this.providerKey = data['providerKey'];
            }
        };
        ProviderInfoDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ProviderInfoDto();
            result.init(data);
            return result;
        };
        ProviderInfoDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['providerName'] = this.providerName;
            data['providerKey'] = this.providerKey;
            return data;
        };
        return ProviderInfoDto;
    }());
    var PermissionGrantInfoDto = /** @class */ (function () {
        function PermissionGrantInfoDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PermissionGrantInfoDto.prototype.init = function (data) {
            var e_510, _a, e_511, _b;
            if (data) {
                this.name = data['name'];
                this.displayName = data['displayName'];
                this.parentName = data['parentName'];
                this.isGranted = data['isGranted'];
                if (Array.isArray(data['allowedProviders'])) {
                    this.allowedProviders = [];
                    try {
                        for (var _c = __values(data['allowedProviders']), _d = _c.next(); !_d.done; _d = _c.next()) {
                            var item = _d.value;
                            this.allowedProviders.push(item);
                        }
                    }
                    catch (e_510_1) { e_510 = { error: e_510_1 }; }
                    finally {
                        try {
                            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                        }
                        finally { if (e_510) throw e_510.error; }
                    }
                }
                if (Array.isArray(data['grantedProviders'])) {
                    this.grantedProviders = [];
                    try {
                        for (var _e = __values(data['grantedProviders']), _f = _e.next(); !_f.done; _f = _e.next()) {
                            var item = _f.value;
                            this.grantedProviders.push(ProviderInfoDto.fromJS(item));
                        }
                    }
                    catch (e_511_1) { e_511 = { error: e_511_1 }; }
                    finally {
                        try {
                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                        }
                        finally { if (e_511) throw e_511.error; }
                    }
                }
            }
        };
        PermissionGrantInfoDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PermissionGrantInfoDto();
            result.init(data);
            return result;
        };
        PermissionGrantInfoDto.prototype.toJSON = function (data) {
            var e_512, _a, e_513, _b;
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['displayName'] = this.displayName;
            data['parentName'] = this.parentName;
            data['isGranted'] = this.isGranted;
            if (Array.isArray(this.allowedProviders)) {
                data['allowedProviders'] = [];
                try {
                    for (var _c = __values(this.allowedProviders), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        data['allowedProviders'].push(item);
                    }
                }
                catch (e_512_1) { e_512 = { error: e_512_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_512) throw e_512.error; }
                }
            }
            if (Array.isArray(this.grantedProviders)) {
                data['grantedProviders'] = [];
                try {
                    for (var _e = __values(this.grantedProviders), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        data['grantedProviders'].push(item.toJSON());
                    }
                }
                catch (e_513_1) { e_513 = { error: e_513_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_513) throw e_513.error; }
                }
            }
            return data;
        };
        return PermissionGrantInfoDto;
    }());
    var PermissionGroupDto = /** @class */ (function () {
        function PermissionGroupDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PermissionGroupDto.prototype.init = function (data) {
            var e_514, _a;
            if (data) {
                this.name = data['name'];
                this.displayName = data['displayName'];
                if (Array.isArray(data['permissions'])) {
                    this.permissions = [];
                    try {
                        for (var _b = __values(data['permissions']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.permissions.push(PermissionGrantInfoDto.fromJS(item));
                        }
                    }
                    catch (e_514_1) { e_514 = { error: e_514_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_514) throw e_514.error; }
                    }
                }
            }
        };
        PermissionGroupDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PermissionGroupDto();
            result.init(data);
            return result;
        };
        PermissionGroupDto.prototype.toJSON = function (data) {
            var e_515, _a;
            data = typeof data === 'object' ? data : {};
            data['name'] = this.name;
            data['displayName'] = this.displayName;
            if (Array.isArray(this.permissions)) {
                data['permissions'] = [];
                try {
                    for (var _b = __values(this.permissions), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['permissions'].push(item.toJSON());
                    }
                }
                catch (e_515_1) { e_515 = { error: e_515_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_515) throw e_515.error; }
                }
            }
            return data;
        };
        return PermissionGroupDto;
    }());
    var GetPermissionListResultDto = /** @class */ (function () {
        function GetPermissionListResultDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GetPermissionListResultDto.prototype.init = function (data) {
            var e_516, _a;
            if (data) {
                this.entityDisplayName = data['entityDisplayName'];
                if (Array.isArray(data['groups'])) {
                    this.groups = [];
                    try {
                        for (var _b = __values(data['groups']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.groups.push(PermissionGroupDto.fromJS(item));
                        }
                    }
                    catch (e_516_1) { e_516 = { error: e_516_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_516) throw e_516.error; }
                    }
                }
            }
        };
        GetPermissionListResultDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GetPermissionListResultDto();
            result.init(data);
            return result;
        };
        GetPermissionListResultDto.prototype.toJSON = function (data) {
            var e_517, _a;
            data = typeof data === 'object' ? data : {};
            data['entityDisplayName'] = this.entityDisplayName;
            if (Array.isArray(this.groups)) {
                data['groups'] = [];
                try {
                    for (var _b = __values(this.groups), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['groups'].push(item.toJSON());
                    }
                }
                catch (e_517_1) { e_517 = { error: e_517_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_517) throw e_517.error; }
                }
            }
            return data;
        };
        return GetPermissionListResultDto;
    }());
    var LOAI_PHAC_DO;
    (function (LOAI_PHAC_DO) {
        LOAI_PHAC_DO[LOAI_PHAC_DO["PhacDoBac1"] = 1] = "PhacDoBac1";
        LOAI_PHAC_DO[LOAI_PHAC_DO["PhacDoBac2"] = 2] = "PhacDoBac2";
    })(LOAI_PHAC_DO || (LOAI_PHAC_DO = {}));
    var PhacDoDieuTriPagedRequestDto = /** @class */ (function () {
        function PhacDoDieuTriPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PhacDoDieuTriPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.loaiPhacDo = data['loaiPhacDo'];
                this.isActive = data['isActive'];
                this.filter = data['filter'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PhacDoDieuTriPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PhacDoDieuTriPagedRequestDto();
            result.init(data);
            return result;
        };
        PhacDoDieuTriPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiPhacDo'] = this.loaiPhacDo;
            data['isActive'] = this.isActive;
            data['filter'] = this.filter;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PhacDoDieuTriPagedRequestDto;
    }());
    var PhacDoDieuTriDto = /** @class */ (function () {
        function PhacDoDieuTriDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PhacDoDieuTriDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.loaiPhacDo = data['loaiPhacDo'];
                this.isActive = data['isActive'];
                this.trangThaiShow = data['trangThaiShow'];
                this.loaiPhacDoShow = data['loaiPhacDoShow'];
                this.id = data['id'];
            }
        };
        PhacDoDieuTriDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PhacDoDieuTriDto();
            result.init(data);
            return result;
        };
        PhacDoDieuTriDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['loaiPhacDo'] = this.loaiPhacDo;
            data['isActive'] = this.isActive;
            data['trangThaiShow'] = this.trangThaiShow;
            data['loaiPhacDoShow'] = this.loaiPhacDoShow;
            data['id'] = this.id;
            return data;
        };
        return PhacDoDieuTriDto;
    }());
    var PagedResultDtoOfPhacDoDieuTriDto = /** @class */ (function () {
        function PagedResultDtoOfPhacDoDieuTriDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfPhacDoDieuTriDto.prototype.init = function (data) {
            var e_518, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(PhacDoDieuTriDto.fromJS(item));
                        }
                    }
                    catch (e_518_1) { e_518 = { error: e_518_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_518) throw e_518.error; }
                    }
                }
            }
        };
        PagedResultDtoOfPhacDoDieuTriDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfPhacDoDieuTriDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfPhacDoDieuTriDto.prototype.toJSON = function (data) {
            var e_519, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_519_1) { e_519 = { error: e_519_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_519) throw e_519.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfPhacDoDieuTriDto;
    }());
    var PhanNhomDuocDto = /** @class */ (function () {
        function PhanNhomDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PhanNhomDuocDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenKhongDau = data['tenKhongDau'];
                this.isActive = data['isActive'];
                this.id = data['id'];
            }
        };
        PhanNhomDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PhanNhomDuocDto();
            result.init(data);
            return result;
        };
        PhanNhomDuocDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenKhongDau'] = this.tenKhongDau;
            data['isActive'] = this.isActive;
            data['id'] = this.id;
            return data;
        };
        return PhanNhomDuocDto;
    }());
    var PagedResultDtoOfPhanNhomDuocDto = /** @class */ (function () {
        function PagedResultDtoOfPhanNhomDuocDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfPhanNhomDuocDto.prototype.init = function (data) {
            var e_520, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(PhanNhomDuocDto.fromJS(item));
                        }
                    }
                    catch (e_520_1) { e_520 = { error: e_520_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_520) throw e_520.error; }
                    }
                }
            }
        };
        PagedResultDtoOfPhanNhomDuocDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfPhanNhomDuocDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfPhanNhomDuocDto.prototype.toJSON = function (data) {
            var e_521, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_521_1) { e_521 = { error: e_521_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_521) throw e_521.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfPhanNhomDuocDto;
    }());
    var PhongBanTreeDto = /** @class */ (function () {
        function PhongBanTreeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PhongBanTreeDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.parentId = data['parentId'];
                this.benhVienId = data['benhVienId'];
                this.id = data['id'];
            }
        };
        PhongBanTreeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PhongBanTreeDto();
            result.init(data);
            return result;
        };
        PhongBanTreeDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['parentId'] = this.parentId;
            data['benhVienId'] = this.benhVienId;
            data['id'] = this.id;
            return data;
        };
        return PhongBanTreeDto;
    }());
    var PagedRequestPhongBanDto = /** @class */ (function () {
        function PagedRequestPhongBanDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedRequestPhongBanDto.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedRequestPhongBanDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedRequestPhongBanDto();
            result.init(data);
            return result;
        };
        PagedRequestPhongBanDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedRequestPhongBanDto;
    }());
    var PhongBanDto = /** @class */ (function () {
        function PhongBanDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PhongBanDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenEn = data['tenEn'];
                this.loaiPhongBanId = data['loaiPhongBanId'];
                this.cap = data['cap'];
                this.parentId = data['parentId'];
                this.loaiPhongBenhId = data['loaiPhongBenhId'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.loaiPhongBan = data['loaiPhongBan'];
                this.parentName = data['parentName'];
                this.id = data['id'];
            }
        };
        PhongBanDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PhongBanDto();
            result.init(data);
            return result;
        };
        PhongBanDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenEn'] = this.tenEn;
            data['loaiPhongBanId'] = this.loaiPhongBanId;
            data['cap'] = this.cap;
            data['parentId'] = this.parentId;
            data['loaiPhongBenhId'] = this.loaiPhongBenhId;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['loaiPhongBan'] = this.loaiPhongBan;
            data['parentName'] = this.parentName;
            data['id'] = this.id;
            return data;
        };
        return PhongBanDto;
    }());
    var PagedResultDtoOfPhongBanDto = /** @class */ (function () {
        function PagedResultDtoOfPhongBanDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfPhongBanDto.prototype.init = function (data) {
            var e_522, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(PhongBanDto.fromJS(item));
                        }
                    }
                    catch (e_522_1) { e_522 = { error: e_522_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_522) throw e_522.error; }
                    }
                }
            }
        };
        PagedResultDtoOfPhongBanDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfPhongBanDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfPhongBanDto.prototype.toJSON = function (data) {
            var e_523, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_523_1) { e_523 = { error: e_523_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_523) throw e_523.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfPhongBanDto;
    }());
    var FetchBenhIcdSearchRequest = /** @class */ (function () {
        function FetchBenhIcdSearchRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        FetchBenhIcdSearchRequest.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.chuongId = data['chuongId'];
                this.nhomId = data['nhomId'];
                this.isSelect = data['isSelect'];
                this.maBenh = data['maBenh'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        FetchBenhIcdSearchRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new FetchBenhIcdSearchRequest();
            result.init(data);
            return result;
        };
        FetchBenhIcdSearchRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['chuongId'] = this.chuongId;
            data['nhomId'] = this.nhomId;
            data['isSelect'] = this.isSelect;
            data['maBenh'] = this.maBenh;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return FetchBenhIcdSearchRequest;
    }());
    var PagedResultDtoOfComboBoxDto = /** @class */ (function () {
        function PagedResultDtoOfComboBoxDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfComboBoxDto.prototype.init = function (data) {
            var e_524, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(ComboBoxDto.fromJS(item));
                        }
                    }
                    catch (e_524_1) { e_524 = { error: e_524_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_524) throw e_524.error; }
                    }
                }
            }
        };
        PagedResultDtoOfComboBoxDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfComboBoxDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfComboBoxDto.prototype.toJSON = function (data) {
            var e_525, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_525_1) { e_525 = { error: e_525_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_525) throw e_525.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfComboBoxDto;
    }());
    var BenhIcdSearchDto = /** @class */ (function () {
        function BenhIcdSearchDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        BenhIcdSearchDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenNhom = data['tenNhom'];
                this.tenChuong = data['tenChuong'];
                this.id = data['id'];
            }
        };
        BenhIcdSearchDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new BenhIcdSearchDto();
            result.init(data);
            return result;
        };
        BenhIcdSearchDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenNhom'] = this.tenNhom;
            data['tenChuong'] = this.tenChuong;
            data['id'] = this.id;
            return data;
        };
        return BenhIcdSearchDto;
    }());
    var PagedResultDtoOfBenhIcdSearchDto = /** @class */ (function () {
        function PagedResultDtoOfBenhIcdSearchDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfBenhIcdSearchDto.prototype.init = function (data) {
            var e_526, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(BenhIcdSearchDto.fromJS(item));
                        }
                    }
                    catch (e_526_1) { e_526 = { error: e_526_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_526) throw e_526.error; }
                    }
                }
            }
        };
        PagedResultDtoOfBenhIcdSearchDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfBenhIcdSearchDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfBenhIcdSearchDto.prototype.toJSON = function (data) {
            var e_527, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_527_1) { e_527 = { error: e_527_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_527) throw e_527.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfBenhIcdSearchDto;
    }());
    var SelectOptionType;
    (function (SelectOptionType) {
        SelectOptionType[SelectOptionType["GioiTinh"] = 0] = "GioiTinh";
        SelectOptionType[SelectOptionType["GioiTinhCon"] = 1] = "GioiTinhCon";
        SelectOptionType[SelectOptionType["CapDoDonViHanhChinh"] = 2] = "CapDoDonViHanhChinh";
        SelectOptionType[SelectOptionType["LoaiBenhVien"] = 3] = "LoaiBenhVien";
        SelectOptionType[SelectOptionType["NhanLucTinhTrang"] = 4] = "NhanLucTinhTrang";
        SelectOptionType[SelectOptionType["LoaiThuoc"] = 5] = "LoaiThuoc";
        SelectOptionType[SelectOptionType["DonViThoiGianSuDung"] = 6] = "DonViThoiGianSuDung";
        SelectOptionType[SelectOptionType["ToaThuocMauLoai"] = 7] = "ToaThuocMauLoai";
        SelectOptionType[SelectOptionType["NhomDvktBhytThuocVtyt"] = 8] = "NhomDvktBhytThuocVtyt";
        SelectOptionType[SelectOptionType["BenhNhanLoaiDiaChi"] = 9] = "BenhNhanLoaiDiaChi";
        SelectOptionType[SelectOptionType["NoiTuVong"] = 10] = "NoiTuVong";
        SelectOptionType[SelectOptionType["CapCoSo"] = 11] = "CapCoSo";
        SelectOptionType[SelectOptionType["LoaiPhacDo"] = 12] = "LoaiPhacDo";
        SelectOptionType[SelectOptionType["MucDoDapUng"] = 13] = "MucDoDapUng";
        SelectOptionType[SelectOptionType["LoaiPhieu"] = 14] = "LoaiPhieu";
        SelectOptionType[SelectOptionType["BHYTTuyen"] = 15] = "BHYTTuyen";
        SelectOptionType[SelectOptionType["KyBaoCao3081"] = 16] = "KyBaoCao3081";
        SelectOptionType[SelectOptionType["TrangThaiBaoCao3081"] = 17] = "TrangThaiBaoCao3081";
        SelectOptionType[SelectOptionType["KhamBenhNgoaiTruKetQuaKham"] = 18] = "KhamBenhNgoaiTruKetQuaKham";
        SelectOptionType[SelectOptionType["BenhTruyenNhiemPhanLoaiChanDoan"] = 19] = "BenhTruyenNhiemPhanLoaiChanDoan";
        SelectOptionType[SelectOptionType["BenhTruyenNhiemTiemChung"] = 20] = "BenhTruyenNhiemTiemChung";
        SelectOptionType[SelectOptionType["BenhTruyenNhiemTinhTrangTruongHopBenh"] = 21] = "BenhTruyenNhiemTinhTrangTruongHopBenh";
        SelectOptionType[SelectOptionType["BenhTruyenNhiemLoaiXetNghiem"] = 22] = "BenhTruyenNhiemLoaiXetNghiem";
        SelectOptionType[SelectOptionType["BenhTruyenNhiemLoaiCoSoDieuTri"] = 23] = "BenhTruyenNhiemLoaiCoSoDieuTri";
        SelectOptionType[SelectOptionType["BenhTruyenNhiemKetQuaXetNghiem"] = 24] = "BenhTruyenNhiemKetQuaXetNghiem";
        SelectOptionType[SelectOptionType["DoiTuongXetNghiem"] = 25] = "DoiTuongXetNghiem";
        SelectOptionType[SelectOptionType["TrangThaiXetNghiem"] = 26] = "TrangThaiXetNghiem";
        SelectOptionType[SelectOptionType["Tinh"] = 27] = "Tinh";
        SelectOptionType[SelectOptionType["TinhSession"] = 28] = "TinhSession";
        SelectOptionType[SelectOptionType["Huyen"] = 29] = "Huyen";
        SelectOptionType[SelectOptionType["HuyenSesion"] = 30] = "HuyenSesion";
        SelectOptionType[SelectOptionType["Xa"] = 31] = "Xa";
        SelectOptionType[SelectOptionType["Thon"] = 32] = "Thon";
        SelectOptionType[SelectOptionType["XaHuyenTinh"] = 33] = "XaHuyenTinh";
        SelectOptionType[SelectOptionType["HoatChat"] = 34] = "HoatChat";
        SelectOptionType[SelectOptionType["LoaiVatTu"] = 35] = "LoaiVatTu";
        SelectOptionType[SelectOptionType["NhomDuoc"] = 36] = "NhomDuoc";
        SelectOptionType[SelectOptionType["DonViTinh"] = 37] = "DonViTinh";
        SelectOptionType[SelectOptionType["DonViTinhCoBan"] = 38] = "DonViTinhCoBan";
        SelectOptionType[SelectOptionType["LoaiDuoc"] = 39] = "LoaiDuoc";
        SelectOptionType[SelectOptionType["PhanNhomDuoc"] = 40] = "PhanNhomDuoc";
        SelectOptionType[SelectOptionType["ChuongTrinh"] = 41] = "ChuongTrinh";
        SelectOptionType[SelectOptionType["NhomDichVuKyThuatBaoHiem"] = 42] = "NhomDichVuKyThuatBaoHiem";
        SelectOptionType[SelectOptionType["NhomDvktBhytThuoc"] = 43] = "NhomDvktBhytThuoc";
        SelectOptionType[SelectOptionType["PhongBan"] = 44] = "PhongBan";
        SelectOptionType[SelectOptionType["PhongBanByDichVu"] = 45] = "PhongBanByDichVu";
        SelectOptionType[SelectOptionType["NhomThamSoHeThong"] = 46] = "NhomThamSoHeThong";
        SelectOptionType[SelectOptionType["BenhVienHienTaiVaCapCon"] = 47] = "BenhVienHienTaiVaCapCon";
        SelectOptionType[SelectOptionType["TienTe"] = 48] = "TienTe";
        SelectOptionType[SelectOptionType["BacSiToaThuocMau"] = 49] = "BacSiToaThuocMau";
        SelectOptionType[SelectOptionType["LoaiGia"] = 50] = "LoaiGia";
        SelectOptionType[SelectOptionType["NhomGia"] = 51] = "NhomGia";
        SelectOptionType[SelectOptionType["DuocToaThuocMau"] = 52] = "DuocToaThuocMau";
        SelectOptionType[SelectOptionType["ICD"] = 53] = "ICD";
        SelectOptionType[SelectOptionType["ICDMAVN"] = 54] = "ICDMAVN";
        SelectOptionType[SelectOptionType["ChuongICD"] = 55] = "ChuongICD";
        SelectOptionType[SelectOptionType["NhomICD"] = 56] = "NhomICD";
        SelectOptionType[SelectOptionType["NhomDichVu"] = 57] = "NhomDichVu";
        SelectOptionType[SelectOptionType["DichVu"] = 58] = "DichVu";
        SelectOptionType[SelectOptionType["DichVuDaCauHinhPhongBan"] = 59] = "DichVuDaCauHinhPhongBan";
        SelectOptionType[SelectOptionType["DichVuTiepDon"] = 60] = "DichVuTiepDon";
        SelectOptionType[SelectOptionType["NhomDichVuXetNghiem"] = 61] = "NhomDichVuXetNghiem";
        SelectOptionType[SelectOptionType["NhomDichVuCDHA"] = 62] = "NhomDichVuCDHA";
        SelectOptionType[SelectOptionType["NhanLuc"] = 63] = "NhanLuc";
        SelectOptionType[SelectOptionType["LoaiKhuyetTat"] = 64] = "LoaiKhuyetTat";
        SelectOptionType[SelectOptionType["BienPhapPhaThai"] = 65] = "BienPhapPhaThai";
        SelectOptionType[SelectOptionType["BenhNhan"] = 66] = "BenhNhan";
        SelectOptionType[SelectOptionType["KhoDuoc"] = 67] = "KhoDuoc";
        SelectOptionType[SelectOptionType["HoGiaDinh"] = 68] = "HoGiaDinh";
        SelectOptionType[SelectOptionType["BenhTruyenNhiem"] = 69] = "BenhTruyenNhiem";
        SelectOptionType[SelectOptionType["BenhTruyenNhiemBaoCaoThang"] = 70] = "BenhTruyenNhiemBaoCaoThang";
        SelectOptionType[SelectOptionType["AttpCoSoSXKDThucPham"] = 71] = "AttpCoSoSXKDThucPham";
        SelectOptionType[SelectOptionType["DoiTuongBaoHiemYTe"] = 72] = "DoiTuongBaoHiemYTe";
        SelectOptionType[SelectOptionType["NhaCungCap"] = 73] = "NhaCungCap";
        SelectOptionType[SelectOptionType["DichVuKyThuat"] = 74] = "DichVuKyThuat";
        SelectOptionType[SelectOptionType["DichVuTheoNhomDichVu"] = 75] = "DichVuTheoNhomDichVu";
        SelectOptionType[SelectOptionType["MaDichVuKyThuat"] = 76] = "MaDichVuKyThuat";
        SelectOptionType[SelectOptionType["ChungTuSoLoNhap"] = 77] = "ChungTuSoLoNhap";
        SelectOptionType[SelectOptionType["LoaiGiaByDoiTuong"] = 78] = "LoaiGiaByDoiTuong";
        SelectOptionType[SelectOptionType["ChungTuSoLoNhapView"] = 79] = "ChungTuSoLoNhapView";
        SelectOptionType[SelectOptionType["ThietBi"] = 80] = "ThietBi";
        SelectOptionType[SelectOptionType["MauKetQuaChanDoanHinhAnh"] = 81] = "MauKetQuaChanDoanHinhAnh";
        SelectOptionType[SelectOptionType["KhoaNoiTru"] = 82] = "KhoaNoiTru";
        SelectOptionType[SelectOptionType["KhangNguyen"] = 83] = "KhangNguyen";
        SelectOptionType[SelectOptionType["VacXin"] = 84] = "VacXin";
        SelectOptionType[SelectOptionType["PhongBenhTrucThuocKhoa"] = 85] = "PhongBenhTrucThuocKhoa";
        SelectOptionType[SelectOptionType["GiuongBenhTrongPhongBenh"] = 86] = "GiuongBenhTrongPhongBenh";
        SelectOptionType[SelectOptionType["BenhVienCon"] = 87] = "BenhVienCon";
        SelectOptionType[SelectOptionType["GoiCuoc"] = 88] = "GoiCuoc";
        SelectOptionType[SelectOptionType["GoiCuocCascader"] = 89] = "GoiCuocCascader";
        SelectOptionType[SelectOptionType["KhuVucLuuTru"] = 90] = "KhuVucLuuTru";
        SelectOptionType[SelectOptionType["NhomDoiTuong"] = 91] = "NhomDoiTuong";
        SelectOptionType[SelectOptionType["LoaiPhongBan"] = 92] = "LoaiPhongBan";
        SelectOptionType[SelectOptionType["NhomTSHeThong"] = 93] = "NhomTSHeThong";
        SelectOptionType[SelectOptionType["LoaiDichVu"] = 94] = "LoaiDichVu";
        SelectOptionType[SelectOptionType["DanToc"] = 95] = "DanToc";
        SelectOptionType[SelectOptionType["ChucVu"] = 96] = "ChucVu";
        SelectOptionType[SelectOptionType["ChucDanh"] = 97] = "ChucDanh";
        SelectOptionType[SelectOptionType["LoaiNhanLuc"] = 98] = "LoaiNhanLuc";
        SelectOptionType[SelectOptionType["TrinhDoChuyenMon"] = 99] = "TrinhDoChuyenMon";
        SelectOptionType[SelectOptionType["LoaiChuyenNganh"] = 100] = "LoaiChuyenNganh";
        SelectOptionType[SelectOptionType["QuocGia"] = 101] = "QuocGia";
        SelectOptionType[SelectOptionType["LoaiPhongBenh"] = 102] = "LoaiPhongBenh";
        SelectOptionType[SelectOptionType["GD_HINHTHUC"] = 103] = "GD_HINHTHUC";
        SelectOptionType[SelectOptionType["GD_PHUONGTIEN"] = 104] = "GD_PHUONGTIEN";
        SelectOptionType[SelectOptionType["LoaiBenhAnNgoaiTru"] = 105] = "LoaiBenhAnNgoaiTru";
        SelectOptionType[SelectOptionType["KhoaDieuTri"] = 106] = "KhoaDieuTri";
        SelectOptionType[SelectOptionType["DuocPhamNguonNhapHang"] = 107] = "DuocPhamNguonNhapHang";
        SelectOptionType[SelectOptionType["DuocPhamNguonNhapHangDuTruThuoc"] = 108] = "DuocPhamNguonNhapHangDuTruThuoc";
        SelectOptionType[SelectOptionType["PhongBenh"] = 109] = "PhongBenh";
        SelectOptionType[SelectOptionType["NoiCapCanCuoc"] = 110] = "NoiCapCanCuoc";
        SelectOptionType[SelectOptionType["DonViTaiSan"] = 111] = "DonViTaiSan";
        SelectOptionType[SelectOptionType["LoaiTaiSan"] = 112] = "LoaiTaiSan";
        SelectOptionType[SelectOptionType["TrangThaiTaiSan"] = 113] = "TrangThaiTaiSan";
        SelectOptionType[SelectOptionType["LyDoGiamTaiSan"] = 114] = "LyDoGiamTaiSan";
        SelectOptionType[SelectOptionType["DuongDung"] = 115] = "DuongDung";
        SelectOptionType[SelectOptionType["KieuHo"] = 116] = "KieuHo";
        SelectOptionType[SelectOptionType["XetNghiemLamQueThu"] = 117] = "XetNghiemLamQueThu";
        SelectOptionType[SelectOptionType["KetQuaDieuTri"] = 118] = "KetQuaDieuTri";
        SelectOptionType[SelectOptionType["PhamLoaiBenhNhan"] = 119] = "PhamLoaiBenhNhan";
        SelectOptionType[SelectOptionType["TonGiao"] = 120] = "TonGiao";
        SelectOptionType[SelectOptionType["NgheNghiep"] = 121] = "NgheNghiep";
        SelectOptionType[SelectOptionType["QuanHeChuHo"] = 122] = "QuanHeChuHo";
        SelectOptionType[SelectOptionType["QuanHeChuHoVaChuHo"] = 123] = "QuanHeChuHoVaChuHo";
        SelectOptionType[SelectOptionType["TinhTrangHonNhan"] = 124] = "TinhTrangHonNhan";
        SelectOptionType[SelectOptionType["TinhTrangLamViec"] = 125] = "TinhTrangLamViec";
        SelectOptionType[SelectOptionType["TrinhDoHocVan"] = 126] = "TrinhDoHocVan";
        SelectOptionType[SelectOptionType["BienPhapTranhThai"] = 127] = "BienPhapTranhThai";
        SelectOptionType[SelectOptionType["LoaiBenh"] = 128] = "LoaiBenh";
        SelectOptionType[SelectOptionType["LoaiKhoDuoc"] = 129] = "LoaiKhoDuoc";
        SelectOptionType[SelectOptionType["TinhTrangHienTai"] = 130] = "TinhTrangHienTai";
        SelectOptionType[SelectOptionType["LoaiNha"] = 131] = "LoaiNha";
        SelectOptionType[SelectOptionType["NguonNuoc"] = 132] = "NguonNuoc";
        SelectOptionType[SelectOptionType["LoaiNhaVeSinh"] = 133] = "LoaiNhaVeSinh";
        SelectOptionType[SelectOptionType["XuLyRac"] = 134] = "XuLyRac";
        SelectOptionType[SelectOptionType["LyDoPhieuThu"] = 135] = "LyDoPhieuThu";
        SelectOptionType[SelectOptionType["LyDoPhieuChi"] = 136] = "LyDoPhieuChi";
        SelectOptionType[SelectOptionType["DiaDiemAnUong"] = 137] = "DiaDiemAnUong";
        SelectOptionType[SelectOptionType["TrieuChung"] = 138] = "TrieuChung";
        SelectOptionType[SelectOptionType["LayMau"] = 139] = "LayMau";
        SelectOptionType[SelectOptionType["LoaiBienLai"] = 140] = "LoaiBienLai";
        SelectOptionType[SelectOptionType["HinhThucThanhToan"] = 141] = "HinhThucThanhToan";
    })(SelectOptionType || (SelectOptionType = {}));
    var SelectOptionInputDto = /** @class */ (function () {
        function SelectOptionInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SelectOptionInputDto.prototype.init = function (data) {
            if (data) {
                this.type = data['type'];
                this.cascader = data['cascader'];
                this.benhVienId = data['benhVienId'];
                this.cascaderId = data['cascaderId'];
                this.keyCache = data['keyCache'];
            }
        };
        SelectOptionInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SelectOptionInputDto();
            result.init(data);
            return result;
        };
        SelectOptionInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['type'] = this.type;
            data['cascader'] = this.cascader;
            data['benhVienId'] = this.benhVienId;
            data['cascaderId'] = this.cascaderId;
            data['keyCache'] = this.keyCache;
            return data;
        };
        return SelectOptionInputDto;
    }());
    var SelectSearchServerType;
    (function (SelectSearchServerType) {
        SelectSearchServerType[SelectSearchServerType["Huyen"] = 0] = "Huyen";
        SelectSearchServerType[SelectSearchServerType["Xa"] = 1] = "Xa";
    })(SelectSearchServerType || (SelectSearchServerType = {}));
    var SelectSearchServerDto = /** @class */ (function () {
        function SelectSearchServerDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SelectSearchServerDto.prototype.init = function (data) {
            if (data) {
                this.value = data['value'];
                this.valueId = data['valueId'];
                this.type = data['type'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        SelectSearchServerDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SelectSearchServerDto();
            result.init(data);
            return result;
        };
        SelectSearchServerDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['value'] = this.value;
            data['valueId'] = this.valueId;
            data['type'] = this.type;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return SelectSearchServerDto;
    }());
    var PagedRequestSoKhamDto = /** @class */ (function () {
        function PagedRequestSoKhamDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedRequestSoKhamDto.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedRequestSoKhamDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedRequestSoKhamDto();
            result.init(data);
            return result;
        };
        PagedRequestSoKhamDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedRequestSoKhamDto;
    }());
    var SoKhamDto = /** @class */ (function () {
        function SoKhamDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SoKhamDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.id = data['id'];
            }
        };
        SoKhamDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SoKhamDto();
            result.init(data);
            return result;
        };
        SoKhamDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['id'] = this.id;
            return data;
        };
        return SoKhamDto;
    }());
    var PagedResultDtoOfSoKhamDto = /** @class */ (function () {
        function PagedResultDtoOfSoKhamDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfSoKhamDto.prototype.init = function (data) {
            var e_528, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(SoKhamDto.fromJS(item));
                        }
                    }
                    catch (e_528_1) { e_528 = { error: e_528_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_528) throw e_528.error; }
                    }
                }
            }
        };
        PagedResultDtoOfSoKhamDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfSoKhamDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfSoKhamDto.prototype.toJSON = function (data) {
            var e_529, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_529_1) { e_529 = { error: e_529_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_529) throw e_529.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfSoKhamDto;
    }());
    var StaticRolePagedInputDto = /** @class */ (function () {
        function StaticRolePagedInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        StaticRolePagedInputDto.prototype.init = function (data) {
            if (data) {
                this.loaiBenhVien = data['loaiBenhVien'];
                this.isAdminTuyen = data['isAdminTuyen'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        StaticRolePagedInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new StaticRolePagedInputDto();
            result.init(data);
            return result;
        };
        StaticRolePagedInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiBenhVien'] = this.loaiBenhVien;
            data['isAdminTuyen'] = this.isAdminTuyen;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return StaticRolePagedInputDto;
    }());
    var StaticRolePagedOutputDto = /** @class */ (function () {
        function StaticRolePagedOutputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        StaticRolePagedOutputDto.prototype.init = function (data) {
            var e_530, _a, e_531, _b;
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.isAdminTuyen = data['isAdminTuyen'];
                this.listLoaiCoSo = data['listLoaiCoSo'];
                if (Array.isArray(data['loaiBenhVien'])) {
                    this.loaiBenhVien = [];
                    try {
                        for (var _c = __values(data['loaiBenhVien']), _d = _c.next(); !_d.done; _d = _c.next()) {
                            var item = _d.value;
                            this.loaiBenhVien.push(item);
                        }
                    }
                    catch (e_530_1) { e_530 = { error: e_530_1 }; }
                    finally {
                        try {
                            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                        }
                        finally { if (e_530) throw e_530.error; }
                    }
                }
                if (Array.isArray(data['listTenLoaiCoSo'])) {
                    this.listTenLoaiCoSo = [];
                    try {
                        for (var _e = __values(data['listTenLoaiCoSo']), _f = _e.next(); !_f.done; _f = _e.next()) {
                            var item = _f.value;
                            this.listTenLoaiCoSo.push(item);
                        }
                    }
                    catch (e_531_1) { e_531 = { error: e_531_1 }; }
                    finally {
                        try {
                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                        }
                        finally { if (e_531) throw e_531.error; }
                    }
                }
                this.id = data['id'];
            }
        };
        StaticRolePagedOutputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new StaticRolePagedOutputDto();
            result.init(data);
            return result;
        };
        StaticRolePagedOutputDto.prototype.toJSON = function (data) {
            var e_532, _a, e_533, _b;
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['isAdminTuyen'] = this.isAdminTuyen;
            data['listLoaiCoSo'] = this.listLoaiCoSo;
            if (Array.isArray(this.loaiBenhVien)) {
                data['loaiBenhVien'] = [];
                try {
                    for (var _c = __values(this.loaiBenhVien), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var item = _d.value;
                        data['loaiBenhVien'].push(item);
                    }
                }
                catch (e_532_1) { e_532 = { error: e_532_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_532) throw e_532.error; }
                }
            }
            if (Array.isArray(this.listTenLoaiCoSo)) {
                data['listTenLoaiCoSo'] = [];
                try {
                    for (var _e = __values(this.listTenLoaiCoSo), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var item = _f.value;
                        data['listTenLoaiCoSo'].push(item);
                    }
                }
                catch (e_533_1) { e_533 = { error: e_533_1 }; }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                    }
                    finally { if (e_533) throw e_533.error; }
                }
            }
            data['id'] = this.id;
            return data;
        };
        return StaticRolePagedOutputDto;
    }());
    var PagedResultDtoOfStaticRolePagedOutputDto = /** @class */ (function () {
        function PagedResultDtoOfStaticRolePagedOutputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfStaticRolePagedOutputDto.prototype.init = function (data) {
            var e_534, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(StaticRolePagedOutputDto.fromJS(item));
                        }
                    }
                    catch (e_534_1) { e_534 = { error: e_534_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_534) throw e_534.error; }
                    }
                }
            }
        };
        PagedResultDtoOfStaticRolePagedOutputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfStaticRolePagedOutputDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfStaticRolePagedOutputDto.prototype.toJSON = function (data) {
            var e_535, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_535_1) { e_535 = { error: e_535_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_535) throw e_535.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfStaticRolePagedOutputDto;
    }());
    var SysRoleDto = /** @class */ (function () {
        function SysRoleDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SysRoleDto.prototype.init = function (data) {
            var e_536, _a;
            if (data) {
                this.roleId = data['roleId'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.isAdminTuyen = data['isAdminTuyen'];
                this.isStatic = data['isStatic'];
                this.listLoaiCoSo = data['listLoaiCoSo'];
                if (Array.isArray(data['loaiBenhVien'])) {
                    this.loaiBenhVien = [];
                    try {
                        for (var _b = __values(data['loaiBenhVien']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.loaiBenhVien.push(item);
                        }
                    }
                    catch (e_536_1) { e_536 = { error: e_536_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_536) throw e_536.error; }
                    }
                }
                this.benhVienId = data['benhVienId'];
                this.id = data['id'];
            }
        };
        SysRoleDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SysRoleDto();
            result.init(data);
            return result;
        };
        SysRoleDto.prototype.toJSON = function (data) {
            var e_537, _a;
            data = typeof data === 'object' ? data : {};
            data['roleId'] = this.roleId;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['isAdminTuyen'] = this.isAdminTuyen;
            data['isStatic'] = this.isStatic;
            data['listLoaiCoSo'] = this.listLoaiCoSo;
            if (Array.isArray(this.loaiBenhVien)) {
                data['loaiBenhVien'] = [];
                try {
                    for (var _b = __values(this.loaiBenhVien), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['loaiBenhVien'].push(item);
                    }
                }
                catch (e_537_1) { e_537 = { error: e_537_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_537) throw e_537.error; }
                }
            }
            data['benhVienId'] = this.benhVienId;
            data['id'] = this.id;
            return data;
        };
        return SysRoleDto;
    }());
    var CommonResultDtoOfSysRoleDto = /** @class */ (function () {
        function CommonResultDtoOfSysRoleDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CommonResultDtoOfSysRoleDto.prototype.init = function (data) {
            if (data) {
                this.isSuccessful = data['isSuccessful'];
                this.errorCode = data['errorCode'];
                this.errorMessage = data['errorMessage'];
                this.dataResult = data['dataResult'] ? SysRoleDto.fromJS(data['dataResult']) : undefined;
            }
        };
        CommonResultDtoOfSysRoleDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CommonResultDtoOfSysRoleDto();
            result.init(data);
            return result;
        };
        CommonResultDtoOfSysRoleDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isSuccessful'] = this.isSuccessful;
            data['errorCode'] = this.errorCode;
            data['errorMessage'] = this.errorMessage;
            data['dataResult'] = this.dataResult ? this.dataResult.toJSON() : undefined;
            return data;
        };
        return CommonResultDtoOfSysRoleDto;
    }());
    var SetListPermissionAbleForAdminRoleRequest = /** @class */ (function () {
        function SetListPermissionAbleForAdminRoleRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SetListPermissionAbleForAdminRoleRequest.prototype.init = function (data) {
            var e_538, _a;
            if (data) {
                this.sysRoleId = data['sysRoleId'];
                if (Array.isArray(data['permissionNames'])) {
                    this.permissionNames = [];
                    try {
                        for (var _b = __values(data['permissionNames']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.permissionNames.push(item);
                        }
                    }
                    catch (e_538_1) { e_538 = { error: e_538_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_538) throw e_538.error; }
                    }
                }
            }
        };
        SetListPermissionAbleForAdminRoleRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SetListPermissionAbleForAdminRoleRequest();
            result.init(data);
            return result;
        };
        SetListPermissionAbleForAdminRoleRequest.prototype.toJSON = function (data) {
            var e_539, _a;
            data = typeof data === 'object' ? data : {};
            data['sysRoleId'] = this.sysRoleId;
            if (Array.isArray(this.permissionNames)) {
                data['permissionNames'] = [];
                try {
                    for (var _b = __values(this.permissionNames), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['permissionNames'].push(item);
                    }
                }
                catch (e_539_1) { e_539 = { error: e_539_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_539) throw e_539.error; }
                }
            }
            return data;
        };
        return SetListPermissionAbleForAdminRoleRequest;
    }());
    var SysPermissionAdminDto = /** @class */ (function () {
        function SysPermissionAdminDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SysPermissionAdminDto.prototype.init = function (data) {
            if (data) {
                this.sysRoleId = data['sysRoleId'];
                this.name = data['name'];
                this.id = data['id'];
            }
        };
        SysPermissionAdminDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SysPermissionAdminDto();
            result.init(data);
            return result;
        };
        SysPermissionAdminDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['sysRoleId'] = this.sysRoleId;
            data['name'] = this.name;
            data['id'] = this.id;
            return data;
        };
        return SysPermissionAdminDto;
    }());
    var SysPermissionLoaiBenhVienEntity = /** @class */ (function () {
        function SysPermissionLoaiBenhVienEntity(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SysPermissionLoaiBenhVienEntity.prototype.init = function (data) {
            if (data) {
                this.loaiBenhVien = data['loaiBenhVien'];
                this.name = data['name'];
                this.id = data['id'];
            }
        };
        SysPermissionLoaiBenhVienEntity.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SysPermissionLoaiBenhVienEntity();
            result.init(data);
            return result;
        };
        SysPermissionLoaiBenhVienEntity.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loaiBenhVien'] = this.loaiBenhVien;
            data['name'] = this.name;
            data['id'] = this.id;
            return data;
        };
        return SysPermissionLoaiBenhVienEntity;
    }());
    var SetPermissionLoaiBenhVienRequest = /** @class */ (function () {
        function SetPermissionLoaiBenhVienRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SetPermissionLoaiBenhVienRequest.prototype.init = function (data) {
            var e_540, _a;
            if (data) {
                this.loaiBenhVien = data['loaiBenhVien'];
                if (Array.isArray(data['permissionNames'])) {
                    this.permissionNames = [];
                    try {
                        for (var _b = __values(data['permissionNames']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.permissionNames.push(item);
                        }
                    }
                    catch (e_540_1) { e_540 = { error: e_540_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_540) throw e_540.error; }
                    }
                }
            }
        };
        SetPermissionLoaiBenhVienRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SetPermissionLoaiBenhVienRequest();
            result.init(data);
            return result;
        };
        SetPermissionLoaiBenhVienRequest.prototype.toJSON = function (data) {
            var e_541, _a;
            data = typeof data === 'object' ? data : {};
            data['loaiBenhVien'] = this.loaiBenhVien;
            if (Array.isArray(this.permissionNames)) {
                data['permissionNames'] = [];
                try {
                    for (var _b = __values(this.permissionNames), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['permissionNames'].push(item);
                    }
                }
                catch (e_541_1) { e_541 = { error: e_541_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_541) throw e_541.error; }
                }
            }
            return data;
        };
        return SetPermissionLoaiBenhVienRequest;
    }());
    var SetPermissionForSysRoleRequest = /** @class */ (function () {
        function SetPermissionForSysRoleRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SetPermissionForSysRoleRequest.prototype.init = function (data) {
            var e_542, _a;
            if (data) {
                this.sysRoleId = data['sysRoleId'];
                if (Array.isArray(data['permissionNames'])) {
                    this.permissionNames = [];
                    try {
                        for (var _b = __values(data['permissionNames']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.permissionNames.push(item);
                        }
                    }
                    catch (e_542_1) { e_542 = { error: e_542_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_542) throw e_542.error; }
                    }
                }
            }
        };
        SetPermissionForSysRoleRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SetPermissionForSysRoleRequest();
            result.init(data);
            return result;
        };
        SetPermissionForSysRoleRequest.prototype.toJSON = function (data) {
            var e_543, _a;
            data = typeof data === 'object' ? data : {};
            data['sysRoleId'] = this.sysRoleId;
            if (Array.isArray(this.permissionNames)) {
                data['permissionNames'] = [];
                try {
                    for (var _b = __values(this.permissionNames), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['permissionNames'].push(item);
                    }
                }
                catch (e_543_1) { e_543 = { error: e_543_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_543) throw e_543.error; }
                }
            }
            return data;
        };
        return SetPermissionForSysRoleRequest;
    }());
    var SysRolePermissionDto = /** @class */ (function () {
        function SysRolePermissionDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SysRolePermissionDto.prototype.init = function (data) {
            var e_544, _a;
            if (data) {
                this.sysRoleId = data['sysRoleId'];
                if (Array.isArray(data['permissionNames'])) {
                    this.permissionNames = [];
                    try {
                        for (var _b = __values(data['permissionNames']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.permissionNames.push(item);
                        }
                    }
                    catch (e_544_1) { e_544 = { error: e_544_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_544) throw e_544.error; }
                    }
                }
            }
        };
        SysRolePermissionDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SysRolePermissionDto();
            result.init(data);
            return result;
        };
        SysRolePermissionDto.prototype.toJSON = function (data) {
            var e_545, _a;
            data = typeof data === 'object' ? data : {};
            data['sysRoleId'] = this.sysRoleId;
            if (Array.isArray(this.permissionNames)) {
                data['permissionNames'] = [];
                try {
                    for (var _b = __values(this.permissionNames), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['permissionNames'].push(item);
                    }
                }
                catch (e_545_1) { e_545 = { error: e_545_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_545) throw e_545.error; }
                }
            }
            return data;
        };
        return SysRolePermissionDto;
    }());
    var RoleCoSoPagedInputDto = /** @class */ (function () {
        function RoleCoSoPagedInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        RoleCoSoPagedInputDto.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        RoleCoSoPagedInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new RoleCoSoPagedInputDto();
            result.init(data);
            return result;
        };
        RoleCoSoPagedInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return RoleCoSoPagedInputDto;
    }());
    var PagedResultDtoOfSysRoleDto = /** @class */ (function () {
        function PagedResultDtoOfSysRoleDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfSysRoleDto.prototype.init = function (data) {
            var e_546, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(SysRoleDto.fromJS(item));
                        }
                    }
                    catch (e_546_1) { e_546 = { error: e_546_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_546) throw e_546.error; }
                    }
                }
            }
        };
        PagedResultDtoOfSysRoleDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfSysRoleDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfSysRoleDto.prototype.toJSON = function (data) {
            var e_547, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_547_1) { e_547 = { error: e_547_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_547) throw e_547.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfSysRoleDto;
    }());
    var CommonResultDtoOfInt64 = /** @class */ (function () {
        function CommonResultDtoOfInt64(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CommonResultDtoOfInt64.prototype.init = function (data) {
            if (data) {
                this.isSuccessful = data['isSuccessful'];
                this.errorCode = data['errorCode'];
                this.errorMessage = data['errorMessage'];
                this.dataResult = data['dataResult'];
            }
        };
        CommonResultDtoOfInt64.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CommonResultDtoOfInt64();
            result.init(data);
            return result;
        };
        CommonResultDtoOfInt64.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isSuccessful'] = this.isSuccessful;
            data['errorCode'] = this.errorCode;
            data['errorMessage'] = this.errorMessage;
            data['dataResult'] = this.dataResult;
            return data;
        };
        return CommonResultDtoOfInt64;
    }());
    var GetListUserAdminCoSoRequest = /** @class */ (function () {
        function GetListUserAdminCoSoRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GetListUserAdminCoSoRequest.prototype.init = function (data) {
            if (data) {
                this.tinhId = data['tinhId'];
                this.huyenId = data['huyenId'];
                this.xaId = data['xaId'];
                this.benhVienId = data['benhVienId'];
                this.id = data['id'];
                this.sysRoleId = data['sysRoleId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        GetListUserAdminCoSoRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GetListUserAdminCoSoRequest();
            result.init(data);
            return result;
        };
        GetListUserAdminCoSoRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['tinhId'] = this.tinhId;
            data['huyenId'] = this.huyenId;
            data['xaId'] = this.xaId;
            data['benhVienId'] = this.benhVienId;
            data['id'] = this.id;
            data['sysRoleId'] = this.sysRoleId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return GetListUserAdminCoSoRequest;
    }());
    var SysUserDto = /** @class */ (function () {
        function SysUserDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SysUserDto.prototype.init = function (data) {
            if (data) {
                this.userId = data['userId'];
                this.userName = data['userName'];
                this.ma = data['ma'];
                this.hoTen = data['hoTen'];
                this.hoTenKhongDau = data['hoTenKhongDau'];
                this.email = data['email'];
                this.soDienThoai = data['soDienThoai'];
                this.nhanLucId = data['nhanLucId'];
                this.benhVienId = data['benhVienId'];
                this.phongBanId = data['phongBanId'];
                this.listRoleName = data['listRoleName'];
                this.tenBenhVien = data['tenBenhVien'];
                this.sysRoleAdminId = data['sysRoleAdminId'];
                this.tenQuyen = data['tenQuyen'];
                this.isCreator = data['isCreator'];
                this.isLock = data['isLock'];
                this.tinhId = data['tinhId'];
                this.huyenId = data['huyenId'];
                this.id = data['id'];
            }
        };
        SysUserDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SysUserDto();
            result.init(data);
            return result;
        };
        SysUserDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['userId'] = this.userId;
            data['userName'] = this.userName;
            data['ma'] = this.ma;
            data['hoTen'] = this.hoTen;
            data['hoTenKhongDau'] = this.hoTenKhongDau;
            data['email'] = this.email;
            data['soDienThoai'] = this.soDienThoai;
            data['nhanLucId'] = this.nhanLucId;
            data['benhVienId'] = this.benhVienId;
            data['phongBanId'] = this.phongBanId;
            data['listRoleName'] = this.listRoleName;
            data['tenBenhVien'] = this.tenBenhVien;
            data['sysRoleAdminId'] = this.sysRoleAdminId;
            data['tenQuyen'] = this.tenQuyen;
            data['isCreator'] = this.isCreator;
            data['isLock'] = this.isLock;
            data['tinhId'] = this.tinhId;
            data['huyenId'] = this.huyenId;
            data['id'] = this.id;
            return data;
        };
        return SysUserDto;
    }());
    var PagedResultDtoOfSysUserDto = /** @class */ (function () {
        function PagedResultDtoOfSysUserDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfSysUserDto.prototype.init = function (data) {
            var e_548, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(SysUserDto.fromJS(item));
                        }
                    }
                    catch (e_548_1) { e_548 = { error: e_548_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_548) throw e_548.error; }
                    }
                }
            }
        };
        PagedResultDtoOfSysUserDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfSysUserDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfSysUserDto.prototype.toJSON = function (data) {
            var e_549, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_549_1) { e_549 = { error: e_549_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_549) throw e_549.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfSysUserDto;
    }());
    var CreateSysUserDto = /** @class */ (function () {
        function CreateSysUserDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CreateSysUserDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.hoTen = data['hoTen'];
                this.nhanLucId = data['nhanLucId'];
                this.email = data['email'];
                this.soDienThoai = data['soDienThoai'];
                this.matKhau = data['matKhau'];
                this.benhVienId = data['benhVienId'];
            }
        };
        CreateSysUserDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CreateSysUserDto();
            result.init(data);
            return result;
        };
        CreateSysUserDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['hoTen'] = this.hoTen;
            data['nhanLucId'] = this.nhanLucId;
            data['email'] = this.email;
            data['soDienThoai'] = this.soDienThoai;
            data['matKhau'] = this.matKhau;
            data['benhVienId'] = this.benhVienId;
            return data;
        };
        return CreateSysUserDto;
    }());
    var TaoTaiKhoanAdminCoSoInputDto = /** @class */ (function () {
        function TaoTaiKhoanAdminCoSoInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        TaoTaiKhoanAdminCoSoInputDto.prototype.init = function (data) {
            if (data) {
                this.benhVienId = data['benhVienId'];
                this.sysRoleId = data['sysRoleId'];
                this.userDto = data['userDto'] ? CreateSysUserDto.fromJS(data['userDto']) : undefined;
            }
        };
        TaoTaiKhoanAdminCoSoInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new TaoTaiKhoanAdminCoSoInputDto();
            result.init(data);
            return result;
        };
        TaoTaiKhoanAdminCoSoInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['benhVienId'] = this.benhVienId;
            data['sysRoleId'] = this.sysRoleId;
            data['userDto'] = this.userDto ? this.userDto.toJSON() : undefined;
            return data;
        };
        return TaoTaiKhoanAdminCoSoInputDto;
    }());
    var CommonResultDtoOfSysUserDto = /** @class */ (function () {
        function CommonResultDtoOfSysUserDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CommonResultDtoOfSysUserDto.prototype.init = function (data) {
            if (data) {
                this.isSuccessful = data['isSuccessful'];
                this.errorCode = data['errorCode'];
                this.errorMessage = data['errorMessage'];
                this.dataResult = data['dataResult'] ? SysUserDto.fromJS(data['dataResult']) : undefined;
            }
        };
        CommonResultDtoOfSysUserDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CommonResultDtoOfSysUserDto();
            result.init(data);
            return result;
        };
        CommonResultDtoOfSysUserDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isSuccessful'] = this.isSuccessful;
            data['errorCode'] = this.errorCode;
            data['errorMessage'] = this.errorMessage;
            data['dataResult'] = this.dataResult ? this.dataResult.toJSON() : undefined;
            return data;
        };
        return CommonResultDtoOfSysUserDto;
    }());
    var UpdateUserDto = /** @class */ (function () {
        function UpdateUserDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        UpdateUserDto.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.hoTen = data['hoTen'];
                this.nhanLucId = data['nhanLucId'];
                this.email = data['email'];
                this.soDienThoai = data['soDienThoai'];
            }
        };
        UpdateUserDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new UpdateUserDto();
            result.init(data);
            return result;
        };
        UpdateUserDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['hoTen'] = this.hoTen;
            data['nhanLucId'] = this.nhanLucId;
            data['email'] = this.email;
            data['soDienThoai'] = this.soDienThoai;
            return data;
        };
        return UpdateUserDto;
    }());
    var DoiMatKhauRequest = /** @class */ (function () {
        function DoiMatKhauRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DoiMatKhauRequest.prototype.init = function (data) {
            if (data) {
                this.userExtensionId = data['userExtensionId'];
                this.matKhauMoi = data['matKhauMoi'];
            }
        };
        DoiMatKhauRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DoiMatKhauRequest();
            result.init(data);
            return result;
        };
        DoiMatKhauRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['userExtensionId'] = this.userExtensionId;
            data['matKhauMoi'] = this.matKhauMoi;
            return data;
        };
        return DoiMatKhauRequest;
    }());
    var CommonResultDtoOfGuid = /** @class */ (function () {
        function CommonResultDtoOfGuid(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CommonResultDtoOfGuid.prototype.init = function (data) {
            if (data) {
                this.isSuccessful = data['isSuccessful'];
                this.errorCode = data['errorCode'];
                this.errorMessage = data['errorMessage'];
                this.dataResult = data['dataResult'];
            }
        };
        CommonResultDtoOfGuid.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CommonResultDtoOfGuid();
            result.init(data);
            return result;
        };
        CommonResultDtoOfGuid.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['isSuccessful'] = this.isSuccessful;
            data['errorCode'] = this.errorCode;
            data['errorMessage'] = this.errorMessage;
            data['dataResult'] = this.dataResult;
            return data;
        };
        return CommonResultDtoOfGuid;
    }());
    var GetListUserCoSoRequest = /** @class */ (function () {
        function GetListUserCoSoRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        GetListUserCoSoRequest.prototype.init = function (data) {
            if (data) {
                this.sysRoleId = data['sysRoleId'];
                this.id = data['id'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        GetListUserCoSoRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new GetListUserCoSoRequest();
            result.init(data);
            return result;
        };
        GetListUserCoSoRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['sysRoleId'] = this.sysRoleId;
            data['id'] = this.id;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return GetListUserCoSoRequest;
    }());
    var RoleAbleDto = /** @class */ (function () {
        function RoleAbleDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        RoleAbleDto.prototype.init = function (data) {
            if (data) {
                this.sysRoleId = data['sysRoleId'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.isCheck = data['isCheck'];
                this.isStatic = data['isStatic'];
                this.isAdminTuyen = data['isAdminTuyen'];
            }
        };
        RoleAbleDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new RoleAbleDto();
            result.init(data);
            return result;
        };
        RoleAbleDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['sysRoleId'] = this.sysRoleId;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['isCheck'] = this.isCheck;
            data['isStatic'] = this.isStatic;
            data['isAdminTuyen'] = this.isAdminTuyen;
            return data;
        };
        return RoleAbleDto;
    }());
    var SetRoleForUserRequest = /** @class */ (function () {
        function SetRoleForUserRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SetRoleForUserRequest.prototype.init = function (data) {
            var e_550, _a;
            if (data) {
                this.userExtensionId = data['userExtensionId'];
                if (Array.isArray(data['listSysRoleId'])) {
                    this.listSysRoleId = [];
                    try {
                        for (var _b = __values(data['listSysRoleId']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.listSysRoleId.push(item);
                        }
                    }
                    catch (e_550_1) { e_550 = { error: e_550_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_550) throw e_550.error; }
                    }
                }
            }
        };
        SetRoleForUserRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SetRoleForUserRequest();
            result.init(data);
            return result;
        };
        SetRoleForUserRequest.prototype.toJSON = function (data) {
            var e_551, _a;
            data = typeof data === 'object' ? data : {};
            data['userExtensionId'] = this.userExtensionId;
            if (Array.isArray(this.listSysRoleId)) {
                data['listSysRoleId'] = [];
                try {
                    for (var _b = __values(this.listSysRoleId), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['listSysRoleId'].push(item);
                    }
                }
                catch (e_551_1) { e_551 = { error: e_551_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_551) throw e_551.error; }
                }
            }
            return data;
        };
        return SetRoleForUserRequest;
    }());
    var SysUserRoleEntity = /** @class */ (function () {
        function SysUserRoleEntity(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SysUserRoleEntity.prototype.init = function (data) {
            if (data) {
                this.sysRoleId = data['sysRoleId'];
                this.userExtensionId = data['userExtensionId'];
                this.id = data['id'];
            }
        };
        SysUserRoleEntity.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SysUserRoleEntity();
            result.init(data);
            return result;
        };
        SysUserRoleEntity.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['sysRoleId'] = this.sysRoleId;
            data['userExtensionId'] = this.userExtensionId;
            data['id'] = this.id;
            return data;
        };
        return SysUserRoleEntity;
    }());
    var CauHinhSysAppPrivateRoleItemDto = /** @class */ (function () {
        function CauHinhSysAppPrivateRoleItemDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        CauHinhSysAppPrivateRoleItemDto.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.isCheck = data['isCheck'];
            }
        };
        CauHinhSysAppPrivateRoleItemDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new CauHinhSysAppPrivateRoleItemDto();
            result.init(data);
            return result;
        };
        CauHinhSysAppPrivateRoleItemDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['isCheck'] = this.isCheck;
            return data;
        };
        return CauHinhSysAppPrivateRoleItemDto;
    }());
    var DanhSachCauHinhSysAppPrivateRoleDto = /** @class */ (function () {
        function DanhSachCauHinhSysAppPrivateRoleDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DanhSachCauHinhSysAppPrivateRoleDto.prototype.init = function (data) {
            var e_552, _a, e_553, _b, e_554, _c;
            if (data) {
                if (Array.isArray(data['listOfPhongBan'])) {
                    this.listOfPhongBan = [];
                    try {
                        for (var _d = __values(data['listOfPhongBan']), _e = _d.next(); !_e.done; _e = _d.next()) {
                            var item = _e.value;
                            this.listOfPhongBan.push(CauHinhSysAppPrivateRoleItemDto.fromJS(item));
                        }
                    }
                    catch (e_552_1) { e_552 = { error: e_552_1 }; }
                    finally {
                        try {
                            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                        }
                        finally { if (e_552) throw e_552.error; }
                    }
                }
                if (Array.isArray(data['listOfKhoDuoc'])) {
                    this.listOfKhoDuoc = [];
                    try {
                        for (var _f = __values(data['listOfKhoDuoc']), _g = _f.next(); !_g.done; _g = _f.next()) {
                            var item = _g.value;
                            this.listOfKhoDuoc.push(CauHinhSysAppPrivateRoleItemDto.fromJS(item));
                        }
                    }
                    catch (e_553_1) { e_553 = { error: e_553_1 }; }
                    finally {
                        try {
                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                        }
                        finally { if (e_553) throw e_553.error; }
                    }
                }
                if (Array.isArray(data['listOfCanLamSang'])) {
                    this.listOfCanLamSang = [];
                    try {
                        for (var _h = __values(data['listOfCanLamSang']), _j = _h.next(); !_j.done; _j = _h.next()) {
                            var item = _j.value;
                            this.listOfCanLamSang.push(CauHinhSysAppPrivateRoleItemDto.fromJS(item));
                        }
                    }
                    catch (e_554_1) { e_554 = { error: e_554_1 }; }
                    finally {
                        try {
                            if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                        }
                        finally { if (e_554) throw e_554.error; }
                    }
                }
            }
        };
        DanhSachCauHinhSysAppPrivateRoleDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DanhSachCauHinhSysAppPrivateRoleDto();
            result.init(data);
            return result;
        };
        DanhSachCauHinhSysAppPrivateRoleDto.prototype.toJSON = function (data) {
            var e_555, _a, e_556, _b, e_557, _c;
            data = typeof data === 'object' ? data : {};
            if (Array.isArray(this.listOfPhongBan)) {
                data['listOfPhongBan'] = [];
                try {
                    for (var _d = __values(this.listOfPhongBan), _e = _d.next(); !_e.done; _e = _d.next()) {
                        var item = _e.value;
                        data['listOfPhongBan'].push(item.toJSON());
                    }
                }
                catch (e_555_1) { e_555 = { error: e_555_1 }; }
                finally {
                    try {
                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
                    }
                    finally { if (e_555) throw e_555.error; }
                }
            }
            if (Array.isArray(this.listOfKhoDuoc)) {
                data['listOfKhoDuoc'] = [];
                try {
                    for (var _f = __values(this.listOfKhoDuoc), _g = _f.next(); !_g.done; _g = _f.next()) {
                        var item = _g.value;
                        data['listOfKhoDuoc'].push(item.toJSON());
                    }
                }
                catch (e_556_1) { e_556 = { error: e_556_1 }; }
                finally {
                    try {
                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                    }
                    finally { if (e_556) throw e_556.error; }
                }
            }
            if (Array.isArray(this.listOfCanLamSang)) {
                data['listOfCanLamSang'] = [];
                try {
                    for (var _h = __values(this.listOfCanLamSang), _j = _h.next(); !_j.done; _j = _h.next()) {
                        var item = _j.value;
                        data['listOfCanLamSang'].push(item.toJSON());
                    }
                }
                catch (e_557_1) { e_557 = { error: e_557_1 }; }
                finally {
                    try {
                        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                    }
                    finally { if (e_557) throw e_557.error; }
                }
            }
            return data;
        };
        return DanhSachCauHinhSysAppPrivateRoleDto;
    }());
    var SysAppPrivateRoleDto = /** @class */ (function () {
        function SysAppPrivateRoleDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SysAppPrivateRoleDto.prototype.init = function (data) {
            if (data) {
                this.groupCode = data['groupCode'];
                this.code = data['code'];
                this.userId = data['userId'];
                this.userV1Id = data['userV1Id'];
                this.benhVienId = data['benhVienId'];
                this.valueId = data['valueId'];
                this.valueCode = data['valueCode'];
                this.valueName = data['valueName'];
                this.id = data['id'];
            }
        };
        SysAppPrivateRoleDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SysAppPrivateRoleDto();
            result.init(data);
            return result;
        };
        SysAppPrivateRoleDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['groupCode'] = this.groupCode;
            data['code'] = this.code;
            data['userId'] = this.userId;
            data['userV1Id'] = this.userV1Id;
            data['benhVienId'] = this.benhVienId;
            data['valueId'] = this.valueId;
            data['valueCode'] = this.valueCode;
            data['valueName'] = this.valueName;
            data['id'] = this.id;
            return data;
        };
        return SysAppPrivateRoleDto;
    }());
    var LuuSysAppPrivateRoleUserRequset = /** @class */ (function () {
        function LuuSysAppPrivateRoleUserRequset(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        LuuSysAppPrivateRoleUserRequset.prototype.init = function (data) {
            var e_558, _a;
            if (data) {
                this.userExtensionId = data['userExtensionId'];
                this.code = data['code'];
                if (Array.isArray(data['dtos'])) {
                    this.dtos = [];
                    try {
                        for (var _b = __values(data['dtos']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.dtos.push(SysAppPrivateRoleDto.fromJS(item));
                        }
                    }
                    catch (e_558_1) { e_558 = { error: e_558_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_558) throw e_558.error; }
                    }
                }
            }
        };
        LuuSysAppPrivateRoleUserRequset.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new LuuSysAppPrivateRoleUserRequset();
            result.init(data);
            return result;
        };
        LuuSysAppPrivateRoleUserRequset.prototype.toJSON = function (data) {
            var e_559, _a;
            data = typeof data === 'object' ? data : {};
            data['userExtensionId'] = this.userExtensionId;
            data['code'] = this.code;
            if (Array.isArray(this.dtos)) {
                data['dtos'] = [];
                try {
                    for (var _b = __values(this.dtos), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['dtos'].push(item.toJSON());
                    }
                }
                catch (e_559_1) { e_559 = { error: e_559_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_559) throw e_559.error; }
                }
            }
            return data;
        };
        return LuuSysAppPrivateRoleUserRequset;
    }());
    var ParamUpdateValueThamSoBenhVien = /** @class */ (function () {
        function ParamUpdateValueThamSoBenhVien(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ParamUpdateValueThamSoBenhVien.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.value = data['value'];
            }
        };
        ParamUpdateValueThamSoBenhVien.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ParamUpdateValueThamSoBenhVien();
            result.init(data);
            return result;
        };
        ParamUpdateValueThamSoBenhVien.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['value'] = this.value;
            return data;
        };
        return ParamUpdateValueThamSoBenhVien;
    }());
    var ParamsUpdateChangedThamSoBenhVien = /** @class */ (function () {
        function ParamsUpdateChangedThamSoBenhVien(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ParamsUpdateChangedThamSoBenhVien.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.value = data['value'];
                this.dataFieldChanged = data['dataFieldChanged'];
            }
        };
        ParamsUpdateChangedThamSoBenhVien.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ParamsUpdateChangedThamSoBenhVien();
            result.init(data);
            return result;
        };
        ParamsUpdateChangedThamSoBenhVien.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['value'] = this.value;
            data['dataFieldChanged'] = this.dataFieldChanged;
            return data;
        };
        return ParamsUpdateChangedThamSoBenhVien;
    }());
    var ThamSoBenhVienPagedRequestDto = /** @class */ (function () {
        function ThamSoBenhVienPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ThamSoBenhVienPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.groupCodeId = data['groupCodeId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        ThamSoBenhVienPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ThamSoBenhVienPagedRequestDto();
            result.init(data);
            return result;
        };
        ThamSoBenhVienPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['groupCodeId'] = this.groupCodeId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return ThamSoBenhVienPagedRequestDto;
    }());
    var SysAppSettingsDto = /** @class */ (function () {
        function SysAppSettingsDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        SysAppSettingsDto.prototype.init = function (data) {
            if (data) {
                this.code = data['code'];
                this.value = data['value'];
                this.description = data['description'];
                this.locked = data['locked'];
                this.systemEditonOnly = data['systemEditonOnly'];
                this.groupCode = data['groupCode'];
                this.dataType = data['dataType'];
                this.language = data['language'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.tenNhom = data['tenNhom'];
                this.groupCodeId = data['groupCodeId'];
                this.tuyenBenhVien = data['tuyenBenhVien'];
                this.id = data['id'];
            }
        };
        SysAppSettingsDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new SysAppSettingsDto();
            result.init(data);
            return result;
        };
        SysAppSettingsDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['code'] = this.code;
            data['value'] = this.value;
            data['description'] = this.description;
            data['locked'] = this.locked;
            data['systemEditonOnly'] = this.systemEditonOnly;
            data['groupCode'] = this.groupCode;
            data['dataType'] = this.dataType;
            data['language'] = this.language;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['tenNhom'] = this.tenNhom;
            data['groupCodeId'] = this.groupCodeId;
            data['tuyenBenhVien'] = this.tuyenBenhVien;
            data['id'] = this.id;
            return data;
        };
        return SysAppSettingsDto;
    }());
    var PagedResultDtoOfSysAppSettingsDto = /** @class */ (function () {
        function PagedResultDtoOfSysAppSettingsDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfSysAppSettingsDto.prototype.init = function (data) {
            var e_560, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(SysAppSettingsDto.fromJS(item));
                        }
                    }
                    catch (e_560_1) { e_560 = { error: e_560_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_560) throw e_560.error; }
                    }
                }
            }
        };
        PagedResultDtoOfSysAppSettingsDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfSysAppSettingsDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfSysAppSettingsDto.prototype.toJSON = function (data) {
            var e_561, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_561_1) { e_561 = { error: e_561_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_561) throw e_561.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfSysAppSettingsDto;
    }());
    var ThamSoHeThongPagedRequest = /** @class */ (function () {
        function ThamSoHeThongPagedRequest(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ThamSoHeThongPagedRequest.prototype.init = function (data) {
            if (data) {
                this.nhomThamSoId = data['nhomThamSoId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        ThamSoHeThongPagedRequest.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ThamSoHeThongPagedRequest();
            result.init(data);
            return result;
        };
        ThamSoHeThongPagedRequest.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['nhomThamSoId'] = this.nhomThamSoId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return ThamSoHeThongPagedRequest;
    }());
    var ThamSoHeThongDto = /** @class */ (function () {
        function ThamSoHeThongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ThamSoHeThongDto.prototype.init = function (data) {
            if (data) {
                this.code = data['code'];
                this.value = data['value'];
                this.description = data['description'];
                this.locked = data['locked'];
                this.systemEditonOnly = data['systemEditonOnly'];
                this.groupCode = data['groupCode'];
                this.dataType = data['dataType'];
                this.language = data['language'];
                this.isActive = data['isActive'];
                this.nhomThamSoId = data['nhomThamSoId'];
                this.nhomThamSo = data['nhomThamSo'];
                this.id = data['id'];
            }
        };
        ThamSoHeThongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ThamSoHeThongDto();
            result.init(data);
            return result;
        };
        ThamSoHeThongDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['code'] = this.code;
            data['value'] = this.value;
            data['description'] = this.description;
            data['locked'] = this.locked;
            data['systemEditonOnly'] = this.systemEditonOnly;
            data['groupCode'] = this.groupCode;
            data['dataType'] = this.dataType;
            data['language'] = this.language;
            data['isActive'] = this.isActive;
            data['nhomThamSoId'] = this.nhomThamSoId;
            data['nhomThamSo'] = this.nhomThamSo;
            data['id'] = this.id;
            return data;
        };
        return ThamSoHeThongDto;
    }());
    var PagedResultDtoOfThamSoHeThongDto = /** @class */ (function () {
        function PagedResultDtoOfThamSoHeThongDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfThamSoHeThongDto.prototype.init = function (data) {
            var e_562, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(ThamSoHeThongDto.fromJS(item));
                        }
                    }
                    catch (e_562_1) { e_562 = { error: e_562_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_562) throw e_562.error; }
                    }
                }
            }
        };
        PagedResultDtoOfThamSoHeThongDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfThamSoHeThongDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfThamSoHeThongDto.prototype.toJSON = function (data) {
            var e_563, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_563_1) { e_563 = { error: e_563_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_563) throw e_563.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfThamSoHeThongDto;
    }());
    var PagedRequestThietBiDto = /** @class */ (function () {
        function PagedRequestThietBiDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedRequestThietBiDto.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedRequestThietBiDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedRequestThietBiDto();
            result.init(data);
            return result;
        };
        PagedRequestThietBiDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedRequestThietBiDto;
    }());
    var ThietBiDto = /** @class */ (function () {
        function ThietBiDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ThietBiDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenKhongDau = data['tenKhongDau'];
                this.nhomThietBiId = data['nhomThietBiId'];
                this.phongBanId = data['phongBanId'];
                this.isActive = data['isActive'];
                this.benhVienId = data['benhVienId'];
                this.tenPhongBan = data['tenPhongBan'];
                this.id = data['id'];
            }
        };
        ThietBiDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ThietBiDto();
            result.init(data);
            return result;
        };
        ThietBiDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenKhongDau'] = this.tenKhongDau;
            data['nhomThietBiId'] = this.nhomThietBiId;
            data['phongBanId'] = this.phongBanId;
            data['isActive'] = this.isActive;
            data['benhVienId'] = this.benhVienId;
            data['tenPhongBan'] = this.tenPhongBan;
            data['id'] = this.id;
            return data;
        };
        return ThietBiDto;
    }());
    var PagedResultDtoOfThietBiDto = /** @class */ (function () {
        function PagedResultDtoOfThietBiDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfThietBiDto.prototype.init = function (data) {
            var e_564, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(ThietBiDto.fromJS(item));
                        }
                    }
                    catch (e_564_1) { e_564 = { error: e_564_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_564) throw e_564.error; }
                    }
                }
            }
        };
        PagedResultDtoOfThietBiDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfThietBiDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfThietBiDto.prototype.toJSON = function (data) {
            var e_565, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_565_1) { e_565 = { error: e_565_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_565) throw e_565.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfThietBiDto;
    }());
    var TienTeDto = /** @class */ (function () {
        function TienTeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        TienTeDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tenEn = data['tenEn'];
                this.isActive = data['isActive'];
                this.isExists = data['isExists'];
                this.id = data['id'];
            }
        };
        TienTeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new TienTeDto();
            result.init(data);
            return result;
        };
        TienTeDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tenEn'] = this.tenEn;
            data['isActive'] = this.isActive;
            data['isExists'] = this.isExists;
            data['id'] = this.id;
            return data;
        };
        return TienTeDto;
    }());
    var TienTePagedRequestDto = /** @class */ (function () {
        function TienTePagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        TienTePagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        TienTePagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new TienTePagedRequestDto();
            result.init(data);
            return result;
        };
        TienTePagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return TienTePagedRequestDto;
    }());
    var PagedResultDtoOfTienTeDto = /** @class */ (function () {
        function PagedResultDtoOfTienTeDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfTienTeDto.prototype.init = function (data) {
            var e_566, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(TienTeDto.fromJS(item));
                        }
                    }
                    catch (e_566_1) { e_566 = { error: e_566_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_566) throw e_566.error; }
                    }
                }
            }
        };
        PagedResultDtoOfTienTeDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfTienTeDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfTienTeDto.prototype.toJSON = function (data) {
            var e_567, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_567_1) { e_567 = { error: e_567_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_567) throw e_567.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfTienTeDto;
    }());
    var TienTeTyGiaPagedRequestDto = /** @class */ (function () {
        function TienTeTyGiaPagedRequestDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        TienTeTyGiaPagedRequestDto.prototype.init = function (data) {
            if (data) {
                this.tienTeId = data['tienTeId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        TienTeTyGiaPagedRequestDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new TienTeTyGiaPagedRequestDto();
            result.init(data);
            return result;
        };
        TienTeTyGiaPagedRequestDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['tienTeId'] = this.tienTeId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return TienTeTyGiaPagedRequestDto;
    }());
    var TienTeTyGiaDto = /** @class */ (function () {
        function TienTeTyGiaDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        TienTeTyGiaDto.prototype.init = function (data) {
            if (data) {
                this.tienTeId = data['tienTeId'];
                this.tyGiaVND = data['tyGiaVND'];
                this.tyGiaUSD = data['tyGiaUSD'];
                this.benhVienId = data['benhVienId'];
                this.isActive = data['isActive'];
                this.tenTienTe = data['tenTienTe'];
                this.id = data['id'];
            }
        };
        TienTeTyGiaDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new TienTeTyGiaDto();
            result.init(data);
            return result;
        };
        TienTeTyGiaDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['tienTeId'] = this.tienTeId;
            data['tyGiaVND'] = this.tyGiaVND;
            data['tyGiaUSD'] = this.tyGiaUSD;
            data['benhVienId'] = this.benhVienId;
            data['isActive'] = this.isActive;
            data['tenTienTe'] = this.tenTienTe;
            data['id'] = this.id;
            return data;
        };
        return TienTeTyGiaDto;
    }());
    var PagedResultDtoOfTienTeTyGiaDto = /** @class */ (function () {
        function PagedResultDtoOfTienTeTyGiaDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfTienTeTyGiaDto.prototype.init = function (data) {
            var e_568, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(TienTeTyGiaDto.fromJS(item));
                        }
                    }
                    catch (e_568_1) { e_568 = { error: e_568_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_568) throw e_568.error; }
                    }
                }
            }
        };
        PagedResultDtoOfTienTeTyGiaDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfTienTeTyGiaDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfTienTeTyGiaDto.prototype.toJSON = function (data) {
            var e_569, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_569_1) { e_569 = { error: e_569_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_569) throw e_569.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfTienTeTyGiaDto;
    }());
    var PagedRequestToaThuocMauDto = /** @class */ (function () {
        function PagedRequestToaThuocMauDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedRequestToaThuocMauDto.prototype.init = function (data) {
            if (data) {
                this.loai = data['loai'];
                this.bacSiId = data['bacSiId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedRequestToaThuocMauDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedRequestToaThuocMauDto();
            result.init(data);
            return result;
        };
        PagedRequestToaThuocMauDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['loai'] = this.loai;
            data['bacSiId'] = this.bacSiId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedRequestToaThuocMauDto;
    }());
    var DSToaThuocMauDto = /** @class */ (function () {
        function DSToaThuocMauDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        DSToaThuocMauDto.prototype.init = function (data) {
            if (data) {
                this.bacSiId = data['bacSiId'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.maICD = data['maICD'];
                this.id = data['id'];
            }
        };
        DSToaThuocMauDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new DSToaThuocMauDto();
            result.init(data);
            return result;
        };
        DSToaThuocMauDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['bacSiId'] = this.bacSiId;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['maICD'] = this.maICD;
            data['id'] = this.id;
            return data;
        };
        return DSToaThuocMauDto;
    }());
    var PagedResultDtoOfDSToaThuocMauDto = /** @class */ (function () {
        function PagedResultDtoOfDSToaThuocMauDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfDSToaThuocMauDto.prototype.init = function (data) {
            var e_570, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(DSToaThuocMauDto.fromJS(item));
                        }
                    }
                    catch (e_570_1) { e_570 = { error: e_570_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_570) throw e_570.error; }
                    }
                }
            }
        };
        PagedResultDtoOfDSToaThuocMauDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfDSToaThuocMauDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfDSToaThuocMauDto.prototype.toJSON = function (data) {
            var e_571, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_571_1) { e_571 = { error: e_571_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_571) throw e_571.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfDSToaThuocMauDto;
    }());
    var ToaThuocMauDto = /** @class */ (function () {
        function ToaThuocMauDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        ToaThuocMauDto.prototype.init = function (data) {
            if (data) {
                this.bacSiId = data['bacSiId'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.duocId = data['duocId'];
                this.sang = data['sang'];
                this.trua = data['trua'];
                this.chieu = data['chieu'];
                this.toi = data['toi'];
                this.soNgay = data['soNgay'];
                this.soLuong = data['soLuong'];
                this.duongDungId = data['duongDungId'];
                this.loai = data['loai'];
                this.maICD = data['maICD'];
                this.benhVienId = data['benhVienId'];
                this.maDuoc = data['maDuoc'];
                this.tenDuoc = data['tenDuoc'];
                this.id = data['id'];
            }
        };
        ToaThuocMauDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new ToaThuocMauDto();
            result.init(data);
            return result;
        };
        ToaThuocMauDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['bacSiId'] = this.bacSiId;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['duocId'] = this.duocId;
            data['sang'] = this.sang;
            data['trua'] = this.trua;
            data['chieu'] = this.chieu;
            data['toi'] = this.toi;
            data['soNgay'] = this.soNgay;
            data['soLuong'] = this.soLuong;
            data['duongDungId'] = this.duongDungId;
            data['loai'] = this.loai;
            data['maICD'] = this.maICD;
            data['benhVienId'] = this.benhVienId;
            data['maDuoc'] = this.maDuoc;
            data['tenDuoc'] = this.tenDuoc;
            data['id'] = this.id;
            return data;
        };
        return ToaThuocMauDto;
    }());
    var PagedRequestToaThuocMauChiTietDto = /** @class */ (function () {
        function PagedRequestToaThuocMauChiTietDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedRequestToaThuocMauChiTietDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.bacSiId = data['bacSiId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedRequestToaThuocMauChiTietDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedRequestToaThuocMauChiTietDto();
            result.init(data);
            return result;
        };
        PagedRequestToaThuocMauChiTietDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['bacSiId'] = this.bacSiId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedRequestToaThuocMauChiTietDto;
    }());
    var PagedResultDtoOfToaThuocMauDto = /** @class */ (function () {
        function PagedResultDtoOfToaThuocMauDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfToaThuocMauDto.prototype.init = function (data) {
            var e_572, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(ToaThuocMauDto.fromJS(item));
                        }
                    }
                    catch (e_572_1) { e_572 = { error: e_572_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_572) throw e_572.error; }
                    }
                }
            }
        };
        PagedResultDtoOfToaThuocMauDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfToaThuocMauDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfToaThuocMauDto.prototype.toJSON = function (data) {
            var e_573, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_573_1) { e_573 = { error: e_573_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_573) throw e_573.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfToaThuocMauDto;
    }());
    var BenhVienSessionDto = /** @class */ (function () {
        function BenhVienSessionDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        BenhVienSessionDto.prototype.init = function (data) {
            if (data) {
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.tinhId = data['tinhId'];
                this.huyenId = data['huyenId'];
                this.xaId = data['xaId'];
                this.tuyenBenhVien = data['tuyenBenhVien'];
                this.loaiBenhVien = data['loaiBenhVien'];
                this.benhVienChaId = data['benhVienChaId'];
                this.diaChi = data['diaChi'];
                this.coQuanChuQuanId = data['coQuanChuQuanId'];
            }
        };
        BenhVienSessionDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new BenhVienSessionDto();
            result.init(data);
            return result;
        };
        BenhVienSessionDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['tinhId'] = this.tinhId;
            data['huyenId'] = this.huyenId;
            data['xaId'] = this.xaId;
            data['tuyenBenhVien'] = this.tuyenBenhVien;
            data['loaiBenhVien'] = this.loaiBenhVien;
            data['benhVienChaId'] = this.benhVienChaId;
            data['diaChi'] = this.diaChi;
            data['coQuanChuQuanId'] = this.coQuanChuQuanId;
            return data;
        };
        return BenhVienSessionDto;
    }());
    var NhanLucSessionDto = /** @class */ (function () {
        function NhanLucSessionDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        NhanLucSessionDto.prototype.init = function (data) {
            if (data) {
                this.id = data['id'];
                this.ma = data['ma'];
                this.ten = data['ten'];
                this.ngaySinh = data['ngaySinh'] ? moment__namespace(data['ngaySinh'].toString()) : undefined;
                this.gioiTinh = data['gioiTinh'];
                this.phongBanId = data['phongBanId'];
                this.chucVuId = data['chucVuId'];
                this.chucDanhId = data['chucDanhId'];
                this.loaiNhanLucId = data['loaiNhanLucId'];
            }
        };
        NhanLucSessionDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new NhanLucSessionDto();
            result.init(data);
            return result;
        };
        NhanLucSessionDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['id'] = this.id;
            data['ma'] = this.ma;
            data['ten'] = this.ten;
            data['ngaySinh'] = this.ngaySinh ? this.ngaySinh.toISOString() : undefined;
            data['gioiTinh'] = this.gioiTinh;
            data['phongBanId'] = this.phongBanId;
            data['chucVuId'] = this.chucVuId;
            data['chucDanhId'] = this.chucDanhId;
            data['loaiNhanLucId'] = this.loaiNhanLucId;
            return data;
        };
        return NhanLucSessionDto;
    }());
    var UserSessionDto = /** @class */ (function () {
        function UserSessionDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        UserSessionDto.prototype.init = function (data) {
            if (data) {
                this.userId = data['userId'];
                this.benhVienId = data['benhVienId'];
                this.nhanLucId = data['nhanLucId'];
                this.benhVienDto = data['benhVienDto'] ? BenhVienSessionDto.fromJS(data['benhVienDto']) : undefined;
                this.nhanLucDto = data['nhanLucDto'] ? NhanLucSessionDto.fromJS(data['nhanLucDto']) : undefined;
            }
        };
        UserSessionDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new UserSessionDto();
            result.init(data);
            return result;
        };
        UserSessionDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['userId'] = this.userId;
            data['benhVienId'] = this.benhVienId;
            data['nhanLucId'] = this.nhanLucId;
            data['benhVienDto'] = this.benhVienDto ? this.benhVienDto.toJSON() : undefined;
            data['nhanLucDto'] = this.nhanLucDto ? this.nhanLucDto.toJSON() : undefined;
            return data;
        };
        return UserSessionDto;
    }());
    var PagedVacXinInputDto = /** @class */ (function () {
        function PagedVacXinInputDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedVacXinInputDto.prototype.init = function (data) {
            if (data) {
                this.nhomVacXinId = data['nhomVacXinId'];
                this.filter = data['filter'];
                this.isActive = data['isActive'];
                this.exportMode = data['exportMode'];
                this.outputFileExtension = data['outputFileExtension'];
                this.sorting = data['sorting'];
                this.skipCount = data['skipCount'];
                this.maxResultCount = data['maxResultCount'];
            }
        };
        PagedVacXinInputDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedVacXinInputDto();
            result.init(data);
            return result;
        };
        PagedVacXinInputDto.prototype.toJSON = function (data) {
            data = typeof data === 'object' ? data : {};
            data['nhomVacXinId'] = this.nhomVacXinId;
            data['filter'] = this.filter;
            data['isActive'] = this.isActive;
            data['exportMode'] = this.exportMode;
            data['outputFileExtension'] = this.outputFileExtension;
            data['sorting'] = this.sorting;
            data['skipCount'] = this.skipCount;
            data['maxResultCount'] = this.maxResultCount;
            return data;
        };
        return PagedVacXinInputDto;
    }());
    var VacXinDto = /** @class */ (function () {
        function VacXinDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        VacXinDto.prototype.init = function (data) {
            var e_574, _a;
            if (data) {
                this.ten = data['ten'];
                this.tenDayDu = data['tenDayDu'];
                this.cvx = data['cvx'];
                this.strLoai = data['strLoai'];
                this.loai = data['loai'];
                this.tcmr = data['tcmr'];
                this.duongDung = data['duongDung'];
                this.vacXinKhangNguyenId = data['vacXinKhangNguyenId'];
                this.tenKhangNguyen = data['tenKhangNguyen'];
                if (Array.isArray(data['listKhangNguyen'])) {
                    this.listKhangNguyen = [];
                    try {
                        for (var _b = __values(data['listKhangNguyen']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.listKhangNguyen.push(item);
                        }
                    }
                    catch (e_574_1) { e_574 = { error: e_574_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_574) throw e_574.error; }
                    }
                }
                this.id = data['id'];
            }
        };
        VacXinDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new VacXinDto();
            result.init(data);
            return result;
        };
        VacXinDto.prototype.toJSON = function (data) {
            var e_575, _a;
            data = typeof data === 'object' ? data : {};
            data['ten'] = this.ten;
            data['tenDayDu'] = this.tenDayDu;
            data['cvx'] = this.cvx;
            data['strLoai'] = this.strLoai;
            data['loai'] = this.loai;
            data['tcmr'] = this.tcmr;
            data['duongDung'] = this.duongDung;
            data['vacXinKhangNguyenId'] = this.vacXinKhangNguyenId;
            data['tenKhangNguyen'] = this.tenKhangNguyen;
            if (Array.isArray(this.listKhangNguyen)) {
                data['listKhangNguyen'] = [];
                try {
                    for (var _b = __values(this.listKhangNguyen), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['listKhangNguyen'].push(item);
                    }
                }
                catch (e_575_1) { e_575 = { error: e_575_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_575) throw e_575.error; }
                }
            }
            data['id'] = this.id;
            return data;
        };
        return VacXinDto;
    }());
    var PagedResultDtoOfVacXinDto = /** @class */ (function () {
        function PagedResultDtoOfVacXinDto(data) {
            if (data) {
                for (var property in data) {
                    if (data.hasOwnProperty(property))
                        this[property] = data[property];
                }
            }
        }
        PagedResultDtoOfVacXinDto.prototype.init = function (data) {
            var e_576, _a;
            if (data) {
                this.totalCount = data['totalCount'];
                if (Array.isArray(data['items'])) {
                    this.items = [];
                    try {
                        for (var _b = __values(data['items']), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var item = _c.value;
                            this.items.push(VacXinDto.fromJS(item));
                        }
                    }
                    catch (e_576_1) { e_576 = { error: e_576_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_576) throw e_576.error; }
                    }
                }
            }
        };
        PagedResultDtoOfVacXinDto.fromJS = function (data) {
            data = typeof data === 'object' ? data : {};
            var result = new PagedResultDtoOfVacXinDto();
            result.init(data);
            return result;
        };
        PagedResultDtoOfVacXinDto.prototype.toJSON = function (data) {
            var e_577, _a;
            data = typeof data === 'object' ? data : {};
            data['totalCount'] = this.totalCount;
            if (Array.isArray(this.items)) {
                data['items'] = [];
                try {
                    for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var item = _c.value;
                        data['items'].push(item.toJSON());
                    }
                }
                catch (e_577_1) { e_577 = { error: e_577_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_577) throw e_577.error; }
                }
            }
            return data;
        };
        return PagedResultDtoOfVacXinDto;
    }());
    var ApiException = /** @class */ (function (_super) {
        __extends(ApiException, _super);
        function ApiException(message, status, response, headers, result) {
            var _this = _super.call(this) || this;
            _this.isApiException = true;
            _this.message = message;
            _this.status = status;
            _this.response = response;
            _this.headers = headers;
            _this.result = result;
            return _this;
        }
        ApiException.isApiException = function (obj) {
            return obj.isApiException === true;
        };
        return ApiException;
    }(Error));
    function throwException(message, status, response, headers, result) {
        if (result !== null && result !== undefined)
            return rxjs.throwError(result);
        else
            return rxjs.throwError(new ApiException(message, status, response, headers, null));
    }
    function blobToText(blob) {
        return new rxjs.Observable(function (observer) {
            if (!blob) {
                observer.next('');
                observer.complete();
            }
            else {
                var reader = new FileReader();
                reader.onload = function (event) {
                    observer.next(event.target.result);
                    observer.complete();
                };
                reader.readAsText(blob);
            }
        });
    }

    var DestroyRxjsService = /** @class */ (function (_super) {
        __extends(DestroyRxjsService, _super);
        function DestroyRxjsService() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        DestroyRxjsService.prototype.ngOnDestroy = function () {
            this.next();
            this.complete();
        };
        return DestroyRxjsService;
    }(rxjs.Subject));
    DestroyRxjsService.ɵfac = function DestroyRxjsService_Factory(t) { return ɵDestroyRxjsService_BaseFactory(t || DestroyRxjsService); };
    DestroyRxjsService.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: DestroyRxjsService, factory: DestroyRxjsService.ɵfac });
    var ɵDestroyRxjsService_BaseFactory = /*@__PURE__*/ i0__namespace.ɵɵgetInheritedFactory(DestroyRxjsService);
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DestroyRxjsService, [{
                type: i0.Injectable
            }], null, null);
    })();

    var OfValidatorService = /** @class */ (function () {
        function OfValidatorService() {
        }
        OfValidatorService.prototype.noWhitespaceValidator = function (control) {
            if (AppUtilityService.isNullOrEmpty(control.value)) {
                return { whiteSpace: true };
            }
            var v = '' + control.value;
            var isWhitespace = v.trim().length === 0;
            var isValid = !isWhitespace;
            return isValid ? null : { whiteSpace: true };
        };
        OfValidatorService.prototype.emailValidator = function (control) {
            var value = (control === null || control === void 0 ? void 0 : control.value) || '';
            var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            var isValid = re.test(value);
            return isValid ? null : { email: true };
        };
        OfValidatorService.prototype.passwordValidator = function (control) {
            var value = (control === null || control === void 0 ? void 0 : control.value) || '';
            var check = value.match(/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d@$!%*#?&]{8,}$/);
            var isValid = !!check;
            return isValid ? null : { password: true };
        };
        OfValidatorService.prototype.phoneValidator = function (control) {
            var value = (control === null || control === void 0 ? void 0 : control.value) || '';
            var check = value.match(/(09|01[2|6|8|9])+([0-9]{8})\b/);
            var isValid = !!check;
            return isValid ? null : { phone: true };
        };
        OfValidatorService.prototype.focusControlItem = function (id) {
            var arr = $__namespace('#' + id).find('.ord-form-control');
            var flag = true;
            arr.each(function () {
                var txt = $__namespace(this).find('.form-control-err').text();
                if (txt) {
                    txt = txt.replace(/ /g, '');
                }
                if (flag && AppUtilityService.isNotNull(txt)) {
                    $__namespace(this).find('.ord-dynamic-input').focus();
                    $__namespace(this).find('.ant-input-number-input').focus();
                    $__namespace(this).find('.ant-input').focus();
                    $__namespace(this).find('.ant-select-selection-search-input').focus();
                    if ($__namespace(this).find('.ant-radio-input')[0]) {
                        $__namespace(this).find('.ant-radio-input')[0].focus();
                    }
                    flag = false;
                }
            });
        };
        OfValidatorService.prototype.focusFirst = function (id) {
            var arr = $__namespace('#' + id).find('.ord-form-control');
            var flag = true;
            arr.each(function () {
                if (flag) {
                    $__namespace(this).find('.ord-dynamic-input').focus();
                    $__namespace(this).find('.ant-input-number-input').focus();
                    $__namespace(this).find('.ant-input').focus();
                    $__namespace(this).find('.ant-select-selection-search-input').focus();
                    if ($__namespace(this).find('.ant-radio-input')[0]) {
                        $__namespace(this).find('.ant-radio-input')[0].focus();
                    }
                    flag = false;
                }
            });
        };
        return OfValidatorService;
    }());
    OfValidatorService.ɵfac = function OfValidatorService_Factory(t) { return new (t || OfValidatorService)(); };
    OfValidatorService.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: OfValidatorService, factory: OfValidatorService.ɵfac, providedIn: 'root' });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfValidatorService, [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root'
                    }]
            }], function () { return []; }, null);
    })();

    var OfCreateControlFormService = /** @class */ (function () {
        function OfCreateControlFormService(fb, validatorService) {
            this.fb = fb;
            this.validatorService = validatorService;
        }
        OfCreateControlFormService.prototype.createControl = function (fields) {
            var _this = this;
            var group = this.fb.group({});
            ___namespace.forEach(fields, function (field) {
                _this.createField(field, group);
            });
            return group;
        };
        OfCreateControlFormService.prototype.createExtendControl = function (group, controls) {
            var _this = this;
            ___namespace.forEach(controls, function (field) {
                var f = group.get(field.dataField);
                if (f) {
                    return;
                }
                _this.createValidations(field);
                var control = _this.fb.control(field.value, _this.bindValidations(field));
                if (field.disabled) {
                    control.disable({ onlySelf: true });
                }
                group.addControl(field.dataField, control);
            });
        };
        OfCreateControlFormService.prototype.updateControl = function (fields, group) {
            var _this = this;
            Object.keys(group.controls).forEach(function (key) {
                var fDataField = fields.find(function (x) { return x.dataField === key; });
                if (!fDataField) {
                    group.removeControl(key);
                }
            });
            ___namespace.forEach(fields, function (field) {
                var f = group.get(field.dataField);
                if (f) {
                    return;
                }
                _this.createField(field, group);
            });
        };
        OfCreateControlFormService.prototype.createField = function (field, group) {
            var ignoreType = ['contentHtml', 'componentRef', 'templateRef'];
            if (ignoreType.indexOf(field.type) > 0) {
                return;
            }
            this.createValidations(field);
            var control = this.fb.control(field.value, this.bindValidations(field));
            if (field.disabled) {
                control.disable({ onlySelf: true });
            }
            group.addControl(field.dataField, control);
        };
        OfCreateControlFormService.prototype.createValidations = function (field) {
            var _this = this;
            field.validations = field.validations || [];
            field.validations.forEach(function (valid) {
                if (valid.name === 'email') {
                    valid.validator = _this.validatorService.emailValidator;
                    valid.message = valid.message || 'Email sai định dạng!';
                    return;
                }
                if (valid.name === 'phone') {
                    valid.validator = _this.validatorService.phoneValidator;
                    valid.message = valid.message || 'Số điện thoại không đúng định dạng!';
                    return;
                }
                if (valid.name === 'password') {
                    valid.validator = _this.validatorService.passwordValidator;
                    valid.message = valid.message || 'Mật khẩu tối thiểu 8 ký tự, bao gồm chữ in hoa/ thường , số và ký tự đặc biệt!';
                    return;
                }
            });
            if (field.required) {
                field.validations.push({
                    name: 'whiteSpace',
                    validator: this.validatorService.noWhitespaceValidator,
                    message: field.errorEmpty
                });
            }
        };
        OfCreateControlFormService.prototype.bindValidations = function (field) {
            var validations = field.validations || [];
            if (validations.length > 0) {
                var validList_1 = [];
                validations.forEach(function (valid) {
                    validList_1.push(valid.validator);
                });
                return i1$1.Validators.compose(validList_1);
            }
            return null;
        };
        return OfCreateControlFormService;
    }());
    OfCreateControlFormService.ɵfac = function OfCreateControlFormService_Factory(t) { return new (t || OfCreateControlFormService)(i0__namespace.ɵɵinject(i1__namespace$1.FormBuilder), i0__namespace.ɵɵinject(OfValidatorService)); };
    OfCreateControlFormService.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: OfCreateControlFormService, factory: OfCreateControlFormService.ɵfac, providedIn: 'root' });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfCreateControlFormService, [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root'
                    }]
            }], function () { return [{ type: i1__namespace$1.FormBuilder }, { type: OfValidatorService }]; }, null);
    })();

    function OfDynamicComponent_ng_container_3_div_1_Template(rf, ctx) {
        if (rf & 1) {
            var _r5_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 5);
            i0__namespace.ɵɵelementStart(1, "nz-form-label", 6);
            i0__namespace.ɵɵelement(2, "span", 7);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementStart(3, "div", 8);
            i0__namespace.ɵɵlistener("searchEvent", function OfDynamicComponent_ng_container_3_div_1_Template_div_searchEvent_3_listener($event) { i0__namespace.ɵɵrestoreView(_r5_1); var ctx_r4 = i0__namespace.ɵɵnextContext(2); return ctx_r4.searchEvent.emit($event); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementStart(4, "span", 9);
            i0__namespace.ɵɵtext(5);
            i0__namespace.ɵɵpipe(6, "showValidationError");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelement(7, "div", 7);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var field_r2 = i0__namespace.ɵɵnextContext().$implicit;
            var ctx_r3 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("nzSpan", field_r2.width)("ngClass", field_r2.css);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("nzRequired", field_r2.required)("hidden", field_r2.hiddenLabel);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("innerHTML", field_r2.label, i0__namespace.ɵɵsanitizeHtml);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("schemaModel", ctx_r3.schemaModel)("field", field_r2)("group", ctx_r3.form)("ofFieldTempates", ctx_r3.ofFieldTempates);
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵtextInterpolate1(" ", i0__namespace.ɵɵpipeBind3(6, 11, ctx_r3.form.controls[field_r2.dataField] == null ? null : ctx_r3.form.controls[field_r2.dataField].errors, field_r2 == null ? null : field_r2.validations, ctx_r3.schemaModel.submitted), " ");
            i0__namespace.ɵɵadvance(2);
            i0__namespace.ɵɵproperty("innerHTML", field_r2.bottomHtml, i0__namespace.ɵɵsanitizeHtml);
        }
    }
    function OfDynamicComponent_ng_container_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementContainerStart(0);
            i0__namespace.ɵɵtemplate(1, OfDynamicComponent_ng_container_3_div_1_Template, 8, 15, "div", 4);
            i0__namespace.ɵɵelementContainerEnd();
        }
        if (rf & 2) {
            var field_r2 = ctx.$implicit;
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", !field_r2.hidden);
        }
    }
    function OfDynamicComponent_div_4_Template(rf, ctx) {
        if (rf & 1) {
            var _r8_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 10);
            i0__namespace.ɵɵelementStart(1, "button", 11);
            i0__namespace.ɵɵlistener("click", function OfDynamicComponent_div_4_Template_button_click_1_listener() { i0__namespace.ɵɵrestoreView(_r8_1); var ctx_r7 = i0__namespace.ɵɵnextContext(); return ctx_r7.onClickSearchBtn(); });
            i0__namespace.ɵɵtext(2, "T\u00ECm ki\u1EBFm ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("nzSpan", 2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("nzLoading", ctx_r1.schemaModel.searchBtnBusy);
        }
    }
    var _c0$7 = [[["", "topContent", ""]], [["", "bottomContent", ""]]];
    var _c1$2 = function () { return [18, 6]; };
    var _c2$1 = ["[topContent]", "[bottomContent]"];
    var OfDynamicComponent = /** @class */ (function () {
        function OfDynamicComponent(fb, createCtrlService, validatorService, destroy$) {
            this.fb = fb;
            this.createCtrlService = createCtrlService;
            this.validatorService = validatorService;
            this.destroy$ = destroy$;
            this.submitValueEvent = new i0.EventEmitter();
            this.searchEvent = new i0.EventEmitter();
            this.fields = [];
            this.ofFieldTempates = [];
        }
        Object.defineProperty(OfDynamicComponent.prototype, "value", {
            get: function () {
                var _a;
                return (_a = this.form) === null || _a === void 0 ? void 0 : _a.getRawValue();
            },
            enumerable: false,
            configurable: true
        });
        OfDynamicComponent.prototype.ngOnInit = function () {
            this.fields = this.schemaModel.fields || [];
            this.form = this.createCtrlService.createControl(this.fields);
            this.schemaModel.form = this.form;
            this.init$();
        };
        OfDynamicComponent.prototype.reBuilderForm = function () {
            this.fields = this.schemaModel.fields || [];
            this.createCtrlService.updateControl(this.fields, this.form);
            this.schemaModel.form = this.form;
        };
        OfDynamicComponent.prototype.init$ = function () {
            var _this = this;
            this.schemaModel.rebuilder$.pipe(operators.takeUntil(this.destroy$), operators.distinctUntilChanged(), operators.filter(function (x) { return x > 0; }))
                .subscribe(function () {
                _this.reBuilderForm();
            });
        };
        OfDynamicComponent.prototype.trackByField = function (index, field) {
            return field.dataField;
        };
        OfDynamicComponent.prototype.onSubmit = function (isCheckValid) {
            var _this = this;
            if (isCheckValid === void 0) { isCheckValid = true; }
            this.schemaModel.submitted = true;
            if (!isCheckValid) {
                this.submitValueEvent.emit(this.value);
                return this.value;
            }
            ___namespace.forEach(this.fields, function (field) {
                var f = _this.form.controls[field.dataField];
                if (f) {
                    if (field.hidden) {
                        f.setValidators(null);
                    }
                    else {
                        f.setValidators(_this.createCtrlService.bindValidations(field));
                    }
                }
            });
            if (this.form.valid) {
                this.submitValueEvent.emit(this.value);
                return this.value;
            }
            else {
                setTimeout(function () {
                    _this.validatorService.focusControlItem(_this.schemaModel.id);
                }, 500);
                return null;
            }
        };
        OfDynamicComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.validatorService.focusFirst(_this.schemaModel.id);
            }, 500);
        };
        OfDynamicComponent.prototype.onClickSearchBtn = function () {
            this.schemaModel.searchBtnBusy = true;
            this.searchEvent.emit(this.value);
            this.schemaModel.searchEvent$.next(this.value);
        };
        OfDynamicComponent.prototype.disableAll = function (f) {
            if (f === void 0) { f = true; }
            this.schemaModel.disableAll(f);
        };
        OfDynamicComponent.prototype.disableField = function (name, f) {
            if (f === void 0) { f = true; }
            this.schemaModel.disableField(name, f);
        };
        OfDynamicComponent.prototype.addOfFieldTempates = function (d) {
            this.ofFieldTempates.push(d);
        };
        return OfDynamicComponent;
    }());
    OfDynamicComponent.ɵfac = function OfDynamicComponent_Factory(t) { return new (t || OfDynamicComponent)(i0__namespace.ɵɵdirectiveInject(i1__namespace$1.FormBuilder), i0__namespace.ɵɵdirectiveInject(OfCreateControlFormService), i0__namespace.ɵɵdirectiveInject(OfValidatorService), i0__namespace.ɵɵdirectiveInject(DestroyRxjsService)); };
    OfDynamicComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfDynamicComponent, selectors: [["of"]], inputs: { schemaModel: "schemaModel" }, outputs: { submitValueEvent: "submitValueEvent", searchEvent: "searchEvent" }, features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])], ngContentSelectors: _c2$1, decls: 6, vars: 7, consts: [[1, "dynamic-form", 3, "formGroup"], ["nz-row", "", 3, "nzGutter", "id"], [4, "ngFor", "ngForOf", "ngForTrackBy"], ["nz-col", "", "class", "gutter-row of-btn-search ord-form-control", 3, "nzSpan", 4, "ngIf"], ["nz-col", "", 3, "nzSpan", "ngClass", 4, "ngIf"], ["nz-col", "", 3, "nzSpan", "ngClass"], [3, "nzRequired", "hidden"], [3, "innerHTML"], ["ofDynamicField", "", 3, "schemaModel", "field", "group", "ofFieldTempates", "searchEvent"], [1, "form-control-err", "text-danger"], ["nz-col", "", 1, "gutter-row", "of-btn-search", "ord-form-control", 3, "nzSpan"], ["nz-button", "", "nzType", "primary", 3, "nzLoading", "click"]], template: function OfDynamicComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵprojectionDef(_c0$7);
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelementStart(1, "div", 1);
                i0__namespace.ɵɵprojection(2);
                i0__namespace.ɵɵtemplate(3, OfDynamicComponent_ng_container_3_Template, 2, 1, "ng-container", 2);
                i0__namespace.ɵɵtemplate(4, OfDynamicComponent_div_4_Template, 3, 2, "div", 3);
                i0__namespace.ɵɵprojection(5, 1);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("formGroup", ctx.form);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("nzGutter", i0__namespace.ɵɵpureFunction0(6, _c1$2))("id", ctx.schemaModel.id);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("ngForOf", ctx.fields)("ngForTrackBy", ctx.trackByField);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngIf", ctx.schemaModel.isSearchBox);
            }
        }, styles: [".of-btn-search{max-width:109px}.of-btn-search button{margin-top:25px!important}.ant-form-item-label{padding:0!important;height:25px!important}.ant-form-item-label>label:after{content:\"\"!important}"], encapsulation: 2 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfDynamicComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of',
                        templateUrl: './of-dynamic.component.html',
                        styleUrls: ['./of-dynamic.component.scss'],
                        encapsulation: i0.ViewEncapsulation.None,
                        providers: [DestroyRxjsService]
                    }]
            }], function () { return [{ type: i1__namespace$1.FormBuilder }, { type: OfCreateControlFormService }, { type: OfValidatorService }, { type: DestroyRxjsService }]; }, { schemaModel: [{
                    type: i0.Input
                }], submitValueEvent: [{
                    type: i0.Output
                }], searchEvent: [{
                    type: i0.Output
                }] });
    })();

    var _c0$6 = ["control"];
    var OfFieldComponent = /** @class */ (function () {
        function OfFieldComponent(ofDynamic) {
            this.ofDynamic = ofDynamic;
            // map với dataField
            this.id = '';
            this.ofDynamic.addOfFieldTempates(this);
        }
        return OfFieldComponent;
    }());
    OfFieldComponent.ɵfac = function OfFieldComponent_Factory(t) { return new (t || OfFieldComponent)(i0__namespace.ɵɵdirectiveInject(OfDynamicComponent)); };
    OfFieldComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfFieldComponent, selectors: [["of-field"]], contentQueries: function OfFieldComponent_ContentQueries(rf, ctx, dirIndex) {
            if (rf & 1) {
                i0__namespace.ɵɵcontentQuery(dirIndex, _c0$6, true);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.controlTemplate = _t.first);
            }
        }, inputs: { id: "id" }, decls: 0, vars: 0, template: function OfFieldComponent_Template(rf, ctx) { }, encapsulation: 2 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfFieldComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-field',
                        template: ""
                    }]
            }], function () { return [{ type: OfDynamicComponent }]; }, { id: [{
                    type: i0.Input
                }], controlTemplate: [{
                    type: i0.ContentChild,
                    args: ['control']
                }] });
    })();

    function OfComponent_ng_template_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "form", 6);
            i0__namespace.ɵɵelementStart(1, "nz-input-group", 7);
            i0__namespace.ɵɵelementStart(2, "nz-select", 8);
            i0__namespace.ɵɵelement(3, "nz-option", 9);
            i0__namespace.ɵɵelement(4, "nz-option", 9);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelement(5, "input", 10);
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var group_r3 = ctx.group;
            i0__namespace.ɵɵproperty("formGroup", group_r3);
            i0__namespace.ɵɵadvance(3);
            i0__namespace.ɵɵproperty("nzLabel", "Option 1")("nzValue", "1");
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("nzLabel", "Option 2")("nzValue", "2");
        }
    }
    var OfComponent = /** @class */ (function () {
        function OfComponent(selectSp, searchSp) {
            var _this = this;
            this.selectSp = selectSp;
            this.searchSp = searchSp;
            this.formDisable$ = new rxjs.BehaviorSubject(false);
            this.ngaySinhMin$ = new rxjs.BehaviorSubject(new Date(2021, 2, 27));
            this.danTocOption$ = new rxjs.BehaviorSubject([{
                    displayText: 'Kinh',
                    value: '1'
                }, {
                    displayText: 'Mông',
                    value: '2'
                }]);
            this.schemaModel = new OfSchemaModel({
                fields: [
                    new OfTextModel({
                        label: 'Mã',
                        dataField: 'ma',
                        required: true,
                        validations: [
                            {
                                name: 'email'
                            }
                        ],
                        disabled: true
                    }),
                    new OfTextModel({
                        label: 'Họ tên',
                        dataField: 'tenDayDu',
                        required: true,
                        disabledAsync: this.formDisable$
                    }),
                    new OfSelectModel({
                        label: 'Giới tính',
                        dataField: 'gioiTinhId',
                        value: 1,
                        options: [
                            { displayText: 'Nam', value: '1' },
                            { displayText: 'Nữ', value: '2' }
                        ]
                    }),
                    new OfSelectAsyncModel({
                        label: 'Dân tộc async',
                        dataField: 'danToc',
                        value: 1,
                        optionsAsync: this.danTocOption$
                    }),
                    new OfSelectApiModel({
                        label: 'Tỉnh',
                        dataField: 'tinhId',
                        functionService: this.selectSp.getoptions({
                            type: SelectOptionType.Tinh
                        }),
                        keyCache: 'tinh'
                    }),
                    new OfSelectCascadeModel({
                        label: 'Huyện',
                        dataField: 'huyenId',
                        cascadeField: 'tinhId',
                        functionService: function (cascade) {
                            return _this.selectSp.getoptions({
                                type: SelectOptionType.Huyen,
                                cascader: cascade
                            });
                        },
                        renderOptionFunc: function (opt) {
                            if (opt) {
                                return opt.value + ' - ' + opt.displayText;
                            }
                            return '';
                        },
                        renderSelectedFunc: function (opt) {
                            if (opt) {
                                return "<b>" + opt.value + "</b>" + ' - ' + opt.displayText;
                            }
                            return '';
                        }
                    }),
                    new OfSelectCascadeModel({
                        label: 'Xã',
                        dataField: 'xaId',
                        cascadeField: 'huyenId',
                        functionService: function (cascade) {
                            return _this.selectSp.getoptions({
                                type: SelectOptionType.Xa,
                                cascader: cascade
                            });
                        },
                        keyCache: 'xa'
                    }),
                    new OfSelectSearchServerModel({
                        label: 'Quận huyện search',
                        dataField: 'huyenSearchServerId',
                        functionService: function (dto) {
                            return _this.searchSp.getoptions(Object.assign(Object.assign({}, dto), { type: SelectSearchServerType.Huyen }));
                        }
                    }),
                    new OfSelectSearchServerModel({
                        label: 'Quận huyện search showPagination',
                        dataField: 'huyenSearchServerId',
                        functionService: function (dto) {
                            return _this.searchSp.getoptions(Object.assign(Object.assign({}, dto), { type: SelectSearchServerType.Huyen }));
                        },
                        showPagination: true
                    }),
                    new OfCheckBoxModel({
                        label: '',
                        dataField: 'checkBox',
                        checkBoxLabel: 'Check box',
                        disabledAsync: this.formDisable$
                    }),
                    new OfDateModel({
                        label: 'Ngày sinh',
                        dataField: 'ngaySinh',
                        required: true,
                        notGreaterThanCurrent: true,
                        minDateAsync: this.ngaySinhMin$,
                        disabledAsync: this.formDisable$
                    }),
                    new OfCurrencyModel({
                        label: 'Đơn giá',
                        dataField: 'donGia',
                        disabledAsync: this.formDisable$
                    }),
                    new OfContentHtmlModel({
                        label: ' ',
                        dataField: 'benhNhanId',
                        content: '<h3>content string html</h3>',
                        disabledAsync: this.formDisable$
                    }),
                    new OfTextAreaModel({
                        label: 'Ghi chú',
                        dataField: 'ghiChu',
                        rows: 2,
                        disabledAsync: this.formDisable$
                    }),
                    new OfNumberModel({
                        label: 'Số thứ tự',
                        dataField: 'soThuTu',
                        min: 10,
                        max: 100,
                        step: 2,
                        disabledAsync: this.formDisable$
                    }),
                    new OfNumberModel({
                        label: 'Điện thoại',
                        dataField: 'dienThoai',
                        onlyKeyNumber: true,
                        disabledAsync: this.formDisable$
                    }),
                    new OfPwdModel({
                        label: 'Mật khẩu',
                        dataField: 'matKhau',
                        disabledAsync: this.formDisable$,
                        validations: [
                            {
                                name: 'password'
                            }
                        ]
                    }),
                    new OfRadioModel({
                        label: 'Loại',
                        dataField: 'loai',
                        items: [{
                                label: 'Loại 1',
                                value: 1
                            }, {
                                label: 'Loại 2',
                                value: 2
                            }, {
                                label: 'Loại 3',
                                value: 3
                            }]
                    }),
                    new OfSwitchModel({
                        label: 'Switch',
                        dataField: 'switch',
                        yesText: 'Có'
                    }),
                    new OfTemplateRefModel({
                        label: 'templateRef',
                        dataField: 'templateRef',
                        controls: [
                            new OfExtendControlModel({
                                dataField: 'templateOpt',
                                value: '1'
                            }),
                            new OfExtendControlModel({
                                dataField: 'templateInput',
                                required: true
                            })
                        ]
                    })
                ]
            });
            this.disable = false;
        }
        OfComponent.prototype.onClickDisable = function () {
            this.disable = !this.disable;
            this.schemaModel.disableAll(this.disable);
        };
        OfComponent.prototype.onClickSetValue = function () {
            this.schemaModel.patchValue({
                ngaySinh: new Date(2021, 2, 28),
                ma: Number(new Date()),
                ghiChu: Number(new Date()),
                huyenSearchServerId: '9361',
                tinhId: '867',
                huyenId: '531',
                xaId: '533'
            });
        };
        OfComponent.prototype.onClickAddControl = function () {
            this.schemaModel.addControls([
                new OfTextModel({
                    label: 'Mã ' + Number(new Date()),
                    dataField: 'ma' + Number(new Date()),
                    required: true,
                    validations: [
                        {
                            name: 'email'
                        }
                    ],
                    value: Number(new Date())
                })
            ], 0);
        };
        return OfComponent;
    }());
    OfComponent.ɵfac = function OfComponent_Factory(t) { return new (t || OfComponent)(i0__namespace.ɵɵdirectiveInject(SelectoptionServiceProxy), i0__namespace.ɵɵdirectiveInject(SelectsearchserverServiceProxy)); };
    OfComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfComponent, selectors: [["lib-of"]], features: [i0__namespace.ɵɵProvidersFeature([SelectoptionServiceProxy, SelectsearchserverServiceProxy])], decls: 20, vars: 4, consts: [[1, "form-group"], [3, "schemaModel"], ["vcForm", ""], ["id", "templateRef"], ["control", ""], [1, "btn", "btn-primary", 3, "click"], [3, "formGroup"], ["nzCompact", ""], ["formControlName", "templateOpt", 2, "width", "50%"], [3, "nzLabel", "nzValue"], ["formControlName", "templateInput", "nz-input", "", "placeholder", "templateInput", 2, "width", "50%"]], template: function OfComponent_Template(rf, ctx) {
            if (rf & 1) {
                var _r4_1 = i0__namespace.ɵɵgetCurrentView();
                i0__namespace.ɵɵelementStart(0, "div", 0);
                i0__namespace.ɵɵelementStart(1, "of", 1, 2);
                i0__namespace.ɵɵelementStart(3, "of-field", 3);
                i0__namespace.ɵɵtemplate(4, OfComponent_ng_template_4_Template, 6, 5, "ng-template", null, 4, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementStart(6, "div");
                i0__namespace.ɵɵelementStart(7, "button", 5);
                i0__namespace.ɵɵlistener("click", function OfComponent_Template_button_click_7_listener() { return ctx.onClickDisable(); });
                i0__namespace.ɵɵtext(8, "Disable");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementStart(9, "button", 5);
                i0__namespace.ɵɵlistener("click", function OfComponent_Template_button_click_9_listener() { return ctx.onClickSetValue(); });
                i0__namespace.ɵɵtext(10, "Set value");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementStart(11, "button", 5);
                i0__namespace.ɵɵlistener("click", function OfComponent_Template_button_click_11_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var _r0 = i0__namespace.ɵɵreference(2); return _r0.onSubmit(); });
                i0__namespace.ɵɵtext(12, "Submit");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementStart(13, "button", 5);
                i0__namespace.ɵɵlistener("click", function OfComponent_Template_button_click_13_listener() { return ctx.schemaModel.submitted = false; });
                i0__namespace.ɵɵtext(14, "Clear Submit");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementStart(15, "button", 5);
                i0__namespace.ɵɵlistener("click", function OfComponent_Template_button_click_15_listener() { return ctx.onClickAddControl(); });
                i0__namespace.ɵɵtext(16, "AddControl");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementStart(17, "pre");
                i0__namespace.ɵɵtext(18);
                i0__namespace.ɵɵpipe(19, "json");
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                var _r0 = i0__namespace.ɵɵreference(2);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("schemaModel", ctx.schemaModel);
                i0__namespace.ɵɵadvance(17);
                i0__namespace.ɵɵtextInterpolate(i0__namespace.ɵɵpipeBind1(19, 2, _r0.value));
            }
        }, directives: [OfDynamicComponent, OfFieldComponent, i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace.NzInputGroupComponent, i3__namespace.NzSelectComponent, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i3__namespace.NzOptionComponent, i1__namespace$1.DefaultValueAccessor, i2__namespace.NzInputDirective], pipes: [i4__namespace.JsonPipe], encapsulation: 2 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'lib-of',
                        template: "\n      <div class=\"form-group\">\n          <of #vcForm [schemaModel]=\"schemaModel\">\n              <of-field id=\"templateRef\">\n                  <ng-template #control let-group=\"group\">\n                      <form [formGroup]=\"group\">\n                          <nz-input-group nzCompact>\n                              <nz-select formControlName=\"templateOpt\" style=\"width: 50%\">\n                                  <nz-option [nzLabel]=\"'Option 1'\" [nzValue]=\"'1'\"></nz-option>\n                                  <nz-option [nzLabel]=\"'Option 2'\" [nzValue]=\"'2'\"></nz-option>\n                              </nz-select>\n                              <input formControlName=\"templateInput\" nz-input placeholder=\"templateInput\"\n                                     style=\"width: 50%\"/>\n                          </nz-input-group>\n                      </form>\n                  </ng-template>\n              </of-field>\n          </of>\n      </div>\n      <div>\n          <button class=\"btn btn-primary\" (click)=\"onClickDisable()\">Disable</button>\n          <button class=\"btn btn-primary\" (click)=\"onClickSetValue()\">Set value</button>\n          <button class=\"btn btn-primary\" (click)=\"vcForm.onSubmit()\">Submit</button>\n          <button class=\"btn btn-primary\" (click)=\"schemaModel.submitted = false\">Clear Submit</button>\n          <button class=\"btn btn-primary\" (click)=\"onClickAddControl()\">AddControl</button>\n      </div>\n      <pre>{{vcForm.value|json}}</pre>\n\n  ",
                        styles: [],
                        providers: [SelectoptionServiceProxy, SelectsearchserverServiceProxy]
                    }]
            }], function () { return [{ type: SelectoptionServiceProxy }, { type: SelectsearchserverServiceProxy }]; }, null);
    })();

    var OfService = /** @class */ (function () {
        function OfService(restService) {
            this.restService = restService;
            this.apiName = 'Of';
        }
        OfService.prototype.sample = function () {
            // return this.restService.request<void, any>(
            //   { method: 'GET', url: '/api/Of/sample' },
            //   { apiName: this.apiName }
            // );
        };
        return OfService;
    }());
    OfService.ɵfac = function OfService_Factory(t) { return new (t || OfService)(i0__namespace.ɵɵinject(i1__namespace$2.RestService)); };
    OfService.ɵprov = i0__namespace.ɵɵdefineInjectable({ token: OfService, factory: OfService.ɵfac, providedIn: 'root' });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfService, [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], function () { return [{ type: i1__namespace$2.RestService }]; }, null);
    })();

    var routes = [
        {
            path: '',
            pathMatch: 'full',
            component: i1$2.DynamicLayoutComponent,
            children: [
                {
                    path: '',
                    component: OfComponent,
                },
            ],
        },
    ];
    var OfRoutingModule = /** @class */ (function () {
        function OfRoutingModule() {
        }
        return OfRoutingModule;
    }());
    OfRoutingModule.ɵmod = i0__namespace.ɵɵdefineNgModule({ type: OfRoutingModule });
    OfRoutingModule.ɵinj = i0__namespace.ɵɵdefineInjector({ factory: function OfRoutingModule_Factory(t) { return new (t || OfRoutingModule)(); }, imports: [[i1$3.RouterModule.forChild(routes)], i1$3.RouterModule] });
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(OfRoutingModule, { imports: [i1__namespace$3.RouterModule], exports: [i1$3.RouterModule] }); })();
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfRoutingModule, [{
                type: i0.NgModule,
                args: [{
                        imports: [i1$3.RouterModule.forChild(routes)],
                        exports: [i1$3.RouterModule],
                    }]
            }], null, null);
    })();

    i4.registerLocaleData(vi__default['default']);
    var antDesignIcons = AllIcons__namespace;
    var icons = Object.keys(antDesignIcons).map(function (key) { return antDesignIcons[key]; });
    var antModule = [
        affix.NzAffixModule,
        alert.NzAlertModule,
        anchor.NzAnchorModule,
        autoComplete.NzAutocompleteModule,
        avatar.NzAvatarModule,
        backTop.NzBackTopModule,
        badge.NzBadgeModule,
        i6.NzButtonModule,
        breadcrumb.NzBreadCrumbModule,
        calendar.NzCalendarModule,
        card.NzCardModule,
        carousel.NzCarouselModule,
        cascader.NzCascaderModule,
        i2$1.NzCheckboxModule,
        collapse.NzCollapseModule,
        comment.NzCommentModule,
        i1$4.NzDatePickerModule,
        descriptions.NzDescriptionsModule,
        i5.NzDividerModule,
        drawer.NzDrawerModule,
        dropdown.NzDropDownModule,
        empty.NzEmptyModule,
        i4$1.NzFormModule,
        i2$2.NzGridModule,
        i18n.NzI18nModule,
        i4$2.NzIconModule,
        i2.NzInputModule,
        i5$1.NzInputNumberModule,
        layout.NzLayoutModule,
        list.NzListModule,
        mention.NzMentionModule,
        menu.NzMenuModule,
        message.NzMessageModule,
        modal.NzModalModule,
        noAnimation.NzNoAnimationModule,
        notification.NzNotificationModule,
        pageHeader.NzPageHeaderModule,
        i5$2.NzPaginationModule,
        popconfirm.NzPopconfirmModule,
        popover.NzPopoverModule,
        progress.NzProgressModule,
        i2$3.NzRadioModule,
        rate.NzRateModule,
        result.NzResultModule,
        i3.NzSelectModule,
        skeleton.NzSkeletonModule,
        slider.NzSliderModule,
        i2$4.NzSpinModule,
        statistic.NzStatisticModule,
        steps.NzStepsModule,
        i2$5.NzSwitchModule,
        table.NzTableModule,
        tabs.NzTabsModule,
        tag.NzTagModule,
        timePicker.NzTimePickerModule,
        timeline.NzTimelineModule,
        tooltip.NzToolTipModule,
        transButton.NzTransButtonModule,
        transfer.NzTransferModule,
        tree.NzTreeModule,
        treeSelect.NzTreeSelectModule,
        typography.NzTypographyModule,
        upload.NzUploadModule,
        i7.NzWaveModule,
        resizable.NzResizableModule,
        space.NzSpaceModule
    ];
    var AntDesignModule = /** @class */ (function () {
        function AntDesignModule() {
        }
        return AntDesignModule;
    }());
    AntDesignModule.ɵmod = i0__namespace.ɵɵdefineNgModule({ type: AntDesignModule });
    AntDesignModule.ɵinj = i0__namespace.ɵɵdefineInjector({ factory: function AntDesignModule_Factory(t) { return new (t || AntDesignModule)(); }, providers: [
            { provide: i18n.NZ_I18N, useValue: i18n.vi_VN },
            { provide: i4$2.NZ_ICONS, useValue: icons },
            { provide: i18n.NZ_DATE_LOCALE, useValue: locale.vi }
        ], imports: [affix.NzAffixModule,
            alert.NzAlertModule,
            anchor.NzAnchorModule,
            autoComplete.NzAutocompleteModule,
            avatar.NzAvatarModule,
            backTop.NzBackTopModule,
            badge.NzBadgeModule,
            i6.NzButtonModule,
            breadcrumb.NzBreadCrumbModule,
            calendar.NzCalendarModule,
            card.NzCardModule,
            carousel.NzCarouselModule,
            cascader.NzCascaderModule,
            i2$1.NzCheckboxModule,
            collapse.NzCollapseModule,
            comment.NzCommentModule,
            i1$4.NzDatePickerModule,
            descriptions.NzDescriptionsModule,
            i5.NzDividerModule,
            drawer.NzDrawerModule,
            dropdown.NzDropDownModule,
            empty.NzEmptyModule,
            i4$1.NzFormModule,
            i2$2.NzGridModule,
            i18n.NzI18nModule,
            i4$2.NzIconModule,
            i2.NzInputModule,
            i5$1.NzInputNumberModule,
            layout.NzLayoutModule,
            list.NzListModule,
            mention.NzMentionModule,
            menu.NzMenuModule,
            message.NzMessageModule,
            modal.NzModalModule,
            noAnimation.NzNoAnimationModule,
            notification.NzNotificationModule,
            pageHeader.NzPageHeaderModule,
            i5$2.NzPaginationModule,
            popconfirm.NzPopconfirmModule,
            popover.NzPopoverModule,
            progress.NzProgressModule,
            i2$3.NzRadioModule,
            rate.NzRateModule,
            result.NzResultModule,
            i3.NzSelectModule,
            skeleton.NzSkeletonModule,
            slider.NzSliderModule,
            i2$4.NzSpinModule,
            statistic.NzStatisticModule,
            steps.NzStepsModule,
            i2$5.NzSwitchModule,
            table.NzTableModule,
            tabs.NzTabsModule,
            tag.NzTagModule,
            timePicker.NzTimePickerModule,
            timeline.NzTimelineModule,
            tooltip.NzToolTipModule,
            transButton.NzTransButtonModule,
            transfer.NzTransferModule,
            tree.NzTreeModule,
            treeSelect.NzTreeSelectModule,
            typography.NzTypographyModule,
            upload.NzUploadModule,
            i7.NzWaveModule,
            resizable.NzResizableModule,
            space.NzSpaceModule] });
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AntDesignModule, { exports: [affix.NzAffixModule,
                alert.NzAlertModule,
                anchor.NzAnchorModule,
                autoComplete.NzAutocompleteModule,
                avatar.NzAvatarModule,
                backTop.NzBackTopModule,
                badge.NzBadgeModule,
                i6.NzButtonModule,
                breadcrumb.NzBreadCrumbModule,
                calendar.NzCalendarModule,
                card.NzCardModule,
                carousel.NzCarouselModule,
                cascader.NzCascaderModule,
                i2$1.NzCheckboxModule,
                collapse.NzCollapseModule,
                comment.NzCommentModule,
                i1$4.NzDatePickerModule,
                descriptions.NzDescriptionsModule,
                i5.NzDividerModule,
                drawer.NzDrawerModule,
                dropdown.NzDropDownModule,
                empty.NzEmptyModule,
                i4$1.NzFormModule,
                i2$2.NzGridModule,
                i18n.NzI18nModule,
                i4$2.NzIconModule,
                i2.NzInputModule,
                i5$1.NzInputNumberModule,
                layout.NzLayoutModule,
                list.NzListModule,
                mention.NzMentionModule,
                menu.NzMenuModule,
                message.NzMessageModule,
                modal.NzModalModule,
                noAnimation.NzNoAnimationModule,
                notification.NzNotificationModule,
                pageHeader.NzPageHeaderModule,
                i5$2.NzPaginationModule,
                popconfirm.NzPopconfirmModule,
                popover.NzPopoverModule,
                progress.NzProgressModule,
                i2$3.NzRadioModule,
                rate.NzRateModule,
                result.NzResultModule,
                i3.NzSelectModule,
                skeleton.NzSkeletonModule,
                slider.NzSliderModule,
                i2$4.NzSpinModule,
                statistic.NzStatisticModule,
                steps.NzStepsModule,
                i2$5.NzSwitchModule,
                table.NzTableModule,
                tabs.NzTabsModule,
                tag.NzTagModule,
                timePicker.NzTimePickerModule,
                timeline.NzTimelineModule,
                tooltip.NzToolTipModule,
                transButton.NzTransButtonModule,
                transfer.NzTransferModule,
                tree.NzTreeModule,
                treeSelect.NzTreeSelectModule,
                typography.NzTypographyModule,
                upload.NzUploadModule,
                i7.NzWaveModule,
                resizable.NzResizableModule,
                space.NzSpaceModule] });
    })();
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(AntDesignModule, [{
                type: i0.NgModule,
                args: [{
                        declarations: [],
                        exports: [antModule],
                        providers: [
                            { provide: i18n.NZ_I18N, useValue: i18n.vi_VN },
                            { provide: i4$2.NZ_ICONS, useValue: icons },
                            { provide: i18n.NZ_DATE_LOCALE, useValue: locale.vi }
                        ]
                    }]
            }], null, null);
    })();

    var OfCheckBoxComponent = /** @class */ (function () {
        function OfCheckBoxComponent() {
        }
        OfCheckBoxComponent.prototype.ngOnInit = function () {
        };
        return OfCheckBoxComponent;
    }());
    OfCheckBoxComponent.ɵfac = function OfCheckBoxComponent_Factory(t) { return new (t || OfCheckBoxComponent)(); };
    OfCheckBoxComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfCheckBoxComponent, selectors: [["of-check-box"]], decls: 3, vars: 3, consts: [[3, "formGroup"], ["nz-checkbox", "", 3, "formControlName"]], template: function OfCheckBoxComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelementStart(1, "label", 1);
                i0__namespace.ɵɵtext(2);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵtextInterpolate(ctx.field.checkBoxLabel);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace$1.NzCheckboxComponent, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfCheckBoxComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-check-box',
                        template: "\n      <form [formGroup]=\"group\">\n          <label nz-checkbox [formControlName]=\"field.dataField\">{{ field.checkBoxLabel }}</label>\n      </form>\n  ",
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return []; }, null);
    })();

    var ofCheckBox_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfCheckBoxComponent: OfCheckBoxComponent
    });

    var DynamicFieldDirective = /** @class */ (function () {
        function DynamicFieldDirective(resolver, container, destroy$) {
            this.resolver = resolver;
            this.container = container;
            this.destroy$ = destroy$;
            this.ofFieldTempates = [];
            this.searchEvent = new i0.EventEmitter();
        }
        DynamicFieldDirective.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var factory;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.mapComponent()];
                        case 1:
                            _a.sent();
                            if (this.component) {
                                factory = this.resolver.resolveComponentFactory(this.component);
                                this.componentRef = this.container.createComponent(factory);
                                this.componentRef.instance.field = this.field;
                                this.componentRef.instance.group = this.group;
                                this.componentRef.instance.schemaModel = this.schemaModel;
                                if (this.field.type === 'templateRef') {
                                    this.componentRef.instance.ofFieldTempates = this.ofFieldTempates;
                                }
                                if (this.schemaModel.isSearchBox && this.field.type === 'text') {
                                    this.componentRef.instance.searchEvent.pipe(operators.takeUntil(this.destroy$)).subscribe(function (d) {
                                        _this.searchEvent.emit(d);
                                    });
                                }
                            }
                            this.init$();
                            return [2 /*return*/];
                    }
                });
            });
        };
        DynamicFieldDirective.prototype.mapComponent = function () {
            return __awaiter(this, void 0, void 0, function () {
                var type, _a, OfCheckBoxComponent, OfTextAreaComponent, OfTextComponent, OfSelectComponent, OfSelectAsyncComponent, OfSelectApiComponent, OfSelectCascadeComponent, OfSelectSearchServerComponent, OfCurrencyComponent, OfDatePickerComponent, OfContentHtmlComponent, OfNumberInputComponent, OfPasswordComponent, OfRadioComponent, OfSwitchComponent, field, OfTemplateRefComponent;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            type = this.field.type;
                            _a = type;
                            switch (_a) {
                                case 'checkBox': return [3 /*break*/, 1];
                                case 'textArea': return [3 /*break*/, 3];
                                case 'text': return [3 /*break*/, 5];
                                case 'select': return [3 /*break*/, 7];
                                case 'selectAsync': return [3 /*break*/, 9];
                                case 'selectApi': return [3 /*break*/, 11];
                                case 'selectApiCascade': return [3 /*break*/, 13];
                                case 'selectSearchServer': return [3 /*break*/, 15];
                                case 'currencyInput': return [3 /*break*/, 17];
                                case 'datePicker': return [3 /*break*/, 19];
                                case 'contentHtml': return [3 /*break*/, 21];
                                case 'numberInput': return [3 /*break*/, 23];
                                case 'passWordInput': return [3 /*break*/, 25];
                                case 'radio': return [3 /*break*/, 27];
                                case 'switch': return [3 /*break*/, 29];
                                case 'componentRef': return [3 /*break*/, 31];
                                case 'templateRef': return [3 /*break*/, 32];
                            }
                            return [3 /*break*/, 34];
                        case 1: return [4 /*yield*/, Promise.resolve().then(function () { return ofCheckBox_component; })];
                        case 2:
                            OfCheckBoxComponent = (_b.sent()).OfCheckBoxComponent;
                            this.component = OfCheckBoxComponent;
                            return [3 /*break*/, 34];
                        case 3: return [4 /*yield*/, Promise.resolve().then(function () { return ofTextArea_component; })];
                        case 4:
                            OfTextAreaComponent = (_b.sent()).OfTextAreaComponent;
                            this.component = OfTextAreaComponent;
                            return [3 /*break*/, 34];
                        case 5: return [4 /*yield*/, Promise.resolve().then(function () { return ofText_component; })];
                        case 6:
                            OfTextComponent = (_b.sent()).OfTextComponent;
                            this.component = OfTextComponent;
                            return [3 /*break*/, 34];
                        case 7: return [4 /*yield*/, Promise.resolve().then(function () { return ofSelect_component; })];
                        case 8:
                            OfSelectComponent = (_b.sent()).OfSelectComponent;
                            this.component = OfSelectComponent;
                            return [3 /*break*/, 34];
                        case 9: return [4 /*yield*/, Promise.resolve().then(function () { return ofSelectAsync_component; })];
                        case 10:
                            OfSelectAsyncComponent = (_b.sent()).OfSelectAsyncComponent;
                            this.component = OfSelectAsyncComponent;
                            return [3 /*break*/, 34];
                        case 11: return [4 /*yield*/, Promise.resolve().then(function () { return ofSelectApi_component; })];
                        case 12:
                            OfSelectApiComponent = (_b.sent()).OfSelectApiComponent;
                            this.component = OfSelectApiComponent;
                            return [3 /*break*/, 34];
                        case 13: return [4 /*yield*/, Promise.resolve().then(function () { return ofSelectCascade_component; })];
                        case 14:
                            OfSelectCascadeComponent = (_b.sent()).OfSelectCascadeComponent;
                            this.component = OfSelectCascadeComponent;
                            return [3 /*break*/, 34];
                        case 15: return [4 /*yield*/, Promise.resolve().then(function () { return ofSelectSearchServer_component; })];
                        case 16:
                            OfSelectSearchServerComponent = (_b.sent()).OfSelectSearchServerComponent;
                            this.component = OfSelectSearchServerComponent;
                            return [3 /*break*/, 34];
                        case 17: return [4 /*yield*/, Promise.resolve().then(function () { return ofCurrency_component; })];
                        case 18:
                            OfCurrencyComponent = (_b.sent()).OfCurrencyComponent;
                            this.component = OfCurrencyComponent;
                            return [3 /*break*/, 34];
                        case 19: return [4 /*yield*/, Promise.resolve().then(function () { return ofDatePicker_component; })];
                        case 20:
                            OfDatePickerComponent = (_b.sent()).OfDatePickerComponent;
                            this.component = OfDatePickerComponent;
                            return [3 /*break*/, 34];
                        case 21: return [4 /*yield*/, Promise.resolve().then(function () { return ofContentHtml_component; })];
                        case 22:
                            OfContentHtmlComponent = (_b.sent()).OfContentHtmlComponent;
                            this.component = OfContentHtmlComponent;
                            return [3 /*break*/, 34];
                        case 23: return [4 /*yield*/, Promise.resolve().then(function () { return ofNumberInput_component; })];
                        case 24:
                            OfNumberInputComponent = (_b.sent()).OfNumberInputComponent;
                            this.component = OfNumberInputComponent;
                            return [3 /*break*/, 34];
                        case 25: return [4 /*yield*/, Promise.resolve().then(function () { return ofPassword_component; })];
                        case 26:
                            OfPasswordComponent = (_b.sent()).OfPasswordComponent;
                            this.component = OfPasswordComponent;
                            return [3 /*break*/, 34];
                        case 27: return [4 /*yield*/, Promise.resolve().then(function () { return ofRadio_component; })];
                        case 28:
                            OfRadioComponent = (_b.sent()).OfRadioComponent;
                            this.component = OfRadioComponent;
                            return [3 /*break*/, 34];
                        case 29: return [4 /*yield*/, Promise.resolve().then(function () { return ofSwitch_component; })];
                        case 30:
                            OfSwitchComponent = (_b.sent()).OfSwitchComponent;
                            this.component = OfSwitchComponent;
                            return [3 /*break*/, 34];
                        case 31:
                            field = this.field;
                            this.component = field.componentRef;
                            return [3 /*break*/, 34];
                        case 32: return [4 /*yield*/, Promise.resolve().then(function () { return ofTemplateRef_component; })];
                        case 33:
                            OfTemplateRefComponent = (_b.sent()).OfTemplateRefComponent;
                            this.component = OfTemplateRefComponent;
                            return [3 /*break*/, 34];
                        case 34: return [2 /*return*/];
                    }
                });
            });
        };
        Object.defineProperty(DynamicFieldDirective.prototype, "f", {
            get: function () {
                return this.group.get(this.field.dataField) || null;
            },
            enumerable: false,
            configurable: true
        });
        DynamicFieldDirective.prototype.init$ = function () {
            var _this = this;
            if (this.field.hiddenAsync) {
                this.field.hiddenAsync.pipe(operators.takeUntil(this.destroy$))
                    .pipe(operators.debounceTime(300))
                    .subscribe(function (d) {
                    _this.field.hidden = d;
                });
            }
            if (this.field.disabledAsync) {
                this.field.disabledAsync.pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function (d) {
                    _this.field.disabled = d;
                    if (_this.f) {
                        if (d) {
                            _this.f.disable({ onlySelf: true });
                        }
                        else {
                            _this.f.enable({ onlySelf: true });
                        }
                    }
                    _this.disableExtendControl(d);
                });
            }
        };
        DynamicFieldDirective.prototype.disableExtendControl = function (d) {
            var _this = this;
            if (!AppUtilityService.isNotAnyItem(this.field.controls)) {
                this.field.controls.forEach(function (ctrl) {
                    ctrl.disabled = d;
                    var fControl = _this.group.get(ctrl.dataField);
                    if (fControl) {
                        if (d) {
                            fControl.disable({ onlySelf: true });
                        }
                        else {
                            fControl.enable({ onlySelf: true });
                        }
                    }
                });
            }
        };
        return DynamicFieldDirective;
    }());
    DynamicFieldDirective.ɵfac = function DynamicFieldDirective_Factory(t) { return new (t || DynamicFieldDirective)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ComponentFactoryResolver), i0__namespace.ɵɵdirectiveInject(i0__namespace.ViewContainerRef), i0__namespace.ɵɵdirectiveInject(DestroyRxjsService)); };
    DynamicFieldDirective.ɵdir = i0__namespace.ɵɵdefineDirective({ type: DynamicFieldDirective, selectors: [["", "ofDynamicField", ""]], inputs: { schemaModel: "schemaModel", field: "field", group: "group", ofFieldTempates: "ofFieldTempates" }, outputs: { searchEvent: "searchEvent" }, features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])] });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(DynamicFieldDirective, [{
                type: i0.Directive,
                args: [{
                        selector: '[ofDynamicField]',
                        providers: [DestroyRxjsService]
                    }]
            }], function () { return [{ type: i0__namespace.ComponentFactoryResolver }, { type: i0__namespace.ViewContainerRef }, { type: DestroyRxjsService }]; }, { schemaModel: [{
                    type: i0.Input
                }], field: [{
                    type: i0.Input
                }], group: [{
                    type: i0.Input
                }], ofFieldTempates: [{
                    type: i0.Input
                }], searchEvent: [{
                    type: i0.Output
                }] });
    })();

    var OfTextComponent = /** @class */ (function () {
        function OfTextComponent(destroy$) {
            this.destroy$ = destroy$;
            this.searchEvent = new i0.EventEmitter();
            this.keyEnter$ = new rxjs.Subject();
            this.nzSpinning = false;
        }
        OfTextComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.keyEnter$.pipe(operators.takeUntil(this.destroy$), operators.debounceTime(500), operators.distinctUntilChanged())
                .subscribe(function (d) {
                if (_this.schemaModel.isSearchBox) {
                    _this.schemaModel.searchBtnBusy = true;
                    _this.schemaModel.searchEvent$.next(d);
                    _this.searchEvent.emit(d);
                    _this.nzSpinning = false;
                }
            });
        };
        OfTextComponent.prototype.onKeyEnterControl = function () {
            if (this.schemaModel.isSearchBox) {
                this.nzSpinning = true;
                this.keyEnter$.next(this.group.getRawValue());
            }
        };
        return OfTextComponent;
    }());
    OfTextComponent.ɵfac = function OfTextComponent_Factory(t) { return new (t || OfTextComponent)(i0__namespace.ɵɵdirectiveInject(DestroyRxjsService)); };
    OfTextComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfTextComponent, selectors: [["of-text"]], outputs: { searchEvent: "searchEvent" }, features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])], decls: 3, vars: 6, consts: [[3, "nzSpinning"], [3, "formGroup", "keyup.enter"], ["nz-input", "", 3, "formControlName", "disabled", "placeholder", "maxlength"]], template: function OfTextComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "nz-spin", 0);
                i0__namespace.ɵɵelementStart(1, "form", 1);
                i0__namespace.ɵɵlistener("keyup.enter", function OfTextComponent_Template_form_keyup_enter_1_listener() { return ctx.onKeyEnterControl(); });
                i0__namespace.ɵɵelement(2, "input", 2);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("nzSpinning", ctx.nzSpinning);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵpropertyInterpolate("maxlength", ctx.field == null ? null : ctx.field.maxLength);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField)("disabled", true)("placeholder", ctx.field.placeholder);
            }
        }, directives: [i2__namespace$2.NzSpinComponent, i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace.NzInputDirective, i1__namespace$1.DefaultValueAccessor, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i1__namespace$1.MaxLengthValidator], encapsulation: 2 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfTextComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-text',
                        template: "\n      <nz-spin [nzSpinning]=\"nzSpinning\">\n          <form [formGroup]=\"group\" (keyup.enter)=\"onKeyEnterControl()\">\n              <input [formControlName]=\"field.dataField\" nz-input [disabled]=\"true\" [placeholder]=\"field.placeholder\"\n                     maxlength=\"{{ field?.maxLength }}\"/>\n          </form>\n      </nz-spin>\n\n  ",
                        providers: [DestroyRxjsService]
                    }]
            }], function () { return [{ type: DestroyRxjsService }]; }, { searchEvent: [{
                    type: i0.Output
                }] });
    })();

    var ofText_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfTextComponent: OfTextComponent
    });

    var OfCurrencyComponent = /** @class */ (function () {
        function OfCurrencyComponent() {
            this.options = {};
        }
        OfCurrencyComponent.prototype.ngOnInit = function () {
            this.options = {
                prefix: this.field.prefix,
                suffix: this.field.suffix,
                thousands: '.',
                decimal: ',',
                precision: this.field.precision
            };
        };
        return OfCurrencyComponent;
    }());
    OfCurrencyComponent.ɵfac = function OfCurrencyComponent_Factory(t) { return new (t || OfCurrencyComponent)(); };
    OfCurrencyComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfCurrencyComponent, selectors: [["of-currency"]], decls: 2, vars: 5, consts: [[3, "formGroup"], ["currencyMask", "", "nz-input", "", 1, "ord-dynamic-input", 3, "formControlName", "disabled", "placeholder", "options"]], template: function OfCurrencyComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelement(1, "input", 1);
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField)("disabled", ctx.field.disabled)("placeholder", ctx.field.placeholder)("options", ctx.field);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace.NzInputDirective, i1__namespace$1.DefaultValueAccessor, i3__namespace$1.CurrencyMaskDirective, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName], styles: ["input[_ngcontent-%COMP%]::placeholder {\n          text-align: left;\n      }"], changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfCurrencyComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-currency',
                        template: "\n      <form [formGroup]=\"group\">\n          <input\n                  currencyMask\n                  nz-input\n                  [formControlName]=\"field.dataField\"\n                  class=\"ord-dynamic-input\"\n                  [disabled]=\"field.disabled\"\n                  [placeholder]=\"field.placeholder\"\n                  [options]=\"field\"\n          />\n      </form>\n  ",
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        styles: ["\n      input::placeholder {\n          text-align: left;\n      }\n  "]
                    }]
            }], function () { return []; }, null);
    })();

    var ofCurrency_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfCurrencyComponent: OfCurrencyComponent
    });

    var _c0$5 = ["refDate"];
    var _c1$1 = ["refInput"];
    var _c2 = function (a0) { return { mask: a0 }; };
    var VALUE_ACCESSOR = {
        provide: i1$1.NG_VALUE_ACCESSOR,
        useExisting: i0.forwardRef(function () { return OfDataPickerControlComponent; }),
        multi: true
    };
    var OfDataPickerControlComponent = /** @class */ (function () {
        function OfDataPickerControlComponent() {
            this.placeHolder = 'Ngày/Tháng/Năm';
            this.mask = [/\d/, /\d/, '/', /\d/, /\d/, '/', /\d/, /\d/, /\d/, /\d/];
            this.$destroy = new rxjs.Subject();
            this.isWriteValue = false;
            this.mouseEvent$ = new rxjs.Subject();
            this.nzIcon = 'calendar';
            this.nzIcon$ = new rxjs.BehaviorSubject('calendar');
            // tslint:disable-next-line:variable-name
            this.isShowIconCalendar = true;
            this.isDisabled = false;
            this.control = new i1$1.FormControl({ value: null, disabled: true });
            this.inputValue = new i1$1.FormControl({ value: '', disabled: false });
        }
        Object.defineProperty(OfDataPickerControlComponent.prototype, "value", {
            get: function () {
                return this.control.value;
            },
            set: function (v) {
                this.control.setValue(v);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OfDataPickerControlComponent.prototype, "disabled", {
            get: function () {
                return this.isDisabled;
            },
            set: function (v) {
                this.isDisabled = v;
                if (v === true) {
                    this.inputValue.disable();
                }
                else {
                    this.inputValue.enable();
                }
            },
            enumerable: false,
            configurable: true
        });
        OfDataPickerControlComponent.prototype.onChange = function (v) {
        };
        OfDataPickerControlComponent.prototype.onTouched = function () {
        };
        OfDataPickerControlComponent.prototype.onChangeValue = function (event) {
            this.onChange(event);
        };
        OfDataPickerControlComponent.prototype.onFocus = function (event) {
            this.onTouched();
        };
        OfDataPickerControlComponent.prototype.mouseLeaveMain = function () {
            this.mouseEvent$.next('mouseLeave');
        };
        OfDataPickerControlComponent.prototype.mouseEnterMain = function () {
            this.mouseEvent$.next('mouseEnter');
        };
        OfDataPickerControlComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            rxjs.fromEvent(this.refInput.nativeElement, 'click')
                .pipe(operators.debounceTime(222), operators.takeUntil(this.$destroy)).subscribe(function () {
                _this.refDate.picker.showOverlay();
                setTimeout(function () {
                    _this.refInput.nativeElement.focus();
                });
            });
            this.refDate.nzOnOpenChange
                .pipe(operators.takeUntil(this.$destroy))
                .subscribe(function (o) {
                if (!o) {
                    setTimeout(function () {
                        _this.refInput.nativeElement.focus();
                    });
                }
            });
            this.mouseEvent$.pipe(operators.takeUntil(this.$destroy))
                .pipe(operators.debounceTime(222))
                .pipe(operators.map(function (d) {
                if (d === 'mouseLeave') {
                    return 'calendar';
                }
                if (_this.disabled) {
                    return 'calendar';
                }
                if (AppUtilityService.isNullOrEmpty(_this.control.value)) {
                    return 'calendar';
                }
                return 'close-circle';
            })).pipe(operators.tap(function (icon) {
                _this.nzIcon$.next(icon);
                _this.nzIcon = icon;
            })).subscribe();
            this.nzIcon$.next('calendar');
        };
        OfDataPickerControlComponent.prototype.ngOnDestroy = function () {
            this.$destroy.next(true);
            this.$destroy.unsubscribe();
        };
        OfDataPickerControlComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.control.valueChanges.pipe(operators.takeUntil(this.$destroy), operators.distinctUntilChanged()).subscribe(function (result) {
                if (_this.isWriteValue) {
                    if (result) {
                        var valueText = moment__namespace(result).format('DD/MM/YYYY');
                        _this.inputValue.setValue(valueText);
                    }
                    _this.onChangeValue(result);
                }
            });
            this.inputValue.valueChanges.pipe(operators.takeUntil(this.$destroy), operators.distinctUntilChanged(), operators.debounceTime(100)).subscribe(function (result) {
                try {
                    var arrStr = result.split('/');
                    if (!isNaN(arrStr[0]) && !isNaN(arrStr[1]) && !isNaN(arrStr[2])) {
                        var date = moment__namespace(result, 'DD/MM/YYYY');
                        if (date.isValid()) {
                            if (typeof _this.disabledDate === 'function') {
                                if (_this.disabledDate(date.toDate())) {
                                    _this.inputValue.setValue(null);
                                }
                                else {
                                    _this.control.setValue(date.toDate());
                                    _this.refDate.picker.hideOverlay();
                                }
                            }
                            else {
                                _this.control.setValue(date.toDate());
                                _this.refDate.picker.hideOverlay();
                            }
                        }
                        else {
                            _this.control.setValue(null);
                        }
                    }
                    else {
                        _this.control.setValue(null);
                    }
                }
                catch (e) {
                    _this.control.setValue(null);
                }
            });
        };
        //#region base ControlValueAccessor
        OfDataPickerControlComponent.prototype.writeValue = function (obj) {
            if (obj) {
                var valueText = moment__namespace(obj).format('DD/MM/YYYY');
                this.inputValue.setValue(valueText);
                this.value = moment__namespace(obj).toDate();
            }
            else {
                this.inputValue.setValue('');
                this.value = null;
            }
            this.isWriteValue = true;
        };
        OfDataPickerControlComponent.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        OfDataPickerControlComponent.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
        OfDataPickerControlComponent.prototype.setDisabledState = function (isDisabled) {
            this.isDisabled = isDisabled;
        };
        //#endregion
        OfDataPickerControlComponent.prototype.onFocusOutInputMask = function () {
            if (AppUtilityService.isNullOrEmpty(this.control.value)) {
                this.inputValue.setValue(null);
            }
        };
        OfDataPickerControlComponent.prototype.onClickIcon = function () {
            if (this.disabled) {
                return;
            }
            if (this.nzIcon === 'calendar') {
                this.refDate.picker.showOverlay();
                return;
            }
            this.nzIcon$.next('calendar');
            this.inputValue.setValue(null);
            this.control.setValue(null);
        };
        return OfDataPickerControlComponent;
    }());
    OfDataPickerControlComponent.ɵfac = function OfDataPickerControlComponent_Factory(t) { return new (t || OfDataPickerControlComponent)(); };
    OfDataPickerControlComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfDataPickerControlComponent, selectors: [["of-date-picker-ctrl"]], viewQuery: function OfDataPickerControlComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$5, true);
                i0__namespace.ɵɵviewQuery(_c1$1, true);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.refDate = _t.first);
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.refInput = _t.first);
            }
        }, inputs: { disabledDate: "disabledDate", placeHolder: "placeHolder", disabled: "disabled", control: "control" }, features: [i0__namespace.ɵɵProvidersFeature([VALUE_ACCESSOR])], decls: 7, vars: 12, consts: [[1, "main-ora-date", 3, "mouseenter", "mouseleave"], ["tabindex", "-1", "nzFormat", "dd/MM/yyyy", 1, "ora-date", 2, "width", "100%", 3, "nzPlaceHolder", "nzDisabled", "nzDisabledDate", "formControl"], ["refDate", ""], ["nz-input", "", 1, "ora-input-date", 3, "placeholder", "formControl", "textMask", "focusout"], ["refInput", ""], ["nz-icon", "", "nzTheme", "outline", 1, "ora-calendar", 3, "nzType", "click"]], template: function OfDataPickerControlComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "div", 0);
                i0__namespace.ɵɵlistener("mouseenter", function OfDataPickerControlComponent_Template_div_mouseenter_0_listener() { return ctx.mouseEnterMain(); })("mouseleave", function OfDataPickerControlComponent_Template_div_mouseleave_0_listener() { return ctx.mouseLeaveMain(); });
                i0__namespace.ɵɵelement(1, "nz-date-picker", 1, 2);
                i0__namespace.ɵɵelementStart(3, "input", 3, 4);
                i0__namespace.ɵɵlistener("focusout", function OfDataPickerControlComponent_Template_input_focusout_3_listener() { return ctx.onFocusOutInputMask(); });
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementStart(5, "i", 5);
                i0__namespace.ɵɵlistener("click", function OfDataPickerControlComponent_Template_i_click_5_listener() { return ctx.onClickIcon(); });
                i0__namespace.ɵɵpipe(6, "async");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("nzPlaceHolder", ctx.placeHolder)("nzDisabled", ctx.disabled)("nzDisabledDate", ctx.disabledDate)("formControl", ctx.control);
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("placeholder", ctx.placeHolder)("formControl", ctx.inputValue)("textMask", i0__namespace.ɵɵpureFunction1(10, _c2, ctx.mask));
                i0__namespace.ɵɵadvance(2);
                i0__namespace.ɵɵproperty("nzType", i0__namespace.ɵɵpipeBind1(6, 8, ctx.nzIcon$));
            }
        }, directives: [i1__namespace$4.NzDatePickerComponent, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlDirective, i2__namespace.NzInputDirective, i1__namespace$1.DefaultValueAccessor, i4__namespace$1.MaskedInputDirective, i3__namespace$2.ɵNzTransitionPatchDirective, i4__namespace$2.NzIconDirective], pipes: [i4__namespace.AsyncPipe], styles: [".main-ora-date {\n      position: relative;\n  }\n\n  .ora-date {\n      border: 0;\n  }\n\n  .ora-input-date {\n      position: absolute;\n      top: 0;\n      left: 0\n  }\n\n  .ora-close {\n      position: absolute;\n      top: 7px;\n      right: 5px;\n  }\n\n  .ora-calendar {\n      position: absolute;\n      top: 7px;\n      right: 5px;\n  }"], encapsulation: 2 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfDataPickerControlComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-date-picker-ctrl',
                        template: "\n      <div class=\"main-ora-date\" (mouseenter)=\"mouseEnterMain()\" (mouseleave)=\"mouseLeaveMain()\">\n          <nz-date-picker class=\"ora-date\" #refDate style=\"width:100%\" [nzPlaceHolder]=\"placeHolder\"\n                          [nzDisabled]=\"disabled\"\n                          [nzDisabledDate]=\"disabledDate\"\n                          tabindex=\"-1\"\n                          [formControl]=\"control\"\n                          nzFormat=\"dd/MM/yyyy\"></nz-date-picker>\n          <input #refInput class=\"ora-input-date\" nz-input (focusout)=\"onFocusOutInputMask()\"\n                 [placeholder]=\"placeHolder\"\n                 [formControl]=\"inputValue\"\n                 [textMask]=\"{mask: mask}\"/>\n          <i class=\"ora-calendar\" (click)=\"onClickIcon()\" nz-icon\n             [nzType]=\"nzIcon$ | async\"\n             nzTheme=\"outline\"></i>\n      </div>\n  ",
                        styles: [".main-ora-date {\n      position: relative;\n  }\n\n  .ora-date {\n      border: 0;\n  }\n\n  .ora-input-date {\n      position: absolute;\n      top: 0;\n      left: 0\n  }\n\n  .ora-close {\n      position: absolute;\n      top: 7px;\n      right: 5px;\n  }\n\n  .ora-calendar {\n      position: absolute;\n      top: 7px;\n      right: 5px;\n  }"],
                        encapsulation: i0.ViewEncapsulation.None,
                        providers: [VALUE_ACCESSOR]
                    }]
            }], function () { return []; }, { refDate: [{
                    type: i0.ViewChild,
                    args: ['refDate']
                }], refInput: [{
                    type: i0.ViewChild,
                    args: ['refInput']
                }], disabledDate: [{
                    type: i0.Input
                }], placeHolder: [{
                    type: i0.Input
                }], disabled: [{
                    type: i0.Input
                }], control: [{
                    type: i0.Input
                }] });
    })();

    var _c0$4 = ["vcDatePicker"];
    var OfDatePickerComponent = /** @class */ (function () {
        function OfDatePickerComponent(destroy$, cdr) {
            var _this = this;
            this.destroy$ = destroy$;
            this.cdr = cdr;
            this.disabledDate = function (current) {
                var _a;
                if (((_a = _this.field) === null || _a === void 0 ? void 0 : _a.dateNotGreaterThanCurrent) && !_this.maxDate) {
                    _this.maxDate = new Date();
                }
                var check = false;
                if (_this.minDate) {
                    check = check || differenceInCalendarDays__default['default'](current, _this.minDate) < 0;
                }
                if (_this.maxDate) {
                    check = check || differenceInCalendarDays__default['default'](current, _this.maxDate) > 0;
                }
                return check;
            };
        }
        OfDatePickerComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.minDate = this.field.minDate;
            this.maxDate = this.field.maxDate;
            if (this.field.minDateAsync) {
                this.field.minDateAsync.pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function (min) {
                    _this.setMinDate(min);
                });
            }
            if (this.field.maxDateAsync) {
                this.field.maxDateAsync.pipe(operators.takeUntil(this.destroy$)).subscribe(function (max) {
                    _this.setMaxDate(max);
                });
            }
            this.schemaModel.subRender(this.cdr, this.destroy$);
        };
        OfDatePickerComponent.prototype.setMinDate = function (min) {
            var d = this.convertDate(min);
            if (AppUtilityService.isNullOrEmpty(this.field.minDate)) {
                this.minDate = d;
            }
            else if (AppUtilityService.isNotNull(d) && differenceInCalendarDays__default['default'](d, this.field.minDate) > 0) {
                this.minDate = d;
            }
            else {
                this.minDate = this.field.minDate;
            }
            this.cdr.detectChanges();
        };
        OfDatePickerComponent.prototype.setMaxDate = function (max) {
            var d = this.convertDate(max);
            if (AppUtilityService.isNullOrEmpty(this.field.maxDate)) {
                this.maxDate = d;
            }
            else if (AppUtilityService.isNotNull(d) && differenceInCalendarDays__default['default'](d, this.field.maxDate) < 0) {
                this.maxDate = d;
            }
            else {
                this.maxDate = this.field.maxDate;
            }
            this.cdr.detectChanges();
        };
        OfDatePickerComponent.prototype.convertDate = function (date) {
            if (moment__namespace.isMoment(date)) {
                return date.toDate();
            }
            else {
                return date;
            }
        };
        Object.defineProperty(OfDatePickerComponent.prototype, "f", {
            get: function () {
                return this.group.get(this.field.dataField);
            },
            enumerable: false,
            configurable: true
        });
        OfDatePickerComponent.prototype.handlerTuNgayChange = function () {
            var _this = this;
            if (AppUtilityService.isNotNull(this.field.tuNgayDataField) && this.group.get(this.field.tuNgayDataField)) {
                this.group.get(this.field.tuNgayDataField).valueChanges
                    .pipe(operators.takeUntil(this.destroy$)).subscribe(function (min) {
                    _this.setMinDate(min);
                });
            }
        };
        OfDatePickerComponent.prototype.handlerDenNgayChange = function () {
            var _this = this;
            if (AppUtilityService.isNotNull(this.field.denNgayDataField) && this.group.get(this.field.denNgayDataField)) {
                this.group.get(this.field.denNgayDataField).valueChanges
                    .pipe(operators.takeUntil(this.destroy$)).subscribe(function (max) {
                    _this.setMaxDate(max);
                });
            }
        };
        OfDatePickerComponent.prototype.ngAfterContentChecked = function () {
            this.handlerDenNgayChange();
            this.handlerTuNgayChange();
        };
        return OfDatePickerComponent;
    }());
    OfDatePickerComponent.ɵfac = function OfDatePickerComponent_Factory(t) { return new (t || OfDatePickerComponent)(i0__namespace.ɵɵdirectiveInject(DestroyRxjsService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef)); };
    OfDatePickerComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfDatePickerComponent, selectors: [["of-date-picker"]], viewQuery: function OfDatePickerComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$4, true);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.vcDatePicker = _t.first);
            }
        }, features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])], decls: 3, vars: 4, consts: [[3, "formGroup"], [3, "formControlName", "disabled", "disabledDate"], ["vcDatePicker", ""]], template: function OfDatePickerComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelement(1, "of-date-picker-ctrl", 1, 2);
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField)("disabled", ctx.field.disabled)("disabledDate", ctx.disabledDate);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, OfDataPickerControlComponent, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfDatePickerComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-date-picker',
                        template: "\n      <form [formGroup]=\"group\">\n          <of-date-picker-ctrl #vcDatePicker [formControlName]=\"field.dataField\"\n                               [disabled]=\"field.disabled\"\n                               [disabledDate]=\"disabledDate\"></of-date-picker-ctrl>\n      </form>\n  ",
                        providers: [DestroyRxjsService],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return [{ type: DestroyRxjsService }, { type: i0__namespace.ChangeDetectorRef }]; }, { vcDatePicker: [{
                    type: i0.ViewChild,
                    args: ['vcDatePicker']
                }] });
    })();

    var ofDatePicker_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfDatePickerComponent: OfDatePickerComponent
    });

    var NumbersOnlyDirective = /** @class */ (function () {
        // tslint:disable-next-line:variable-name
        function NumbersOnlyDirective(_el) {
            this._el = _el;
        }
        NumbersOnlyDirective.prototype.onInputChange = function (event) {
            var initalValue = this._el.nativeElement.value;
            this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');
            if (initalValue !== this._el.nativeElement.value) {
                event.stopPropagation();
            }
        };
        return NumbersOnlyDirective;
    }());
    NumbersOnlyDirective.ɵfac = function NumbersOnlyDirective_Factory(t) { return new (t || NumbersOnlyDirective)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ElementRef)); };
    NumbersOnlyDirective.ɵdir = i0__namespace.ɵɵdefineDirective({ type: NumbersOnlyDirective, selectors: [["input", "numbersOnlyInput", ""]], hostBindings: function NumbersOnlyDirective_HostBindings(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵlistener("input", function NumbersOnlyDirective_input_HostBindingHandler($event) { return ctx.onInputChange($event); });
            }
        } });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(NumbersOnlyDirective, [{
                type: i0.Directive,
                args: [{
                        selector: 'input[numbersOnlyInput]'
                    }]
            }], function () { return [{ type: i0__namespace.ElementRef }]; }, { onInputChange: [{
                    type: i0.HostListener,
                    args: ['input', ['$event']]
                }] });
    })();

    function OfNumberInputComponent_input_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "input", 3);
        }
        if (rf & 2) {
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵpropertyInterpolate("maxlength", ctx_r0.field.maxlength);
            i0__namespace.ɵɵproperty("formControlName", ctx_r0.field.dataField)("placeholder", ctx_r0.field.placeholder);
        }
    }
    function OfNumberInputComponent_ng_template_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "nz-input-number", 4);
        }
        if (rf & 2) {
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("formControlName", ctx_r2.field.dataField)("nzPlaceHolder", ctx_r2.field.placeholder)("nzMin", ctx_r2.field.min)("nzMax", ctx_r2.field.max)("nzStep", ctx_r2.field.step);
        }
    }
    var OfNumberInputComponent = /** @class */ (function () {
        function OfNumberInputComponent() {
        }
        OfNumberInputComponent.prototype.ngOnInit = function () {
        };
        return OfNumberInputComponent;
    }());
    OfNumberInputComponent.ɵfac = function OfNumberInputComponent_Factory(t) { return new (t || OfNumberInputComponent)(); };
    OfNumberInputComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfNumberInputComponent, selectors: [["of-number-input"]], decls: 4, vars: 3, consts: [[3, "formGroup"], ["nz-input", "", "numbersOnlyInput", "", 3, "formControlName", "placeholder", "maxlength", 4, "ngIf", "ngIfElse"], ["tplNumberInput", ""], ["nz-input", "", "numbersOnlyInput", "", 3, "formControlName", "placeholder", "maxlength"], [2, "width", "100%", 3, "formControlName", "nzPlaceHolder", "nzMin", "nzMax", "nzStep"]], template: function OfNumberInputComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵtemplate(1, OfNumberInputComponent_input_1_Template, 1, 3, "input", 1);
                i0__namespace.ɵɵtemplate(2, OfNumberInputComponent_ng_template_2_Template, 1, 5, "ng-template", null, 2, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                var _r1 = i0__namespace.ɵɵreference(3);
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngIf", ctx.field.onlyKeyNumber)("ngIfElse", _r1);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i4__namespace.NgIf, i2__namespace.NzInputDirective, NumbersOnlyDirective, i1__namespace$1.DefaultValueAccessor, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i1__namespace$1.MaxLengthValidator, i5__namespace.NzInputNumberComponent], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfNumberInputComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-number-input',
                        template: "\n      <form [formGroup]=\"group\">\n          <input nz-input *ngIf=\"field.onlyKeyNumber;else tplNumberInput\"\n                 numbersOnlyInput [formControlName]=\"field.dataField\"\n                 [placeholder]=\"field.placeholder\"\n                 maxlength=\"{{ field.maxlength }}\"\n          />\n          <ng-template #tplNumberInput>\n              <nz-input-number [formControlName]=\"field.dataField\"\n                               [nzPlaceHolder]=\"field.placeholder\"\n                               style=\"width: 100%\"\n                               [nzMin]=\"field.min\"\n                               [nzMax]=\"field.max\"\n                               [nzStep]=\"field.step\">\n              </nz-input-number>\n          </ng-template>\n      </form>\n  ",
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return []; }, null);
    })();

    var ofNumberInput_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfNumberInputComponent: OfNumberInputComponent
    });

    var OfTextAreaComponent = /** @class */ (function () {
        function OfTextAreaComponent() {
        }
        return OfTextAreaComponent;
    }());
    OfTextAreaComponent.ɵfac = function OfTextAreaComponent_Factory(t) { return new (t || OfTextAreaComponent)(); };
    OfTextAreaComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfTextAreaComponent, selectors: [["of-text-area"]], decls: 2, vars: 5, consts: [[3, "formGroup"], ["nz-input", "", 3, "formControlName", "placeholder", "rows", "maxlength"]], template: function OfTextAreaComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelement(1, "textarea", 1);
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵpropertyInterpolate("maxlength", ctx.field.maxLength);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField)("placeholder", ctx.field.placeholder)("rows", ctx.field.rows);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace.NzInputDirective, i1__namespace$1.DefaultValueAccessor, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i1__namespace$1.MaxLengthValidator], encapsulation: 2 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfTextAreaComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-text-area',
                        template: "\n      <form [formGroup]=\"group\">\n          <textarea nz-input\n                    [formControlName]=\"field.dataField\"\n                    [placeholder]=\"field.placeholder\"\n                    [rows]=\"field.rows\"\n                    maxlength=\"{{field.maxLength}}\"></textarea>\n      </form>\n  "
                    }]
            }], null, null);
    })();

    var ofTextArea_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfTextAreaComponent: OfTextAreaComponent
    });

    var OfContentHtmlComponent = /** @class */ (function () {
        function OfContentHtmlComponent() {
        }
        OfContentHtmlComponent.prototype.ngOnInit = function () {
        };
        return OfContentHtmlComponent;
    }());
    OfContentHtmlComponent.ɵfac = function OfContentHtmlComponent_Factory(t) { return new (t || OfContentHtmlComponent)(); };
    OfContentHtmlComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfContentHtmlComponent, selectors: [["of-content-html"]], decls: 1, vars: 1, consts: [[3, "innerHTML"]], template: function OfContentHtmlComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelement(0, "div", 0);
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("innerHTML", ctx.field.content, i0__namespace.ɵɵsanitizeHtml);
            }
        }, encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfContentHtmlComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-content-html',
                        template: "\n      <div [innerHTML]=\"field.content\"></div>",
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return []; }, null);
    })();

    var ofContentHtml_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfContentHtmlComponent: OfContentHtmlComponent
    });

    function OfPasswordComponent_ng_template_3_Template(rf, ctx) {
        if (rf & 1) {
            var _r3_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "i", 4);
            i0__namespace.ɵɵlistener("click", function OfPasswordComponent_ng_template_3_Template_i_click_0_listener() { i0__namespace.ɵɵrestoreView(_r3_1); var ctx_r2 = i0__namespace.ɵɵnextContext(); return ctx_r2.passwordVisible = !ctx_r2.passwordVisible; });
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r1 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("nzType", ctx_r1.passwordVisible ? "eye-invisible" : "eye");
        }
    }
    var OfPasswordComponent = /** @class */ (function () {
        function OfPasswordComponent() {
            this.passwordVisible = false;
        }
        OfPasswordComponent.prototype.ngOnInit = function () {
            this.field.placeholder = this.field.placeholder || 'Nhập mật khẩu';
        };
        return OfPasswordComponent;
    }());
    OfPasswordComponent.ɵfac = function OfPasswordComponent_Factory(t) { return new (t || OfPasswordComponent)(); };
    OfPasswordComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfPasswordComponent, selectors: [["of-password"]], decls: 5, vars: 5, consts: [[3, "formGroup"], ["nzPrefixIcon", "lock", 3, "nzSuffix"], ["nz-input", "", 3, "type", "placeholder", "formControlName"], ["suffixTemplate", ""], ["nz-icon", "", 3, "nzType", "click"]], template: function OfPasswordComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelementStart(1, "nz-input-group", 1);
                i0__namespace.ɵɵelement(2, "input", 2);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtemplate(3, OfPasswordComponent_ng_template_3_Template, 1, 1, "ng-template", null, 3, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                var _r0 = i0__namespace.ɵɵreference(4);
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("nzSuffix", _r0);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵpropertyInterpolate("placeholder", ctx.field.placeholder);
                i0__namespace.ɵɵproperty("type", ctx.passwordVisible ? "text" : "password")("formControlName", ctx.field.dataField);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace.NzInputGroupComponent, i2__namespace.NzInputGroupWhitSuffixOrPrefixDirective, i2__namespace.NzInputDirective, i1__namespace$1.DefaultValueAccessor, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i3__namespace$2.ɵNzTransitionPatchDirective, i4__namespace$2.NzIconDirective], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfPasswordComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-password',
                        template: "\n      <form [formGroup]=\"group\">\n          <nz-input-group nzPrefixIcon=\"lock\" [nzSuffix]=\"suffixTemplate\">\n              <input [type]=\"passwordVisible ? 'text' : 'password'\" nz-input placeholder=\"{{field.placeholder}}\"\n                     [formControlName]=\"field.dataField\"/>\n          </nz-input-group>\n          <ng-template #suffixTemplate>\n              <i nz-icon [nzType]=\"passwordVisible ? 'eye-invisible' : 'eye'\"\n                 (click)=\"passwordVisible = !passwordVisible\"></i>\n          </ng-template>\n      </form>\n  ",
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return []; }, null);
    })();

    var ofPassword_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfPasswordComponent: OfPasswordComponent
    });

    function OfRadioComponent_label_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "label", 3);
            i0__namespace.ɵɵtext(1);
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var op_r1 = ctx.$implicit;
            i0__namespace.ɵɵproperty("nzValue", op_r1.value);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵtextInterpolate(op_r1.label);
        }
    }
    var OfRadioComponent = /** @class */ (function () {
        function OfRadioComponent() {
        }
        OfRadioComponent.prototype.ngOnInit = function () {
        };
        return OfRadioComponent;
    }());
    OfRadioComponent.ɵfac = function OfRadioComponent_Factory(t) { return new (t || OfRadioComponent)(); };
    OfRadioComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfRadioComponent, selectors: [["of-radio"]], decls: 3, vars: 4, consts: [[3, "formGroup"], [2, "width", "100%", 3, "formControlName", "nzDisabled"], ["nz-radio", "", 3, "nzValue", 4, "ngFor", "ngForOf"], ["nz-radio", "", 3, "nzValue"]], template: function OfRadioComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelementStart(1, "nz-radio-group", 1);
                i0__namespace.ɵɵtemplate(2, OfRadioComponent_label_2_Template, 2, 2, "label", 2);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField)("nzDisabled", ctx.field.disabled);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngForOf", ctx.field.items);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace$3.NzRadioGroupComponent, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i4__namespace.NgForOf, i2__namespace$3.NzRadioComponent], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfRadioComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-radio',
                        template: "\n      <form [formGroup]=\"group\">\n          <nz-radio-group [formControlName]=\"field.dataField\"\n                          [nzDisabled]=\"field.disabled\"\n                          style=\"width: 100%\">\n              <label *ngFor=\"let op of field.items\" nz-radio [nzValue]=\"op.value\">{{ op.label }}</label>\n          </nz-radio-group>\n      </form>\n  ",
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return []; }, null);
    })();

    var ofRadio_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfRadioComponent: OfRadioComponent
    });

    function OfSwitchComponent_ng_template_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "i", 4);
        }
    }
    function OfSwitchComponent_ng_template_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "i", 5);
        }
    }
    var OfSwitchComponent = /** @class */ (function () {
        function OfSwitchComponent() {
        }
        OfSwitchComponent.prototype.ngOnInit = function () {
        };
        return OfSwitchComponent;
    }());
    OfSwitchComponent.ɵfac = function OfSwitchComponent_Factory(t) { return new (t || OfSwitchComponent)(); };
    OfSwitchComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfSwitchComponent, selectors: [["of-switch"]], decls: 6, vars: 5, consts: [[3, "formGroup"], [3, "formControlName", "nzCheckedChildren", "nzUnCheckedChildren", "nzDisabled"], ["checkedTemplate", ""], ["unCheckedTemplate", ""], ["nz-icon", "", "nzType", "check"], ["nz-icon", "", "nzType", "close"]], template: function OfSwitchComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelementStart(1, "nz-switch", 1);
                i0__namespace.ɵɵtemplate(2, OfSwitchComponent_ng_template_2_Template, 1, 0, "ng-template", null, 2, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtemplate(4, OfSwitchComponent_ng_template_4_Template, 1, 0, "ng-template", null, 3, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
            }
            if (rf & 2) {
                var _r0 = i0__namespace.ɵɵreference(3);
                var _r2 = i0__namespace.ɵɵreference(5);
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField)("nzCheckedChildren", ctx.field.yesText ? ctx.field.yesText : _r0)("nzUnCheckedChildren", ctx.field.noText ? ctx.field.noText : _r2)("nzDisabled", ctx.field.disabled);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace$4.NzSwitchComponent, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i3__namespace$2.ɵNzTransitionPatchDirective, i4__namespace$2.NzIconDirective], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfSwitchComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-switch',
                        template: "\n      <form [formGroup]=\"group\">\n          <nz-switch [formControlName]=\"field.dataField\"\n                     [nzCheckedChildren]=\"field.yesText ? field.yesText : checkedTemplate\"\n                     [nzUnCheckedChildren]=\"field.noText ? field.noText : unCheckedTemplate\"\n                     [nzDisabled]=\"field.disabled\"\n          >\n              <ng-template #checkedTemplate><i nz-icon nzType=\"check\"></i></ng-template>\n              <ng-template #unCheckedTemplate><i nz-icon nzType=\"close\"></i></ng-template>\n          </nz-switch>\n      </form>\n  ",
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return []; }, null);
    })();

    var ofSwitch_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfSwitchComponent: OfSwitchComponent
    });

    var OfSelectRenderOptionPipe = /** @class */ (function () {
        function OfSelectRenderOptionPipe() {
        }
        OfSelectRenderOptionPipe.prototype.transform = function (displayText, field, option) {
            return typeof (field.renderOptionFunc) === 'function' ? field === null || field === void 0 ? void 0 : field.renderOptionFunc(option) : displayText;
        };
        return OfSelectRenderOptionPipe;
    }());
    OfSelectRenderOptionPipe.ɵfac = function OfSelectRenderOptionPipe_Factory(t) { return new (t || OfSelectRenderOptionPipe)(); };
    OfSelectRenderOptionPipe.ɵpipe = i0__namespace.ɵɵdefinePipe({ name: "ofSelectRenderOption", type: OfSelectRenderOptionPipe, pure: true });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfSelectRenderOptionPipe, [{
                type: i0.Pipe,
                args: [{
                        name: 'ofSelectRenderOption'
                    }]
            }], null, null);
    })();

    var OfOptionSelectedPipe = /** @class */ (function () {
        function OfOptionSelectedPipe() {
        }
        OfOptionSelectedPipe.prototype.transform = function (value, label, field) {
            if (AppUtilityService.isNotNull(value)) {
                if (typeof field.renderSelectedFunc === 'function') {
                    if (field === null || field === void 0 ? void 0 : field.itemSelected) {
                        return field.renderSelectedFunc(field === null || field === void 0 ? void 0 : field.itemSelected);
                    }
                    return '';
                }
                else {
                    return label;
                }
            }
            return null;
        };
        return OfOptionSelectedPipe;
    }());
    OfOptionSelectedPipe.ɵfac = function OfOptionSelectedPipe_Factory(t) { return new (t || OfOptionSelectedPipe)(); };
    OfOptionSelectedPipe.ɵpipe = i0__namespace.ɵɵdefinePipe({ name: "ofOptionSelected", type: OfOptionSelectedPipe, pure: false });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfOptionSelectedPipe, [{
                type: i0.Pipe,
                args: [{
                        name: 'ofOptionSelected',
                        pure: false
                    }]
            }], null, null);
    })();

    function OfSelectSearchServerComponent_nz_option_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "nz-option", 5);
            i0__namespace.ɵɵelement(1, "span", 6);
            i0__namespace.ɵɵpipe(2, "ofSelectRenderOption");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r5 = ctx.$implicit;
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("nzCustomContent", true)("nzLabel", option_r5.displayText)("nzValue", option_r5.value);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("innerHTML", i0__namespace.ɵɵpipeBind3(2, 4, option_r5.displayText, ctx_r0.field, option_r5), i0__namespace.ɵɵsanitizeHtml);
        }
    }
    function OfSelectSearchServerComponent_ng_template_4_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 6);
            i0__namespace.ɵɵpipe(1, "ofOptionSelected");
        }
        if (rf & 2) {
            var selected_r6 = ctx.$implicit;
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("innerHTML", i0__namespace.ɵɵpipeBind3(1, 1, selected_r6.nzValue, selected_r6.nzLabel, ctx_r2.field), i0__namespace.ɵɵsanitizeHtml);
        }
    }
    function OfSelectSearchServerComponent_ng_template_6_div_0_Template(rf, ctx) {
        if (rf & 1) {
            var _r10_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div", 9);
            i0__namespace.ɵɵelementStart(1, "nz-pagination", 10);
            i0__namespace.ɵɵlistener("nzPageIndexChange", function OfSelectSearchServerComponent_ng_template_6_div_0_Template_nz_pagination_nzPageIndexChange_1_listener($event) { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r9 = i0__namespace.ɵɵnextContext(2); return ctx_r9.nzPageIndex = $event; })("nzPageIndexChange", function OfSelectSearchServerComponent_ng_template_6_div_0_Template_nz_pagination_nzPageIndexChange_1_listener() { i0__namespace.ɵɵrestoreView(_r10_1); var ctx_r11 = i0__namespace.ɵɵnextContext(2); return ctx_r11.nzPageIndexChange(); });
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var ctx_r7 = i0__namespace.ɵɵnextContext(2);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("nzPageSize", ctx_r7.maxResultCount)("nzPageIndex", ctx_r7.nzPageIndex)("nzTotal", ctx_r7.totalItems);
        }
    }
    function OfSelectSearchServerComponent_ng_template_6_nz_spin_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "nz-spin");
        }
    }
    function OfSelectSearchServerComponent_ng_template_6_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtemplate(0, OfSelectSearchServerComponent_ng_template_6_div_0_Template, 2, 3, "div", 7);
            i0__namespace.ɵɵtemplate(1, OfSelectSearchServerComponent_ng_template_6_nz_spin_1_Template, 1, 0, "nz-spin", 8);
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngIf", ctx_r4.field.showPagination);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("ngIf", ctx_r4.isLoading);
        }
    }
    var OfSelectSearchServerComponent = /** @class */ (function () {
        function OfSelectSearchServerComponent(destroy$, cdr) {
            var _this = this;
            this.destroy$ = destroy$;
            this.cdr = cdr;
            this.options = [];
            this.option$ = new rxjs.BehaviorSubject([]);
            this.backUpItems = [];
            this.optionDebound$ = this.option$.pipe(operators.debounceTime(222)).pipe(operators.tap(function () {
                _this.triggerDetectChanges();
            }));
            this.txtSearch = '';
            this.txtSearch$ = new rxjs.Subject();
            this.skipCount = 0;
            this.totalItems = 0;
            this.nzPageIndex = 1;
            this.firstOptions = [];
            this.firstTotal = 0;
            this.isLoading = false;
            this.maxResultCount = 12;
        }
        OfSelectSearchServerComponent.prototype.ngOnInit = function () {
            this.handlerSearch();
        };
        OfSelectSearchServerComponent.prototype.handlerSearch = function () {
            var _this = this;
            this.txtSearch$.pipe(operators.takeUntil(this.destroy$))
                .pipe(operators.debounceTime(1000))
                .subscribe(function (txt) {
                _this.txtSearch = txt;
                if (AppUtilityService.isNullOrEmpty(txt)) {
                    _this.loadFirstOption();
                }
                else {
                    _this.skipCount = 0;
                    _this.nzPageIndex = 1;
                    _this.getOptionsFromBE(txt);
                }
            });
        };
        OfSelectSearchServerComponent.prototype.search = function (txt) {
            this.txtSearch$.next(txt);
        };
        OfSelectSearchServerComponent.prototype.nzOpenChange = function (open) {
            if (open) {
                this.loadFirstOption();
            }
        };
        OfSelectSearchServerComponent.prototype.trackBySelect = function (index, item) {
            return item.value;
        };
        OfSelectSearchServerComponent.prototype.loadFirstOption = function () {
            var _this = this;
            var _a;
            if (this.firstTotal > 0) {
                this.totalItems = this.firstTotal;
                this.nzPageIndex = 1;
                var opt = this.firstOptions;
                if ((_a = this.field) === null || _a === void 0 ? void 0 : _a.itemSelected) {
                    // tslint:disable-next-line:triple-equals
                    var f = opt.find(function (s) { return s.value == _this.field.itemSelected.value; });
                    if (AppUtilityService.isNullOrEmpty(f)) {
                        opt = __spread([this.field.itemSelected], this.firstOptions);
                    }
                }
                this.setOptions(opt);
            }
            else {
                this.getOptionsFromBE('', null, true);
            }
        };
        // tslint:disable-next-line:no-shadowed-variable
        OfSelectSearchServerComponent.prototype.getOptionsFromBE = function (filter, value, isFirst) {
            var _this = this;
            if (isFirst === void 0) { isFirst = false; }
            var getOneId = AppUtilityService.isNotNull(value);
            if (getOneId) {
                filter = '';
                // tslint:disable-next-line:triple-equals
                var f = ___namespace.find(this.backUpItems, function (s) { return s.value == value; });
                if (f) {
                    this.setOptions([f]);
                    return;
                }
            }
            this.isLoading = true;
            var skipCount = this.skipCount;
            var maxResultCount = (!this.field.showPagination && isFirst) ? 50 : this.maxResultCount;
            if (this.field.showPagination) {
                skipCount = (this.nzPageIndex - 1) * this.maxResultCount;
            }
            var reqBody = {
                filter: filter,
                value: value,
                maxResultCount: maxResultCount,
                skipCount: skipCount
            };
            this.field.functionService(reqBody)
                .pipe(operators.finalize(function () {
                _this.isLoading = false;
            }))
                .subscribe(function (d) {
                var options = (d === null || d === void 0 ? void 0 : d.items) || [];
                _this.backUpItems = __spread(_this.backUpItems, options);
                if (isFirst) {
                    _this.firstOptions = options;
                    _this.firstTotal = d.totalCount;
                }
                if (getOneId) {
                    _this.field.itemSelected = (d === null || d === void 0 ? void 0 : d.items[0]) || null;
                }
                if (AppUtilityService.isNullOrEmpty(value)) {
                    _this.totalItems = (d === null || d === void 0 ? void 0 : d.totalCount) || 0;
                }
                if (skipCount > 0 && !_this.field.showPagination) {
                    options = __spread(_this.options, options);
                }
                _this.setOptions(options);
                _this.skipCount = reqBody.skipCount + reqBody.maxResultCount;
            });
        };
        OfSelectSearchServerComponent.prototype.setOptions = function (options) {
            this.options = options;
            this.option$.next(options);
            this.triggerDetectChanges();
        };
        OfSelectSearchServerComponent.prototype.getItemSelected = function () {
            var _this = this;
            var value$ = this.group.get(this.field.dataField).valueChanges.pipe(operators.takeUntil(this.destroy$))
                .pipe(operators.tap(function (v) {
                if (AppUtilityService.isNullOrEmpty(v)) {
                    _this.field.itemSelected = null;
                }
                _this.triggerDetectChanges();
            })).pipe(operators.filter(function (s) { return !AppUtilityService.isNullOrEmpty(s); }));
            value$.subscribe(function (value) {
                var _a;
                // tslint:disable-next-line:triple-equals
                var f = (_a = _this.backUpItems) === null || _a === void 0 ? void 0 : _a.find(function (s) { return s.value == value; });
                if (AppUtilityService.isNotNull(f)) {
                    _this.field.itemSelected = f;
                    _this.setOptions([f]);
                    return;
                }
                else {
                    _this.getOptionsFromBE(null, value);
                }
                _this.triggerDetectChanges();
            });
        };
        Object.defineProperty(OfSelectSearchServerComponent.prototype, "f", {
            get: function () {
                return this.group.get(this.field.dataField);
            },
            enumerable: false,
            configurable: true
        });
        OfSelectSearchServerComponent.prototype.ngAfterViewInit = function () {
            this.getItemSelected();
            this.triggerDetectChanges();
            this.schemaModel.subRender(this.cdr, this.destroy$);
        };
        OfSelectSearchServerComponent.prototype.triggerDetectChanges = function () {
            var _this = this;
            setTimeout(function () {
                _this.cdr.detectChanges();
            }, 200);
        };
        OfSelectSearchServerComponent.prototype.loadMore = function () {
            if (this.field.showPagination) {
                return;
            }
            this.isLoading = true;
            if (this.skipCount > this.totalItems) {
                this.isLoading = false;
                return;
            }
            this.getOptionsFromBE(this.txtSearch, null);
        };
        OfSelectSearchServerComponent.prototype.nzPageIndexChange = function () {
            this.getOptionsFromBE(this.txtSearch);
        };
        return OfSelectSearchServerComponent;
    }());
    OfSelectSearchServerComponent.ɵfac = function OfSelectSearchServerComponent_Factory(t) { return new (t || OfSelectSearchServerComponent)(i0__namespace.ɵɵdirectiveInject(DestroyRxjsService), i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef)); };
    OfSelectSearchServerComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfSelectSearchServerComponent, selectors: [["of-select-search-server"]], features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])], decls: 8, vars: 14, consts: [[3, "formGroup"], ["nzShowSearch", "", "nzServerSearch", "", 2, "width", "100%", 3, "formControlName", "nzCustomTemplate", "nzOptionHeightPx", "nzPlaceHolder", "nzMode", "nzAllowClear", "nzMaxMultipleCount", "nzMaxTagCount", "nzDropdownRender", "nzOpenChange", "nzScrollToBottom", "nzOnSearch"], [3, "nzCustomContent", "nzLabel", "nzValue", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["tplSelectedView", ""], ["renderTemplate", ""], [3, "nzCustomContent", "nzLabel", "nzValue"], [3, "innerHTML"], ["class", "select-pagination", 4, "ngIf"], [4, "ngIf"], [1, "select-pagination"], ["nzSize", "small", 3, "nzPageSize", "nzPageIndex", "nzTotal", "nzPageIndexChange"]], template: function OfSelectSearchServerComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelementStart(1, "nz-select", 1);
                i0__namespace.ɵɵlistener("nzOpenChange", function OfSelectSearchServerComponent_Template_nz_select_nzOpenChange_1_listener($event) { return ctx.nzOpenChange($event); })("nzScrollToBottom", function OfSelectSearchServerComponent_Template_nz_select_nzScrollToBottom_1_listener() { return ctx.loadMore(); })("nzOnSearch", function OfSelectSearchServerComponent_Template_nz_select_nzOnSearch_1_listener($event) { return ctx.search($event); });
                i0__namespace.ɵɵtemplate(2, OfSelectSearchServerComponent_nz_option_2_Template, 3, 8, "nz-option", 2);
                i0__namespace.ɵɵpipe(3, "async");
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtemplate(4, OfSelectSearchServerComponent_ng_template_4_Template, 2, 5, "ng-template", null, 3, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtemplate(6, OfSelectSearchServerComponent_ng_template_6_Template, 2, 2, "ng-template", null, 4, i0__namespace.ɵɵtemplateRefExtractor);
            }
            if (rf & 2) {
                var _r1 = i0__namespace.ɵɵreference(5);
                var _r3 = i0__namespace.ɵɵreference(7);
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField)("nzCustomTemplate", _r1)("nzOptionHeightPx", 26)("nzPlaceHolder", ctx.field.placeholder)("nzMode", ctx.field.nzMode)("nzAllowClear", ctx.field.nzAllowClear)("nzMaxMultipleCount", ctx.field == null ? null : ctx.field.nzMaxMultipleCount)("nzMaxTagCount", ctx.field == null ? null : ctx.field.nzMaxTagCount)("nzDropdownRender", _r3);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngForOf", i0__namespace.ɵɵpipeBind1(3, 12, ctx.optionDebound$))("ngForTrackBy", ctx.trackBySelect);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i3__namespace.NzSelectComponent, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i4__namespace.NgForOf, i3__namespace.NzOptionComponent, i4__namespace.NgIf, i5__namespace$1.NzPaginationComponent, i2__namespace$2.NzSpinComponent], pipes: [i4__namespace.AsyncPipe, OfSelectRenderOptionPipe, OfOptionSelectedPipe], styles: [":host ::ng-deep .cdk-virtual-scroll-viewport{min-height:120px!important}.select-pagination{margin-top:8px;margin-bottom:3px}"], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfSelectSearchServerComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-select-search-server',
                        templateUrl: './of-select-search-server.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [DestroyRxjsService],
                        encapsulation: i0.ViewEncapsulation.None,
                        styleUrls: ['./of-select-search-server.component.scss']
                    }]
            }], function () { return [{ type: DestroyRxjsService }, { type: i0__namespace.ChangeDetectorRef }]; }, null);
    })();

    var ofSelectSearchServer_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfSelectSearchServerComponent: OfSelectSearchServerComponent
    });

    function OfTemplateRefComponent_span_1_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "span", 2);
            i0__namespace.ɵɵtext(1, "Ch\u01B0a c\u00F3 tempate");
            i0__namespace.ɵɵelementEnd();
        }
    }
    var _c0$3 = function (a0) { return { value: a0 }; };
    var _c1 = function (a0, a1, a2) { return { $implicit: a0, group: a1, field: a2 }; };
    var OfTemplateRefComponent = /** @class */ (function () {
        function OfTemplateRefComponent(formService) {
            this.formService = formService;
            this.ofFieldTempates = [];
            this.id = Number(new Date());
        }
        OfTemplateRefComponent.prototype.ngOnInit = function () {
            var _this = this;
            var _a;
            this.formService.createExtendControl(this.group, this.field.controls);
            this.templateRef = (_a = this.ofFieldTempates.find(function (x) { return x.id === _this.field.dataField; })) === null || _a === void 0 ? void 0 : _a.controlTemplate;
        };
        return OfTemplateRefComponent;
    }());
    OfTemplateRefComponent.ɵfac = function OfTemplateRefComponent_Factory(t) { return new (t || OfTemplateRefComponent)(i0__namespace.ɵɵdirectiveInject(OfCreateControlFormService)); };
    OfTemplateRefComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfTemplateRefComponent, selectors: [["of-template-ref"]], decls: 2, vars: 9, consts: [[3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "text-danger", 4, "ngIf"], [1, "text-danger"]], template: function OfTemplateRefComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementContainer(0, 0);
                i0__namespace.ɵɵtemplate(1, OfTemplateRefComponent_span_1_Template, 2, 0, "span", 1);
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("ngTemplateOutlet", ctx.templateRef)("ngTemplateOutletContext", i0__namespace.ɵɵpureFunction3(5, _c1, i0__namespace.ɵɵpureFunction1(3, _c0$3, ctx.id), ctx.group, ctx.field));
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngIf", !ctx.templateRef);
            }
        }, directives: [i4__namespace.NgTemplateOutlet, i4__namespace.NgIf], encapsulation: 2 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfTemplateRefComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-template-ref',
                        template: "\n      <ng-container [ngTemplateOutlet]=\"templateRef\"\n                    [ngTemplateOutletContext]=\"{ $implicit: { value: id }, group: group,field: field }\"></ng-container>\n      <span *ngIf=\"!templateRef\" class=\"text-danger\">Ch\u01B0a c\u00F3 tempate</span>\n  "
                    }]
            }], function () { return [{ type: OfCreateControlFormService }]; }, null);
    })();

    var ofTemplateRef_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfTemplateRefComponent: OfTemplateRefComponent
    });

    var ShowValidationErrorPipe = /** @class */ (function () {
        function ShowValidationErrorPipe() {
        }
        ShowValidationErrorPipe.prototype.transform = function (errors, validations, submitted) {
            if (!submitted) {
                return '';
            }
            var err = '';
            if (errors && (validations === null || validations === void 0 ? void 0 : validations.length) > 0) {
                ___namespace.forEach(validations, function (valid) {
                    if (errors[valid.name]) {
                        err = valid.message;
                        return false;
                    }
                });
            }
            return err;
        };
        return ShowValidationErrorPipe;
    }());
    ShowValidationErrorPipe.ɵfac = function ShowValidationErrorPipe_Factory(t) { return new (t || ShowValidationErrorPipe)(); };
    ShowValidationErrorPipe.ɵpipe = i0__namespace.ɵɵdefinePipe({ name: "showValidationError", type: ShowValidationErrorPipe, pure: true });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(ShowValidationErrorPipe, [{
                type: i0.Pipe,
                args: [{
                        name: 'showValidationError'
                    }]
            }], null, null);
    })();

    function OfSelectComponent_nz_option_2_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelementStart(0, "nz-option", 5);
            i0__namespace.ɵɵelement(1, "span", 6);
            i0__namespace.ɵɵpipe(2, "ofSelectRenderOption");
            i0__namespace.ɵɵelementEnd();
        }
        if (rf & 2) {
            var option_r5 = ctx.$implicit;
            var ctx_r0 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("nzCustomContent", true)("nzLabel", option_r5.displayText)("nzValue", option_r5.value);
            i0__namespace.ɵɵadvance(1);
            i0__namespace.ɵɵproperty("innerHTML", i0__namespace.ɵɵpipeBind3(2, 4, option_r5.displayText, ctx_r0.field, option_r5), i0__namespace.ɵɵsanitizeHtml);
        }
    }
    function OfSelectComponent_ng_template_3_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵelement(0, "span", 6);
            i0__namespace.ɵɵpipe(1, "ofOptionSelected");
        }
        if (rf & 2) {
            var selected_r6 = ctx.$implicit;
            var ctx_r2 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("innerHTML", i0__namespace.ɵɵpipeBind3(1, 1, selected_r6.nzValue, selected_r6.nzLabel, ctx_r2.field), i0__namespace.ɵɵsanitizeHtml);
        }
    }
    function OfSelectComponent_ng_template_5_div_0_Template(rf, ctx) {
        if (rf & 1) {
            var _r9_1 = i0__namespace.ɵɵgetCurrentView();
            i0__namespace.ɵɵelementStart(0, "div");
            i0__namespace.ɵɵelement(1, "nz-divider");
            i0__namespace.ɵɵelementStart(2, "div", 8);
            i0__namespace.ɵɵelementStart(3, "button", 9);
            i0__namespace.ɵɵlistener("click", function OfSelectComponent_ng_template_5_div_0_Template_button_click_3_listener() { i0__namespace.ɵɵrestoreView(_r9_1); var ctx_r8 = i0__namespace.ɵɵnextContext(2); return ctx_r8.selectAll(); });
            i0__namespace.ɵɵelement(4, "i", 10);
            i0__namespace.ɵɵtext(5, " Ch\u1ECDn t\u1EA5t c\u1EA3 ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementStart(6, "button", 11);
            i0__namespace.ɵɵlistener("click", function OfSelectComponent_ng_template_5_div_0_Template_button_click_6_listener() { i0__namespace.ɵɵrestoreView(_r9_1); var ctx_r10 = i0__namespace.ɵɵnextContext(2); return ctx_r10.unSelectAll(); });
            i0__namespace.ɵɵelement(7, "i", 12);
            i0__namespace.ɵɵtext(8, " B\u1ECF ch\u1ECDn ");
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementEnd();
            i0__namespace.ɵɵelementEnd();
        }
    }
    function OfSelectComponent_ng_template_5_Template(rf, ctx) {
        if (rf & 1) {
            i0__namespace.ɵɵtemplate(0, OfSelectComponent_ng_template_5_div_0_Template, 9, 0, "div", 7);
        }
        if (rf & 2) {
            var ctx_r4 = i0__namespace.ɵɵnextContext();
            i0__namespace.ɵɵproperty("ngIf", ctx_r4.field.nzMode === "multiple" && (ctx_r4.field.options == null ? null : ctx_r4.field.options.length) > 3);
        }
    }
    var OfSelectComponent = /** @class */ (function () {
        function OfSelectComponent(cdr, destroy$) {
            this.cdr = cdr;
            this.destroy$ = destroy$;
            this.options = [];
        }
        OfSelectComponent.prototype.ngOnInit = function () {
            this.setOptionsView(this.field.options);
        };
        OfSelectComponent.prototype.trackBySelect = function (index, item) {
            return item.value;
        };
        OfSelectComponent.prototype.search = function (value) {
            if (AppUtilityService.isWhitespace(value)) {
                this.setOptionsView(this.field.options);
                return;
            }
            var searchTxt = AppUtilityService.getFullTextSearch(value);
            var options = ___namespace.filter(this.field.options, function (s) {
                var ftsVietTat = AppUtilityService.searchVietTat(s.displayText);
                var checkVietTat = ftsVietTat.indexOf(searchTxt) > -1;
                if (AppUtilityService.isNullOrEmpty(s.fts)) {
                    s.fts = AppUtilityService.getFullTextSearch(s.displayText);
                }
                return s.fts.indexOf(searchTxt) > -1 || checkVietTat;
            });
            this.setOptionsView(options);
        };
        OfSelectComponent.prototype.setOptionsView = function (options) {
            ___namespace.forEach(options, function (opt) {
                opt.fts = AppUtilityService.getFullTextSearch(opt.displayText);
            });
            this.options = options;
            this.getItemSelected();
            this.cdr.detectChanges();
        };
        OfSelectComponent.prototype.selectAll = function () {
            var values = ___namespace.map(this.field.options, function (opt) {
                return opt.value;
            });
            this.group.get(this.field.dataField).patchValue(values);
            this.cdr.detectChanges();
        };
        OfSelectComponent.prototype.unSelectAll = function () {
            this.group.get(this.field.dataField).patchValue(null);
            this.cdr.detectChanges();
        };
        OfSelectComponent.prototype.handlerValueDataFieldChange = function () {
            var _this = this;
            var _a;
            var f = this.group.get(this.field.dataField);
            if (f) {
                (_a = this.group.get(this.field.dataField)) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(operators.debounceTime(111)).pipe(operators.takeUntil(this.destroy$)).subscribe(function (v) {
                    if (typeof v === 'number') {
                        f.patchValue('' + v);
                    }
                    _this.getItemSelected();
                });
            }
        };
        OfSelectComponent.prototype.getItemSelected = function () {
            var v = this.group.get(this.field.dataField).value;
            if (AppUtilityService.isNullOrEmpty(v)) {
                this.field.itemSelected = null;
                this.cdr.detectChanges();
                return;
            }
            // tslint:disable-next-line:triple-equals
            this.field.itemSelected = ___namespace.find(this.options, function (x) { return x.value == v; });
            this.cdr.detectChanges();
        };
        OfSelectComponent.prototype.ngAfterViewInit = function () {
            this.schemaModel.subRender(this.cdr, this.destroy$);
            this.handlerValueDataFieldChange();
        };
        return OfSelectComponent;
    }());
    OfSelectComponent.ɵfac = function OfSelectComponent_Factory(t) { return new (t || OfSelectComponent)(i0__namespace.ɵɵdirectiveInject(i0__namespace.ChangeDetectorRef), i0__namespace.ɵɵdirectiveInject(DestroyRxjsService)); };
    OfSelectComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfSelectComponent, selectors: [["of-select"]], inputs: { schemaModel: "schemaModel", field: "field", group: "group" }, features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])], decls: 7, vars: 11, consts: [[3, "formGroup"], ["nzShowSearch", "", "nzServerSearch", "", 2, "width", "100%", 3, "formControlName", "nzCustomTemplate", "nzPlaceHolder", "nzMode", "nzAllowClear", "nzMaxMultipleCount", "nzMaxTagCount", "nzDropdownRender", "nzOnSearch"], [3, "nzCustomContent", "nzLabel", "nzValue", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["tplSelectedView", ""], ["nzDropdownRenderTpl", ""], [3, "nzCustomContent", "nzLabel", "nzValue"], [3, "innerHTML"], [4, "ngIf"], [1, "margin-top-10", "margin-left-10", "margin-bottom-5"], ["nz-button", "", "nzType", "primary", "nzSize", "small", 3, "click"], ["nz-icon", "", "nzType", "plus"], ["nz-button", "", "nzType", "default", "nzSize", "small", 3, "click"], ["nz-icon", "", "nzType", "minus"]], template: function OfSelectComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelementStart(0, "form", 0);
                i0__namespace.ɵɵelementStart(1, "nz-select", 1);
                i0__namespace.ɵɵlistener("nzOnSearch", function OfSelectComponent_Template_nz_select_nzOnSearch_1_listener($event) { return ctx.search($event); });
                i0__namespace.ɵɵtemplate(2, OfSelectComponent_nz_option_2_Template, 3, 8, "nz-option", 2);
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵelementEnd();
                i0__namespace.ɵɵtemplate(3, OfSelectComponent_ng_template_3_Template, 2, 5, "ng-template", null, 3, i0__namespace.ɵɵtemplateRefExtractor);
                i0__namespace.ɵɵtemplate(5, OfSelectComponent_ng_template_5_Template, 1, 1, "ng-template", null, 4, i0__namespace.ɵɵtemplateRefExtractor);
            }
            if (rf & 2) {
                var _r1 = i0__namespace.ɵɵreference(4);
                var _r3 = i0__namespace.ɵɵreference(6);
                i0__namespace.ɵɵproperty("formGroup", ctx.group);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("formControlName", ctx.field.dataField)("nzCustomTemplate", _r1)("nzPlaceHolder", ctx.field.placeholder)("nzMode", ctx.field.nzMode)("nzAllowClear", ctx.field.nzAllowClear)("nzMaxMultipleCount", ctx.field == null ? null : ctx.field.nzMaxMultipleCount)("nzMaxTagCount", ctx.field == null ? null : ctx.field.nzMaxTagCount)("nzDropdownRender", _r3);
                i0__namespace.ɵɵadvance(1);
                i0__namespace.ɵɵproperty("ngForOf", ctx.options)("ngForTrackBy", ctx.trackBySelect);
            }
        }, directives: [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i3__namespace.NzSelectComponent, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlName, i4__namespace.NgForOf, i3__namespace.NzOptionComponent, i4__namespace.NgIf, i5__namespace$2.NzDividerComponent, i6__namespace.NzButtonComponent, i7__namespace.NzWaveDirective, i3__namespace$2.ɵNzTransitionPatchDirective, i4__namespace$2.NzIconDirective], pipes: [OfSelectRenderOptionPipe, OfOptionSelectedPipe], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfSelectComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-select',
                        templateUrl: './of-select.component.html',
                        providers: [DestroyRxjsService],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return [{ type: i0__namespace.ChangeDetectorRef }, { type: DestroyRxjsService }]; }, { schemaModel: [{
                    type: i0.Input
                }], field: [{
                    type: i0.Input
                }], group: [{
                    type: i0.Input
                }] });
    })();

    var ofSelect_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfSelectComponent: OfSelectComponent
    });

    var _c0$2 = ["vcSelect"];
    var OfSelectAsyncComponent = /** @class */ (function () {
        function OfSelectAsyncComponent(destroy$) {
            this.destroy$ = destroy$;
        }
        OfSelectAsyncComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.field.optionsAsync.pipe(operators.takeUntil(_this.destroy$)).subscribe(function (opt) {
                    _this.field.options = opt;
                    if (_this.vcSelect) {
                        _this.vcSelect.setOptionsView(opt);
                    }
                });
            });
        };
        return OfSelectAsyncComponent;
    }());
    OfSelectAsyncComponent.ɵfac = function OfSelectAsyncComponent_Factory(t) { return new (t || OfSelectAsyncComponent)(i0__namespace.ɵɵdirectiveInject(DestroyRxjsService)); };
    OfSelectAsyncComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfSelectAsyncComponent, selectors: [["select-async"]], viewQuery: function OfSelectAsyncComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$2, true);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.vcSelect = _t.first);
            }
        }, features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])], decls: 2, vars: 3, consts: [[3, "schemaModel", "group", "field"], ["vcSelect", ""]], template: function OfSelectAsyncComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelement(0, "of-select", 0, 1);
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("schemaModel", ctx.schemaModel)("group", ctx.group)("field", ctx.field);
            }
        }, directives: [OfSelectComponent], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfSelectAsyncComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'select-async',
                        template: "\n      <of-select #vcSelect [schemaModel]=\"schemaModel\" [group]=\"group\" [field]=\"field\"></of-select>",
                        providers: [DestroyRxjsService],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return [{ type: DestroyRxjsService }]; }, { vcSelect: [{
                    type: i0.ViewChild,
                    args: ['vcSelect']
                }] });
    })();

    var ofSelectAsync_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfSelectAsyncComponent: OfSelectAsyncComponent
    });

    var _c0$1 = ["vcSelect"];
    var OfSelectApiComponent = /** @class */ (function () {
        function OfSelectApiComponent(destroy$) {
            this.destroy$ = destroy$;
        }
        Object.defineProperty(OfSelectApiComponent.prototype, "hasCacheOption", {
            get: function () {
                return !AppUtilityService.isNullOrEmpty(this.field.keyCache);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OfSelectApiComponent.prototype, "key", {
            get: function () {
                return 'selectOpt_' + this.field.keyCache;
            },
            enumerable: false,
            configurable: true
        });
        OfSelectApiComponent.prototype.getOptionsFromApi = function () {
            if (this.hasCacheOption) {
                var cache = sessionStorage.getItem(this.key);
                if (cache) {
                    return rxjs.of(JSON.parse(cache));
                }
            }
            return this.field.functionService;
        };
        OfSelectApiComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.getOptionsFromApi().pipe(operators.takeUntil(_this.destroy$))
                    .subscribe(function (opt) {
                    if (_this.hasCacheOption && !AppUtilityService.isNotAnyItem(opt)) {
                        sessionStorage.setItem(_this.key, JSON.stringify(opt));
                    }
                    _this.field.options = opt;
                    if (_this.vcSelect) {
                        _this.vcSelect.setOptionsView(opt);
                    }
                });
            });
        };
        return OfSelectApiComponent;
    }());
    OfSelectApiComponent.ɵfac = function OfSelectApiComponent_Factory(t) { return new (t || OfSelectApiComponent)(i0__namespace.ɵɵdirectiveInject(DestroyRxjsService)); };
    OfSelectApiComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfSelectApiComponent, selectors: [["lib-of-select-api"]], viewQuery: function OfSelectApiComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0$1, true);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.vcSelect = _t.first);
            }
        }, features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])], decls: 2, vars: 3, consts: [[3, "schemaModel", "group", "field"], ["vcSelect", ""]], template: function OfSelectApiComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelement(0, "of-select", 0, 1);
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("schemaModel", ctx.schemaModel)("group", ctx.group)("field", ctx.field);
            }
        }, directives: [OfSelectComponent], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfSelectApiComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'lib-of-select-api',
                        template: "\n      <of-select #vcSelect [schemaModel]=\"schemaModel\" [group]=\"group\" [field]=\"field\"></of-select>",
                        providers: [DestroyRxjsService],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return [{ type: DestroyRxjsService }]; }, { vcSelect: [{
                    type: i0.ViewChild,
                    args: ['vcSelect']
                }] });
    })();

    var ofSelectApi_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfSelectApiComponent: OfSelectApiComponent
    });

    var _c0 = ["vcSelect"];
    var OfSelectCascadeComponent = /** @class */ (function () {
        function OfSelectCascadeComponent(destroy$) {
            this.destroy$ = destroy$;
        }
        OfSelectCascadeComponent.prototype.getOptionsFromApi = function (cascade) {
            if (this.hasCacheOption) {
                var cache = sessionStorage.getItem(this.key(cascade));
                if (cache) {
                    return rxjs.of(JSON.parse(cache));
                }
            }
            return this.field.functionService(cascade);
        };
        Object.defineProperty(OfSelectCascadeComponent.prototype, "ctrl", {
            get: function () {
                return this.group.get(this.field.dataField);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(OfSelectCascadeComponent.prototype, "hasCacheOption", {
            get: function () {
                return !AppUtilityService.isNullOrEmpty(this.field.keyCache);
            },
            enumerable: false,
            configurable: true
        });
        OfSelectCascadeComponent.prototype.key = function (cascade) {
            return 'selectOpt_' + this.field.keyCache + cascade;
        };
        OfSelectCascadeComponent.prototype.disableIfCascadeEmpty = function (cascade) {
            var ctrl = this.group.get(this.field.dataField);
            if (AppUtilityService.isNullOrEmpty(cascade)) {
                ctrl.disable({ onlySelf: true });
            }
            else {
                if (!this.field.disabled) {
                    ctrl.enable({ onlySelf: true });
                }
            }
        };
        OfSelectCascadeComponent.prototype.setOptionsForView = function (options) {
            if (this.vcSelect) {
                this.vcSelect.setOptionsView(options);
            }
            this.field.options = options;
        };
        OfSelectCascadeComponent.prototype.checkCurrentValue = function (options) {
            var _this = this;
            if (AppUtilityService.isNotNull(this.ctrl.value)) {
                // tslint:disable-next-line:triple-equals
                var f = options.find(function (x) { return x.value == _this.ctrl.value; });
                if (AppUtilityService.isNullOrEmpty(f)) {
                    this.ctrl.patchValue(null);
                }
            }
        };
        OfSelectCascadeComponent.prototype.handlerCascadeChange = function () {
            var _this = this;
            var _a;
            var cascadeField = this.group.get((_a = this.field) === null || _a === void 0 ? void 0 : _a.cascadeField);
            if (cascadeField) {
                cascadeField.valueChanges
                    .pipe(operators.debounceTime(111), operators.takeUntil(this.destroy$), operators.distinctUntilChanged())
                    .subscribe(function (cascade) {
                    _this.disableIfCascadeEmpty(cascade);
                    var ctrl = _this.group.get(_this.field.dataField);
                    if (AppUtilityService.isNullOrEmpty(cascade)) {
                        ctrl.patchValue(null);
                        _this.setOptionsForView([]);
                    }
                    else {
                        _this.getOptionsFromApi(cascade).pipe(operators.takeUntil(_this.destroy$))
                            .subscribe(function (opt) {
                            if (AppUtilityService.isNotAnyItem(opt)) {
                                ctrl.patchValue(null);
                                _this.setOptionsForView([]);
                            }
                            else {
                                if (_this.hasCacheOption) {
                                    sessionStorage.setItem(_this.key(cascade), JSON.stringify(opt));
                                }
                                _this.setOptionsForView(opt);
                                _this.checkCurrentValue(opt);
                            }
                        });
                    }
                });
            }
        };
        OfSelectCascadeComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            setTimeout(function () {
                _this.ctrl.disable({ onlySelf: true });
                _this.handlerCascadeChange();
            }, 300);
        };
        return OfSelectCascadeComponent;
    }());
    OfSelectCascadeComponent.ɵfac = function OfSelectCascadeComponent_Factory(t) { return new (t || OfSelectCascadeComponent)(i0__namespace.ɵɵdirectiveInject(DestroyRxjsService)); };
    OfSelectCascadeComponent.ɵcmp = i0__namespace.ɵɵdefineComponent({ type: OfSelectCascadeComponent, selectors: [["of-select-cascade"]], viewQuery: function OfSelectCascadeComponent_Query(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵviewQuery(_c0, true);
            }
            if (rf & 2) {
                var _t = void 0;
                i0__namespace.ɵɵqueryRefresh(_t = i0__namespace.ɵɵloadQuery()) && (ctx.vcSelect = _t.first);
            }
        }, features: [i0__namespace.ɵɵProvidersFeature([DestroyRxjsService])], decls: 2, vars: 3, consts: [[3, "schemaModel", "group", "field"], ["vcSelect", ""]], template: function OfSelectCascadeComponent_Template(rf, ctx) {
            if (rf & 1) {
                i0__namespace.ɵɵelement(0, "of-select", 0, 1);
            }
            if (rf & 2) {
                i0__namespace.ɵɵproperty("schemaModel", ctx.schemaModel)("group", ctx.group)("field", ctx.field);
            }
        }, directives: [OfSelectComponent], encapsulation: 2, changeDetection: 0 });
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfSelectCascadeComponent, [{
                type: i0.Component,
                args: [{
                        selector: 'of-select-cascade',
                        template: "\n      <of-select #vcSelect [schemaModel]=\"schemaModel\" [group]=\"group\" [field]=\"field\"></of-select>",
                        providers: [DestroyRxjsService],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush
                    }]
            }], function () { return [{ type: DestroyRxjsService }]; }, { vcSelect: [{
                    type: i0.ViewChild,
                    args: ['vcSelect']
                }] });
    })();

    var ofSelectCascade_component = /*#__PURE__*/Object.freeze({
        __proto__: null,
        OfSelectCascadeComponent: OfSelectCascadeComponent
    });

    var Of = [
        OfDynamicComponent,
        DynamicFieldDirective,
        OfTextComponent,
        ShowValidationErrorPipe,
        OfCheckBoxComponent,
        OfCurrencyComponent,
        OfDatePickerComponent,
        OfDataPickerControlComponent,
        OfTextAreaComponent,
        OfContentHtmlComponent,
        OfNumberInputComponent,
        NumbersOnlyDirective,
        OfPasswordComponent,
        OfRadioComponent,
        OfSwitchComponent,
        OfOptionSelectedPipe,
        OfSelectRenderOptionPipe,
        OfSelectSearchServerComponent,
        OfTemplateRefComponent,
        OfFieldComponent,
        OfSelectComponent,
        OfSelectAsyncComponent,
        OfSelectApiComponent,
        OfSelectCascadeComponent
    ];
    var OfModule = /** @class */ (function () {
        function OfModule() {
        }
        OfModule.forChild = function () {
            return {
                ngModule: OfModule,
                providers: []
            };
        };
        OfModule.forLazy = function () {
            return new i1$2.LazyModuleFactory(OfModule.forChild());
        };
        return OfModule;
    }());
    OfModule.ɵmod = i0__namespace.ɵɵdefineNgModule({ type: OfModule });
    OfModule.ɵinj = i0__namespace.ɵɵdefineInjector({ factory: function OfModule_Factory(t) { return new (t || OfModule)(); }, imports: [[i1$2.CoreModule,
                ng_theme_shared.ThemeSharedModule,
                OfRoutingModule,
                AntDesignModule,
                i3$1.CurrencyMaskModule,
                i4$3.TextMaskModule]] });
    (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(OfModule, { declarations: [OfComponent, OfDynamicComponent,
                DynamicFieldDirective,
                OfTextComponent,
                ShowValidationErrorPipe,
                OfCheckBoxComponent,
                OfCurrencyComponent,
                OfDatePickerComponent,
                OfDataPickerControlComponent,
                OfTextAreaComponent,
                OfContentHtmlComponent,
                OfNumberInputComponent,
                NumbersOnlyDirective,
                OfPasswordComponent,
                OfRadioComponent,
                OfSwitchComponent,
                OfOptionSelectedPipe,
                OfSelectRenderOptionPipe,
                OfSelectSearchServerComponent,
                OfTemplateRefComponent,
                OfFieldComponent,
                OfSelectComponent,
                OfSelectAsyncComponent,
                OfSelectApiComponent,
                OfSelectCascadeComponent], imports: [i1$2.CoreModule,
                ng_theme_shared.ThemeSharedModule,
                OfRoutingModule,
                AntDesignModule,
                i3$1.CurrencyMaskModule,
                i4$3.TextMaskModule], exports: [OfComponent,
                OfDynamicComponent,
                OfFieldComponent] });
    })();
    /*@__PURE__*/ (function () {
        i0__namespace.ɵsetClassMetadata(OfModule, [{
                type: i0.NgModule,
                args: [{
                        declarations: [OfComponent, Of],
                        imports: [i1$2.CoreModule,
                            ng_theme_shared.ThemeSharedModule,
                            OfRoutingModule,
                            AntDesignModule,
                            i3$1.CurrencyMaskModule,
                            i4$3.TextMaskModule],
                        exports: [
                            OfComponent,
                            OfDynamicComponent,
                            OfFieldComponent
                        ]
                    }]
            }], null, null);
    })();
    i0__namespace.ɵɵsetComponentScope(OfDynamicComponent, [i1__namespace$1.ɵangular_packages_forms_forms_y, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.FormGroupDirective, i2__namespace$5.NzRowDirective, i4__namespace.NgForOf, i4__namespace.NgIf, i2__namespace$5.NzColDirective, i4__namespace.NgClass, i4__namespace$3.NzFormLabelComponent, DynamicFieldDirective, i6__namespace.NzButtonComponent, i7__namespace.NzWaveDirective, i3__namespace$2.ɵNzTransitionPatchDirective], [ShowValidationErrorPipe]);

    /*
     * Public API Surface of of
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.OfCheckBoxModel = OfCheckBoxModel;
    exports.OfComponent = OfComponent;
    exports.OfComponentRefModel = OfComponentRefModel;
    exports.OfContentHtmlModel = OfContentHtmlModel;
    exports.OfControlModel = OfControlModel;
    exports.OfCurrencyModel = OfCurrencyModel;
    exports.OfDateModel = OfDateModel;
    exports.OfDynamicComponent = OfDynamicComponent;
    exports.OfExtendControlModel = OfExtendControlModel;
    exports.OfFieldComponent = OfFieldComponent;
    exports.OfModule = OfModule;
    exports.OfNumberModel = OfNumberModel;
    exports.OfPwdModel = OfPwdModel;
    exports.OfRadioModel = OfRadioModel;
    exports.OfSchemaModel = OfSchemaModel;
    exports.OfSelectApiModel = OfSelectApiModel;
    exports.OfSelectAsyncModel = OfSelectAsyncModel;
    exports.OfSelectCascadeModel = OfSelectCascadeModel;
    exports.OfSelectModel = OfSelectModel;
    exports.OfSelectSearchServerModel = OfSelectSearchServerModel;
    exports.OfService = OfService;
    exports.OfSwitchModel = OfSwitchModel;
    exports.OfTemplateRefModel = OfTemplateRefModel;
    exports.OfTextAreaModel = OfTextAreaModel;
    exports.OfTextModel = OfTextModel;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=of.umd.js.map
